import { Schema, SObjectDefinition, DateString, BlobString, Address } from 'jsforce';

type Fields$AcceptedEventRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$AcceptedEventRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AcceptedEventRelation = {
  //
};

interface SObjectDefinition$AcceptedEventRelation extends SObjectDefinition<'AcceptedEventRelation'> {
    Name: 'AcceptedEventRelation';
    Fields: Fields$AcceptedEventRelation;
    ParentReferences: ParentReferences$AcceptedEventRelation;
    ChildRelationships: ChildRelationships$AcceptedEventRelation;
  }

type Fields$Account = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  Name: string;
  Type: string | null;
  ParentId: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  Phone: string | null;
  Fax: string | null;
  AccountNumber: string | null;
  Website: string | null;
  PhotoUrl: string | null;
  Sic: string | null;
  Industry: string | null;
  AnnualRevenue: number | null;
  NumberOfEmployees: number | null;
  Ownership: string | null;
  TickerSymbol: string | null;
  Description: string | null;
  Rating: string | null;
  Site: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsCustomerPortal: boolean;
  Jigsaw: string | null;
  JigsawCompanyId: string | null;
  AccountSource: string | null;
  SicDesc: string | null;
  sfdo_grants__Tax_ID__c: string | null;
  Codice_amministrativo__c: string | null;
  Acronimo__c: string | null;
  Active__c: number | null;
  Area_geografica__c: string | null;
  Categoria__c: string | null;
  Codice_Fiscale_RL__c: string | null;
  Codice_fiscale__c: string | null;
  Cognome_responsabile__c: string | null;
  Data_Nascita_RL__c: DateString | null;
  Data_accreditamento__c: DateString | null;
  Esistenza_candidature__c: number | null;
  Grado_Scuola__c: string | null;
  Livello_accesso__c: string | null;
  Luogo_Nascita_RL__c: string | null;
  Mapping_Tipologia_Ente__c: string | null;
  Nome_responsabile__c: string | null;
  NumericaClusterToClusterRange__c: string | null;
  Numerica_Cluster__c: number | null;
  PEC__c: string | null;
  Pratica_Classificazione__c: string | null;
  Regione__c: string | null;
  Stato_Pratica_Classificazione__c: string | null;
  Tech_Implementation_User__c: string | null;
  Tipologia_Istat__c: string | null;
  Tipologia_Istat_eccezioni__c: string | null;
  Tipologia__c: string | null;
  Tipologia_riclassificata__c: string | null;
  Titolo_responsabile__c: string | null;
  ClusterRangeClassificazione__c: string | null;
  Area_40_60__c: string | null;
  Tipologia_Ente__c: string | null;
  Integrato_Cie__c: boolean;
  Integrato_Spid__c: boolean;
  Data_Esercizio_CIE__c: DateString | null;
  Data_Esercizio_SPID__c: DateString | null;
  Integrato_CIE_Fondo_Innovazione__c: boolean;
  Integrato_SPID_Fondo_Innovazione__c: boolean;
  Report_MC__c: string | null;
  Account_Manager__c: string | null;
  Protocollo_SPID__c: string | null;
  Asseveratore__c: string | null;
  Operation_Assistant__c: string | null;
  Variazione_RL__c: boolean;
  Tipologia_Istat_eccezioni_ACN__c: string | null;
  Tipologia_Riclassificata_ACN__c: string | null;
  Tipologia_Ente_ACN__c: string | null;
  Pratica_Piano_di_Migrazione__c: string | null;
  Stato_Pratica_Piano_di_Migrazione__c: string | null;
  Codice_fiscale_firmatario__c: string | null;
  Cognome_firmatario__c: string | null;
  Data_nascita_firmatario__c: DateString | null;
  Luogo_nascita_firmatario__c: string | null;
  Nome_firmatario__c: string | null;
  Qualifica_firmatario__c: string | null;
  Area_Pubblica__c: boolean;
  Misura11__c: boolean;
  Qualifica__c: string | null;
  Asseveratore_1_2_Multimisura_1_1__c: string | null;
  Asseveratore_1_4_1__c: string | null;
  Asseveratore_misure_automatiche__c: string | null;
  Data_Esercizio_CIE_OIDC__c: DateString | null;
  Data_Esercizio_CIE_SAML__c: DateString | null;
  Protocollo_CIE__c: string | null;
  Codice_fiscale_firmatario_11__c: string | null;
  Cognome_firmatario_11__c: string | null;
  Data_nascita_firmatario_11__c: DateString | null;
  Luogo_nascita_firmatario_11__c: string | null;
  Nome_firmatario_11__c: string | null;
  Qualifica_firmatario_11__c: string | null;
  Asseveratore_1_1__c: string | null;
  Asseveratore_Multimisura__c: string | null;
  Denominazione_Associazione__c: string | null;
  Ente_capofila__c: string | null;
  Forma_Associata__c: string | null;
  Importo_SUAP__c: number | null;
  Misura223__c: boolean;
  Data_Soppressione_Ente__c: DateString | null;
  Data_variazione_ipa__c: DateString | null;
  Stato_ente__c: string | null;
  Stato_giuridico__c: string | null;
  Stato_ipa__c: string | null;
  Variazione_destinazione__c: string | null;
  EnteIbridoDFP__c: boolean;
  DataPrevistaSoppressioneEnte__c: DateString | null;
  Sesso_RL__c: string | null;
  Sesso_firmatario_11__c: string | null;
  Municipality_11__c: string | null;
  Municipality_RL__c: string | null;
  Eccezione_Allegato_Enti_Terzi__c: boolean;
  Numerica_Cluster_DFP__c: number | null;
  PecPresentesuIPA__c: boolean;
  NumericaClusterToClusterRangeDFP__c: string | null;
  Numerica_Cluster_Province__c: number | null;
  Numerica_Cluster_Range_Province__c: string | null;
};

type ParentReferences$Account = {
  //
  MasterRecord: SObjectDefinition$Account | null;
  Parent: SObjectDefinition$Account | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Mapping_Tipologia_Ente__r: SObjectDefinition$Account | null;
  Pratica_Classificazione__r: SObjectDefinition$Case | null;
  Tech_Implementation_User__r: SObjectDefinition$User | null;
  Account_Manager__r: SObjectDefinition$User | null;
  Asseveratore__r: SObjectDefinition$User | null;
  Operation_Assistant__r: SObjectDefinition$User | null;
  Pratica_Piano_di_Migrazione__r: SObjectDefinition$Case | null;
  Asseveratore_1_2_Multimisura_1_1__r: SObjectDefinition$User | null;
  Asseveratore_1_4_1__r: SObjectDefinition$User | null;
  Asseveratore_misure_automatiche__r: SObjectDefinition$User | null;
  Asseveratore_1_1__r: SObjectDefinition$User | null;
  Asseveratore_Multimisura__r: SObjectDefinition$User | null;
  Ente_capofila__r: SObjectDefinition$Account | null;
  Municipality_11__r: SObjectDefinition$sis_Municipality__c | null;
  Municipality_RL__r: SObjectDefinition$sis_Municipality__c | null;
};

type ChildRelationships$Account = {
  //
  ChildAccounts: SObjectDefinition$Account;
  AccountBrands: SObjectDefinition$AccountBrand;
  AccountContactRoles: SObjectDefinition$AccountContactRole;
  Feeds: SObjectDefinition$AccountFeed;
  Histories: SObjectDefinition$AccountHistory;
  AccountPartnersFrom: SObjectDefinition$AccountPartner;
  AccountPartnersTo: SObjectDefinition$AccountPartner;
  Shares: SObjectDefinition$AccountShare;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Assets: SObjectDefinition$Asset;
  ProvidedAssets: SObjectDefinition$Asset;
  ServicedAssets: SObjectDefinition$Asset;
  AssociatedLocations: SObjectDefinition$AssociatedLocation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  RelatedAuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  BusinessLicenseApplicationAccount: SObjectDefinition$BusinessLicenseApplication;
  BusinessProfiles: SObjectDefinition$BusinessProfile;
  Cases: SObjectDefinition$Case;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Contacts: SObjectDefinition$Contact;
  ContactPointAddresses: SObjectDefinition$ContactPointAddress;
  ContactPointEmails: SObjectDefinition$ContactPointEmail;
  ContactPointPhones: SObjectDefinition$ContactPointPhone;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Contracts: SObjectDefinition$Contract;
  DelegatedAccounts: SObjectDefinition$DelegatedAccount;
  ManagedAccount: SObjectDefinition$DelegatedAccount;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  Entitlements: SObjectDefinition$Entitlement;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  IndividualApplicationAccount: SObjectDefinition$IndividualApplication;
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  OpportunityPartnersTo: SObjectDefinition$OpportunityPartner;
  Orders: SObjectDefinition$Order;
  PartnersFrom: SObjectDefinition$Partner;
  PartnersTo: SObjectDefinition$Partner;
  PersonEmploymentDetails: SObjectDefinition$PersonEmployment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  PublicComplaintAccount: SObjectDefinition$PublicComplaint;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  ServiceContracts: SObjectDefinition$ServiceContract;
  ServiceResources: SObjectDefinition$ServiceResource;
  Personas: SObjectDefinition$SocialPersona;
  Posts: SObjectDefinition$SocialPost;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Users: SObjectDefinition$User;
  RelatedRecords: SObjectDefinition$VoiceCall;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$Account extends SObjectDefinition<'Account'> {
    Name: 'Account';
    Fields: Fields$Account;
    ParentReferences: ParentReferences$Account;
    ChildRelationships: ChildRelationships$Account;
  }

type Fields$AccountBrand = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string;
  CompanyName: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Website: string | null;
  Email: string | null;
  Phone: string | null;
  LogoId: string | null;
  LogoUrl: string | null;
};

type ParentReferences$AccountBrand = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account;
  Logo: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$AccountBrand = {
  //
  Shares: SObjectDefinition$AccountBrandShare;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
};

interface SObjectDefinition$AccountBrand extends SObjectDefinition<'AccountBrand'> {
    Name: 'AccountBrand';
    Fields: Fields$AccountBrand;
    ParentReferences: ParentReferences$AccountBrand;
    ChildRelationships: ChildRelationships$AccountBrand;
  }

type Fields$AccountBrandShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AccountBrandShare = {
  //
  Parent: SObjectDefinition$AccountBrand;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountBrandShare = {
  //
};

interface SObjectDefinition$AccountBrandShare extends SObjectDefinition<'AccountBrandShare'> {
    Name: 'AccountBrandShare';
    Fields: Fields$AccountBrandShare;
    ParentReferences: ParentReferences$AccountBrandShare;
    ChildRelationships: ChildRelationships$AccountBrandShare;
  }

type Fields$AccountChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Type: string | null;
  ParentId: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  Phone: string | null;
  Fax: string | null;
  AccountNumber: string | null;
  Website: string | null;
  Sic: string | null;
  Industry: string | null;
  AnnualRevenue: number | null;
  NumberOfEmployees: number | null;
  Ownership: string | null;
  TickerSymbol: string | null;
  Description: string | null;
  Rating: string | null;
  Site: string | null;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Jigsaw: string | null;
  JigsawCompanyId: string | null;
  AccountSource: string | null;
  SicDesc: string | null;
  sfdo_grants__Tax_ID__c: string | null;
  Codice_amministrativo__c: string | null;
  Acronimo__c: string | null;
  Active__c: number | null;
  Area_geografica__c: string | null;
  Categoria__c: string | null;
  Codice_Fiscale_RL__c: string | null;
  Codice_fiscale__c: string | null;
  Cognome_responsabile__c: string | null;
  Data_Nascita_RL__c: DateString | null;
  Data_accreditamento__c: DateString | null;
  Esistenza_candidature__c: number | null;
  Grado_Scuola__c: string | null;
  Livello_accesso__c: string | null;
  Luogo_Nascita_RL__c: string | null;
  Mapping_Tipologia_Ente__c: string | null;
  Nome_responsabile__c: string | null;
  NumericaClusterToClusterRange__c: string | null;
  Numerica_Cluster__c: number | null;
  PEC__c: string | null;
  Pratica_Classificazione__c: string | null;
  Regione__c: string | null;
  Stato_Pratica_Classificazione__c: string | null;
  Tech_Implementation_User__c: string | null;
  Tipologia_Istat__c: string | null;
  Tipologia_Istat_eccezioni__c: string | null;
  Tipologia__c: string | null;
  Tipologia_riclassificata__c: string | null;
  Titolo_responsabile__c: string | null;
  ClusterRangeClassificazione__c: string | null;
  Area_40_60__c: string | null;
  Tipologia_Ente__c: string | null;
  Integrato_Cie__c: boolean;
  Integrato_Spid__c: boolean;
  Data_Esercizio_CIE__c: DateString | null;
  Data_Esercizio_SPID__c: DateString | null;
  Integrato_CIE_Fondo_Innovazione__c: boolean;
  Integrato_SPID_Fondo_Innovazione__c: boolean;
  Report_MC__c: string | null;
  Account_Manager__c: string | null;
  Protocollo_SPID__c: string | null;
  Asseveratore__c: string | null;
  Operation_Assistant__c: string | null;
  Variazione_RL__c: boolean;
  Tipologia_Istat_eccezioni_ACN__c: string | null;
  Tipologia_Riclassificata_ACN__c: string | null;
  Tipologia_Ente_ACN__c: string | null;
  Pratica_Piano_di_Migrazione__c: string | null;
  Stato_Pratica_Piano_di_Migrazione__c: string | null;
  Codice_fiscale_firmatario__c: string | null;
  Cognome_firmatario__c: string | null;
  Data_nascita_firmatario__c: DateString | null;
  Luogo_nascita_firmatario__c: string | null;
  Nome_firmatario__c: string | null;
  Qualifica_firmatario__c: string | null;
  Area_Pubblica__c: boolean;
  Misura11__c: boolean;
  Qualifica__c: string | null;
  Asseveratore_1_2_Multimisura_1_1__c: string | null;
  Asseveratore_1_4_1__c: string | null;
  Asseveratore_misure_automatiche__c: string | null;
  Data_Esercizio_CIE_OIDC__c: DateString | null;
  Data_Esercizio_CIE_SAML__c: DateString | null;
  Protocollo_CIE__c: string | null;
  Codice_fiscale_firmatario_11__c: string | null;
  Cognome_firmatario_11__c: string | null;
  Data_nascita_firmatario_11__c: DateString | null;
  Luogo_nascita_firmatario_11__c: string | null;
  Nome_firmatario_11__c: string | null;
  Qualifica_firmatario_11__c: string | null;
  Asseveratore_1_1__c: string | null;
  Asseveratore_Multimisura__c: string | null;
  Denominazione_Associazione__c: string | null;
  Ente_capofila__c: string | null;
  Forma_Associata__c: string | null;
  Importo_SUAP__c: number | null;
  Misura223__c: boolean;
  Data_Soppressione_Ente__c: DateString | null;
  Data_variazione_ipa__c: DateString | null;
  Stato_ente__c: string | null;
  Stato_giuridico__c: string | null;
  Stato_ipa__c: string | null;
  Variazione_destinazione__c: string | null;
  EnteIbridoDFP__c: boolean;
  DataPrevistaSoppressioneEnte__c: DateString | null;
  Sesso_RL__c: string | null;
  Sesso_firmatario_11__c: string | null;
  Municipality_11__c: string | null;
  Municipality_RL__c: string | null;
  Eccezione_Allegato_Enti_Terzi__c: boolean;
  Numerica_Cluster_DFP__c: number | null;
  PecPresentesuIPA__c: boolean;
  NumericaClusterToClusterRangeDFP__c: string | null;
  Numerica_Cluster_Province__c: number | null;
  Numerica_Cluster_Range_Province__c: string | null;
};

type ParentReferences$AccountChangeEvent = {
  //
};

type ChildRelationships$AccountChangeEvent = {
  //
};

interface SObjectDefinition$AccountChangeEvent extends SObjectDefinition<'AccountChangeEvent'> {
    Name: 'AccountChangeEvent';
    Fields: Fields$AccountChangeEvent;
    ParentReferences: ParentReferences$AccountChangeEvent;
    ChildRelationships: ChildRelationships$AccountChangeEvent;
  }

type Fields$AccountContactRole = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AccountId: string;
  ContactId: string;
  Role: string | null;
  IsPrimary: boolean;
};

type ParentReferences$AccountContactRole = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account;
  Contact: SObjectDefinition$Contact;
};

type ChildRelationships$AccountContactRole = {
  //
};

interface SObjectDefinition$AccountContactRole extends SObjectDefinition<'AccountContactRole'> {
    Name: 'AccountContactRole';
    Fields: Fields$AccountContactRole;
    ParentReferences: ParentReferences$AccountContactRole;
    ChildRelationships: ChildRelationships$AccountContactRole;
  }

type Fields$AccountContactRoleChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  AccountId: string | null;
  ContactId: string | null;
  Role: string | null;
  IsPrimary: boolean;
};

type ParentReferences$AccountContactRoleChangeEvent = {
  //
};

type ChildRelationships$AccountContactRoleChangeEvent = {
  //
};

interface SObjectDefinition$AccountContactRoleChangeEvent extends SObjectDefinition<'AccountContactRoleChangeEvent'> {
    Name: 'AccountContactRoleChangeEvent';
    Fields: Fields$AccountContactRoleChangeEvent;
    ParentReferences: ParentReferences$AccountContactRoleChangeEvent;
    ChildRelationships: ChildRelationships$AccountContactRoleChangeEvent;
  }

type Fields$AccountFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AccountFeed = {
  //
  Parent: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AccountFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AccountFeed extends SObjectDefinition<'AccountFeed'> {
    Name: 'AccountFeed';
    Fields: Fields$AccountFeed;
    ParentReferences: ParentReferences$AccountFeed;
    ChildRelationships: ChildRelationships$AccountFeed;
  }

type Fields$AccountHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AccountId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AccountHistory = {
  //
  Account: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountHistory = {
  //
};

interface SObjectDefinition$AccountHistory extends SObjectDefinition<'AccountHistory'> {
    Name: 'AccountHistory';
    Fields: Fields$AccountHistory;
    ParentReferences: ParentReferences$AccountHistory;
    ChildRelationships: ChildRelationships$AccountHistory;
  }

type Fields$AccountPartner = {
  //
  Id: string;
  AccountFromId: string;
  AccountToId: string;
  OpportunityId: string | null;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ReversePartnerId: string | null;
};

type ParentReferences$AccountPartner = {
  //
  AccountFrom: SObjectDefinition$Account;
  AccountTo: SObjectDefinition$Account;
  Opportunity: SObjectDefinition$Opportunity | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountPartner = {
  //
};

interface SObjectDefinition$AccountPartner extends SObjectDefinition<'AccountPartner'> {
    Name: 'AccountPartner';
    Fields: Fields$AccountPartner;
    ParentReferences: ParentReferences$AccountPartner;
    ChildRelationships: ChildRelationships$AccountPartner;
  }

type Fields$AccountShare = {
  //
  Id: string;
  AccountId: string;
  UserOrGroupId: string;
  AccountAccessLevel: string;
  OpportunityAccessLevel: string;
  CaseAccessLevel: string;
  ContactAccessLevel: string | null;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AccountShare = {
  //
  Account: SObjectDefinition$Account;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountShare = {
  //
};

interface SObjectDefinition$AccountShare extends SObjectDefinition<'AccountShare'> {
    Name: 'AccountShare';
    Fields: Fields$AccountShare;
    ParentReferences: ParentReferences$AccountShare;
    ChildRelationships: ChildRelationships$AccountShare;
  }

type Fields$Accreditation = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Accreditation = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Accreditation = {
  //
  Feeds: SObjectDefinition$AccreditationFeed;
  Histories: SObjectDefinition$AccreditationHistory;
  Shares: SObjectDefinition$AccreditationShare;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Accreditation extends SObjectDefinition<'Accreditation'> {
    Name: 'Accreditation';
    Fields: Fields$Accreditation;
    ParentReferences: ParentReferences$Accreditation;
    ChildRelationships: ChildRelationships$Accreditation;
  }

type Fields$AccreditationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AccreditationFeed = {
  //
  Parent: SObjectDefinition$Accreditation;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AccreditationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AccreditationFeed extends SObjectDefinition<'AccreditationFeed'> {
    Name: 'AccreditationFeed';
    Fields: Fields$AccreditationFeed;
    ParentReferences: ParentReferences$AccreditationFeed;
    ChildRelationships: ChildRelationships$AccreditationFeed;
  }

type Fields$AccreditationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AccreditationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AccreditationHistory = {
  //
  Accreditation: SObjectDefinition$Accreditation;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AccreditationHistory = {
  //
};

interface SObjectDefinition$AccreditationHistory extends SObjectDefinition<'AccreditationHistory'> {
    Name: 'AccreditationHistory';
    Fields: Fields$AccreditationHistory;
    ParentReferences: ParentReferences$AccreditationHistory;
    ChildRelationships: ChildRelationships$AccreditationHistory;
  }

type Fields$AccreditationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AccreditationShare = {
  //
  Parent: SObjectDefinition$Accreditation;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccreditationShare = {
  //
};

interface SObjectDefinition$AccreditationShare extends SObjectDefinition<'AccreditationShare'> {
    Name: 'AccreditationShare';
    Fields: Fields$AccreditationShare;
    ParentReferences: ParentReferences$AccreditationShare;
    ChildRelationships: ChildRelationships$AccreditationShare;
  }

type Fields$ActionLinkGroupTemplate = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExecutionsAllowed: string;
  HoursUntilExpiration: number | null;
  Category: string;
  IsPublished: boolean;
};

type ParentReferences$ActionLinkGroupTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ActionLinkGroupTemplate = {
  //
  ActionLinkTemplates: SObjectDefinition$ActionLinkTemplate;
};

interface SObjectDefinition$ActionLinkGroupTemplate extends SObjectDefinition<'ActionLinkGroupTemplate'> {
    Name: 'ActionLinkGroupTemplate';
    Fields: Fields$ActionLinkGroupTemplate;
    ParentReferences: ParentReferences$ActionLinkGroupTemplate;
    ChildRelationships: ChildRelationships$ActionLinkGroupTemplate;
  }

type Fields$ActionLinkTemplate = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ActionLinkGroupTemplateId: string;
  LabelKey: string;
  Method: string;
  LinkType: string;
  Position: number;
  IsConfirmationRequired: boolean;
  IsGroupDefault: boolean;
  UserVisibility: string;
  UserAlias: string | null;
  Label: string | null;
  ActionUrl: string;
  RequestBody: string | null;
  Headers: string | null;
};

type ParentReferences$ActionLinkTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ActionLinkGroupTemplate: SObjectDefinition$ActionLinkGroupTemplate;
};

type ChildRelationships$ActionLinkTemplate = {
  //
};

interface SObjectDefinition$ActionLinkTemplate extends SObjectDefinition<'ActionLinkTemplate'> {
    Name: 'ActionLinkTemplate';
    Fields: Fields$ActionLinkTemplate;
    ParentReferences: ParentReferences$ActionLinkTemplate;
    ChildRelationships: ChildRelationships$ActionLinkTemplate;
  }

type Fields$ActivityHistory = {
  //
  Id: string;
  AccountId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  Subject: string | null;
  IsTask: boolean;
  ActivityDate: DateString | null;
  ActivityDateTime: DateString | null;
  OwnerId: string | null;
  Status: string | null;
  Priority: string | null;
  IsHighPriority: boolean;
  ActivityType: string | null;
  IsClosed: boolean;
  IsAllDayEvent: boolean;
  IsVisibleInSelfService: boolean;
  DurationInMinutes: number | null;
  Location: string | null;
  Description: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EndDateTime: DateString | null;
  StartDateTime: DateString | null;
  PrimaryWhoId: string | null;
  PrimaryAccountId: string | null;
  ActivitySubtype: string | null;
  AlternateDetailId: string | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$ActivityHistory = {
  //
  Account: SObjectDefinition$Account | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PrimaryWho: SObjectDefinition$Name | null;
  PrimaryAccount: SObjectDefinition$Account | null;
  AlternateDetail: SObjectDefinition$EmailMessage | null;
  Requirement__r: SObjectDefinition$outfunds__Requirement__c | null;
  Piano_di_migrazione__r: SObjectDefinition$Case | null;
  Checklist__r: SObjectDefinition$Checklist__c | null;
  EnteLookup__r: SObjectDefinition$Account | null;
  Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Tag_colleghi__r: SObjectDefinition$User | null;
  Counter__r: SObjectDefinition$Counter__c | null;
  Servizio__r: SObjectDefinition$Servizio_Richiesta__c | null;
  Registro_eventi_ente__r: SObjectDefinition$Registro_eventi_ente__c | null;
};

type ChildRelationships$ActivityHistory = {
  //
};

interface SObjectDefinition$ActivityHistory extends SObjectDefinition<'ActivityHistory'> {
    Name: 'ActivityHistory';
    Fields: Fields$ActivityHistory;
    ParentReferences: ParentReferences$ActivityHistory;
    ChildRelationships: ChildRelationships$ActivityHistory;
  }

type Fields$AdditionalNumber = {
  //
  Id: string;
  IsDeleted: boolean;
  CallCenterId: string | null;
  Name: string;
  Description: string | null;
  Phone: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$AdditionalNumber = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AdditionalNumber = {
  //
};

interface SObjectDefinition$AdditionalNumber extends SObjectDefinition<'AdditionalNumber'> {
    Name: 'AdditionalNumber';
    Fields: Fields$AdditionalNumber;
    ParentReferences: ParentReferences$AdditionalNumber;
    ChildRelationships: ChildRelationships$AdditionalNumber;
  }

type Fields$Address = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  LocationType: string;
  AddressType: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Description: string | null;
  DrivingDirections: string | null;
  TimeZone: string | null;
};

type ParentReferences$Address = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Location;
};

type ChildRelationships$Address = {
  //
  Histories: SObjectDefinition$AddressHistory;
  AuthApplPlace: SObjectDefinition$AuthApplicationPlace;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$Address extends SObjectDefinition<'Address'> {
    Name: 'Address';
    Fields: Fields$Address;
    ParentReferences: ParentReferences$Address;
    ChildRelationships: ChildRelationships$Address;
  }

type Fields$AddressHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AddressId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AddressHistory = {
  //
  Address: SObjectDefinition$Address;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AddressHistory = {
  //
};

interface SObjectDefinition$AddressHistory extends SObjectDefinition<'AddressHistory'> {
    Name: 'AddressHistory';
    Fields: Fields$AddressHistory;
    ParentReferences: ParentReferences$AddressHistory;
    ChildRelationships: ChildRelationships$AddressHistory;
  }

type Fields$AgentWork = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  WorkItemId: string;
  Status: string;
  ServiceChannelId: string;
  OriginalQueueId: string | null;
  CapacityWeight: number | null;
  CapacityPercentage: number | null;
  RequestDateTime: DateString | null;
  AcceptDateTime: DateString | null;
  DeclineDateTime: DateString | null;
  CloseDateTime: DateString | null;
  SpeedToAnswer: number | null;
  AgentCapacityWhenDeclined: number | null;
  PendingServiceRoutingId: string | null;
  PushTimeout: number | null;
  PushTimeoutDateTime: DateString | null;
  HandleTime: number | null;
  ActiveTime: number | null;
  DeclineReason: string | null;
  CancelDateTime: DateString | null;
  ShouldSkipCapacityCheck: boolean;
  RoutingType: string | null;
  RoutingModel: string | null;
  RoutingPriority: number | null;
  AssignedDateTime: DateString | null;
  PreferredUserId: string | null;
  OriginalGroupId: string | null;
  IsPreferredUserRequired: boolean;
};

type ParentReferences$AgentWork = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  WorkItem: SObjectDefinition$Name;
  ServiceChannel: SObjectDefinition$ServiceChannel;
  OriginalQueue: SObjectDefinition$Group | null;
  PendingServiceRouting: SObjectDefinition$PendingServiceRouting | null;
  PreferredUser: SObjectDefinition$User | null;
  OriginalGroup: SObjectDefinition$Group | null;
};

type ChildRelationships$AgentWork = {
  //
  Shares: SObjectDefinition$AgentWorkShare;
};

interface SObjectDefinition$AgentWork extends SObjectDefinition<'AgentWork'> {
    Name: 'AgentWork';
    Fields: Fields$AgentWork;
    ParentReferences: ParentReferences$AgentWork;
    ChildRelationships: ChildRelationships$AgentWork;
  }

type Fields$AgentWorkShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AgentWorkShare = {
  //
  Parent: SObjectDefinition$AgentWork;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AgentWorkShare = {
  //
};

interface SObjectDefinition$AgentWorkShare extends SObjectDefinition<'AgentWorkShare'> {
    Name: 'AgentWorkShare';
    Fields: Fields$AgentWorkShare;
    ParentReferences: ParentReferences$AgentWorkShare;
    ChildRelationships: ChildRelationships$AgentWorkShare;
  }

type Fields$AggregateResult = {
  //
  Id: string;
};

type ParentReferences$AggregateResult = {
  //
};

type ChildRelationships$AggregateResult = {
  //
};

interface SObjectDefinition$AggregateResult extends SObjectDefinition<'AggregateResult'> {
    Name: 'AggregateResult';
    Fields: Fields$AggregateResult;
    ParentReferences: ParentReferences$AggregateResult;
    ChildRelationships: ChildRelationships$AggregateResult;
  }

type Fields$Anagrafica_Servizi__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Categoria__c: string | null;
  Descrizione__c: string | null;
  External_Key__c: string | null;
  Normativa_di_riferimento__c: string | null;
  Codice_Tassonomico__c: string | null;
  Data_di_disattivazione__c: DateString | null;
  Prevent_delete__c: boolean;
  Servizio_a_pagamento__c: boolean;
  Classificazione_servizio__c: string | null;
};

type ParentReferences$Anagrafica_Servizi__ChangeEvent = {
  //
};

type ChildRelationships$Anagrafica_Servizi__ChangeEvent = {
  //
};

interface SObjectDefinition$Anagrafica_Servizi__ChangeEvent extends SObjectDefinition<'Anagrafica_Servizi__ChangeEvent'> {
    Name: 'Anagrafica_Servizi__ChangeEvent';
    Fields: Fields$Anagrafica_Servizi__ChangeEvent;
    ParentReferences: ParentReferences$Anagrafica_Servizi__ChangeEvent;
    ChildRelationships: ChildRelationships$Anagrafica_Servizi__ChangeEvent;
  }

type Fields$Anagrafica_Servizi__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Anagrafica_Servizi__Share = {
  //
  Parent: SObjectDefinition$Anagrafica_Servizi__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Anagrafica_Servizi__Share = {
  //
};

interface SObjectDefinition$Anagrafica_Servizi__Share extends SObjectDefinition<'Anagrafica_Servizi__Share'> {
    Name: 'Anagrafica_Servizi__Share';
    Fields: Fields$Anagrafica_Servizi__Share;
    ParentReferences: ParentReferences$Anagrafica_Servizi__Share;
    ChildRelationships: ChildRelationships$Anagrafica_Servizi__Share;
  }

type Fields$Anagrafica_Servizi__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Categoria__c: string | null;
  Descrizione__c: string | null;
  External_Key__c: string | null;
  Normativa_di_riferimento__c: string | null;
  Codice_Tassonomico__c: string | null;
  Data_di_disattivazione__c: DateString | null;
  Prevent_delete__c: boolean;
  Servizio_a_pagamento__c: boolean;
  Classificazione_servizio__c: string | null;
};

type ParentReferences$Anagrafica_Servizi__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Anagrafica_Servizi__c = {
  //
  Shares: SObjectDefinition$Anagrafica_Servizi__Share;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Anagrafica_Servizi__c extends SObjectDefinition<'Anagrafica_Servizi__c'> {
    Name: 'Anagrafica_Servizi__c';
    Fields: Fields$Anagrafica_Servizi__c;
    ParentReferences: ParentReferences$Anagrafica_Servizi__c;
    ChildRelationships: ChildRelationships$Anagrafica_Servizi__c;
  }

type Fields$Announcement = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FeedItemId: string;
  ExpirationDate: DateString;
  SendEmails: boolean;
  IsArchived: boolean;
  ParentId: string | null;
};

type ParentReferences$Announcement = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  FeedItem: SObjectDefinition$FeedItem;
  Parent: SObjectDefinition$CollaborationGroup | null;
};

type ChildRelationships$Announcement = {
  //
};

interface SObjectDefinition$Announcement extends SObjectDefinition<'Announcement'> {
    Name: 'Announcement';
    Fields: Fields$Announcement;
    ParentReferences: ParentReferences$Announcement;
    ChildRelationships: ChildRelationships$Announcement;
  }

type Fields$ApexPageInfo = {
  //
  Id: string;
  DurableId: string | null;
  ApexPageId: string;
  Name: string;
  NameSpacePrefix: string | null;
  IsAvailableInTouch: boolean;
  MasterLabel: string | null;
};

type ParentReferences$ApexPageInfo = {
  //
};

type ChildRelationships$ApexPageInfo = {
  //
};

interface SObjectDefinition$ApexPageInfo extends SObjectDefinition<'ApexPageInfo'> {
    Name: 'ApexPageInfo';
    Fields: Fields$ApexPageInfo;
    ParentReferences: ParentReferences$ApexPageInfo;
    ChildRelationships: ChildRelationships$ApexPageInfo;
  }

type Fields$AppAnalyticsQueryRequest = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DataType: string;
  StartTime: DateString | null;
  EndTime: DateString | null;
  RequestState: string | null;
  DownloadUrl: string | null;
  DownloadExpirationTime: DateString | null;
  ErrorMessage: string | null;
  PackageIds: string | null;
  OrganizationIds: string | null;
  DownloadSize: string | null;
};

type ParentReferences$AppAnalyticsQueryRequest = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AppAnalyticsQueryRequest = {
  //
};

interface SObjectDefinition$AppAnalyticsQueryRequest extends SObjectDefinition<'AppAnalyticsQueryRequest'> {
    Name: 'AppAnalyticsQueryRequest';
    Fields: Fields$AppAnalyticsQueryRequest;
    ParentReferences: ParentReferences$AppAnalyticsQueryRequest;
    ChildRelationships: ChildRelationships$AppAnalyticsQueryRequest;
  }

type Fields$AppDefinition = {
  //
  Id: string;
  DurableId: string | null;
  Label: string | null;
  MasterLabel: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  LogoUrl: string | null;
  Description: string | null;
  UiType: string | null;
  NavType: string | null;
  UtilityBar: string | null;
  HeaderColor: string | null;
  IsOverrideOrgTheme: boolean;
  IsSmallFormFactorSupported: boolean;
  IsMediumFormFactorSupported: boolean;
  IsLargeFormFactorSupported: boolean;
  IsNavPersonalizationDisabled: boolean;
  IsNavAutoTempTabsDisabled: boolean;
};

type ParentReferences$AppDefinition = {
  //
};

type ChildRelationships$AppDefinition = {
  //
  AppTabs: SObjectDefinition$AppTabMember;
};

interface SObjectDefinition$AppDefinition extends SObjectDefinition<'AppDefinition'> {
    Name: 'AppDefinition';
    Fields: Fields$AppDefinition;
    ParentReferences: ParentReferences$AppDefinition;
    ChildRelationships: ChildRelationships$AppDefinition;
  }

type Fields$AppMenuItem = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SortOrder: number;
  Name: string | null;
  NamespacePrefix: string | null;
  Label: string | null;
  Description: string | null;
  StartUrl: string | null;
  MobileStartUrl: string | null;
  LogoUrl: string | null;
  IconUrl: string | null;
  InfoUrl: string | null;
  IsUsingAdminAuthorization: boolean;
  MobilePlatform: string | null;
  MobileMinOsVer: string | null;
  MobileDeviceType: string | null;
  IsRegisteredDeviceOnly: boolean;
  MobileAppVer: string | null;
  MobileAppInstalledDate: DateString | null;
  MobileAppInstalledVersion: string | null;
  MobileAppBinaryId: string | null;
  MobileAppInstallUrl: string | null;
  CanvasEnabled: boolean;
  CanvasReferenceId: string | null;
  CanvasUrl: string | null;
  CanvasAccessMethod: string | null;
  CanvasSelectedLocations: string | null;
  CanvasOptions: string | null;
  Type: string | null;
  ApplicationId: string | null;
  UserSortOrder: number | null;
  IsVisible: boolean;
  IsAccessible: boolean;
};

type ParentReferences$AppMenuItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AppMenuItem = {
  //
};

interface SObjectDefinition$AppMenuItem extends SObjectDefinition<'AppMenuItem'> {
    Name: 'AppMenuItem';
    Fields: Fields$AppMenuItem;
    ParentReferences: ParentReferences$AppMenuItem;
    ChildRelationships: ChildRelationships$AppMenuItem;
  }

type Fields$AppTabMember = {
  //
  Id: string;
  DurableId: string | null;
  AppDefinitionId: string | null;
  TabDefinitionId: string | null;
  SortOrder: number | null;
  WorkspaceDriverField: string | null;
};

type ParentReferences$AppTabMember = {
  //
};

type ChildRelationships$AppTabMember = {
  //
};

interface SObjectDefinition$AppTabMember extends SObjectDefinition<'AppTabMember'> {
    Name: 'AppTabMember';
    Fields: Fields$AppTabMember;
    ParentReferences: ParentReferences$AppTabMember;
    ChildRelationships: ChildRelationships$AppTabMember;
  }

type Fields$ApplicationLog__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ClassName__c: string | null;
  Message__c: string | null;
  ObjectType__c: string | null;
  RecordId__c: string | null;
  Status__c: string | null;
  User__c: string | null;
};

type ParentReferences$ApplicationLog__ChangeEvent = {
  //
};

type ChildRelationships$ApplicationLog__ChangeEvent = {
  //
};

interface SObjectDefinition$ApplicationLog__ChangeEvent extends SObjectDefinition<'ApplicationLog__ChangeEvent'> {
    Name: 'ApplicationLog__ChangeEvent';
    Fields: Fields$ApplicationLog__ChangeEvent;
    ParentReferences: ParentReferences$ApplicationLog__ChangeEvent;
    ChildRelationships: ChildRelationships$ApplicationLog__ChangeEvent;
  }

type Fields$ApplicationLog__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ApplicationLog__Share = {
  //
  Parent: SObjectDefinition$ApplicationLog__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ApplicationLog__Share = {
  //
};

interface SObjectDefinition$ApplicationLog__Share extends SObjectDefinition<'ApplicationLog__Share'> {
    Name: 'ApplicationLog__Share';
    Fields: Fields$ApplicationLog__Share;
    ParentReferences: ParentReferences$ApplicationLog__Share;
    ChildRelationships: ChildRelationships$ApplicationLog__Share;
  }

type Fields$ApplicationLog__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ClassName__c: string | null;
  Message__c: string | null;
  ObjectType__c: string | null;
  RecordId__c: string | null;
  Status__c: string | null;
  User__c: string | null;
};

type ParentReferences$ApplicationLog__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User__r: SObjectDefinition$User | null;
};

type ChildRelationships$ApplicationLog__c = {
  //
  Shares: SObjectDefinition$ApplicationLog__Share;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$ApplicationLog__c extends SObjectDefinition<'ApplicationLog__c'> {
    Name: 'ApplicationLog__c';
    Fields: Fields$ApplicationLog__c;
    ParentReferences: ParentReferences$ApplicationLog__c;
    ChildRelationships: ChildRelationships$ApplicationLog__c;
  }

type Fields$Approval = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  Status: string;
  RequestComment: string | null;
  ApproveComment: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$Approval = {
  //
  Parent: SObjectDefinition$Contract;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Approval = {
  //
};

interface SObjectDefinition$Approval extends SObjectDefinition<'Approval'> {
    Name: 'Approval';
    Fields: Fields$Approval;
    ParentReferences: ParentReferences$Approval;
    ChildRelationships: ChildRelationships$Approval;
  }

type Fields$Asset = {
  //
  Id: string;
  ContactId: string | null;
  AccountId: string | null;
  ParentId: string | null;
  RootAssetId: string | null;
  Product2Id: string | null;
  ProductCode: string | null;
  IsCompetitorProduct: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Name: string;
  SerialNumber: string | null;
  InstallDate: DateString | null;
  PurchaseDate: DateString | null;
  UsageEndDate: DateString | null;
  Status: string | null;
  Price: number | null;
  Quantity: number | null;
  Description: string | null;
  OwnerId: string;
  AssetProvidedById: string | null;
  AssetServicedById: string | null;
  IsInternal: boolean;
  AssetLevel: number | null;
  StockKeepingUnit: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Asset = {
  //
  Contact: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  Parent: SObjectDefinition$Asset | null;
  RootAsset: SObjectDefinition$Asset | null;
  Product2: SObjectDefinition$Product2 | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
  AssetProvidedBy: SObjectDefinition$Account | null;
  AssetServicedBy: SObjectDefinition$Account | null;
};

type ChildRelationships$Asset = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  ChildAssets: SObjectDefinition$Asset;
  Feeds: SObjectDefinition$AssetFeed;
  Histories: SObjectDefinition$AssetHistory;
  PrimaryAssets: SObjectDefinition$AssetRelationship;
  RelatedAssets: SObjectDefinition$AssetRelationship;
  Shares: SObjectDefinition$AssetShare;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthRegApplicationAsset: SObjectDefinition$AuthApplicationAsset;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractLineItems: SObjectDefinition$ContractLineItem;
  Emails: SObjectDefinition$EmailMessage;
  Entitlements: SObjectDefinition$Entitlement;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  WorkOrders: SObjectDefinition$WorkOrder;
  WorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
};

interface SObjectDefinition$Asset extends SObjectDefinition<'Asset'> {
    Name: 'Asset';
    Fields: Fields$Asset;
    ParentReferences: ParentReferences$Asset;
    ChildRelationships: ChildRelationships$Asset;
  }

type Fields$AssetChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  ContactId: string | null;
  AccountId: string | null;
  ParentId: string | null;
  RootAssetId: string | null;
  Product2Id: string | null;
  IsCompetitorProduct: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Name: string | null;
  SerialNumber: string | null;
  InstallDate: DateString | null;
  PurchaseDate: DateString | null;
  UsageEndDate: DateString | null;
  Status: string | null;
  Price: number | null;
  Quantity: number | null;
  Description: string | null;
  OwnerId: string | null;
  AssetProvidedById: string | null;
  AssetServicedById: string | null;
  IsInternal: boolean;
};

type ParentReferences$AssetChangeEvent = {
  //
};

type ChildRelationships$AssetChangeEvent = {
  //
};

interface SObjectDefinition$AssetChangeEvent extends SObjectDefinition<'AssetChangeEvent'> {
    Name: 'AssetChangeEvent';
    Fields: Fields$AssetChangeEvent;
    ParentReferences: ParentReferences$AssetChangeEvent;
    ChildRelationships: ChildRelationships$AssetChangeEvent;
  }

type Fields$AssetFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AssetFeed = {
  //
  Parent: SObjectDefinition$Asset;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AssetFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AssetFeed extends SObjectDefinition<'AssetFeed'> {
    Name: 'AssetFeed';
    Fields: Fields$AssetFeed;
    ParentReferences: ParentReferences$AssetFeed;
    ChildRelationships: ChildRelationships$AssetFeed;
  }

type Fields$AssetHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AssetId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AssetHistory = {
  //
  Asset: SObjectDefinition$Asset;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AssetHistory = {
  //
};

interface SObjectDefinition$AssetHistory extends SObjectDefinition<'AssetHistory'> {
    Name: 'AssetHistory';
    Fields: Fields$AssetHistory;
    ParentReferences: ParentReferences$AssetHistory;
    ChildRelationships: ChildRelationships$AssetHistory;
  }

type Fields$AssetRelationship = {
  //
  Id: string;
  IsDeleted: boolean;
  AssetRelationshipNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AssetId: string;
  RelatedAssetId: string;
  FromDate: DateString | null;
  ToDate: DateString | null;
  RelationshipType: string | null;
};

type ParentReferences$AssetRelationship = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Asset: SObjectDefinition$Asset;
  RelatedAsset: SObjectDefinition$Asset;
};

type ChildRelationships$AssetRelationship = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Feeds: SObjectDefinition$AssetRelationshipFeed;
  Histories: SObjectDefinition$AssetRelationshipHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$AssetRelationship extends SObjectDefinition<'AssetRelationship'> {
    Name: 'AssetRelationship';
    Fields: Fields$AssetRelationship;
    ParentReferences: ParentReferences$AssetRelationship;
    ChildRelationships: ChildRelationships$AssetRelationship;
  }

type Fields$AssetRelationshipFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AssetRelationshipFeed = {
  //
  Parent: SObjectDefinition$AssetRelationship;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AssetRelationshipFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AssetRelationshipFeed extends SObjectDefinition<'AssetRelationshipFeed'> {
    Name: 'AssetRelationshipFeed';
    Fields: Fields$AssetRelationshipFeed;
    ParentReferences: ParentReferences$AssetRelationshipFeed;
    ChildRelationships: ChildRelationships$AssetRelationshipFeed;
  }

type Fields$AssetRelationshipHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AssetRelationshipId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AssetRelationshipHistory = {
  //
  AssetRelationship: SObjectDefinition$AssetRelationship;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AssetRelationshipHistory = {
  //
};

interface SObjectDefinition$AssetRelationshipHistory extends SObjectDefinition<'AssetRelationshipHistory'> {
    Name: 'AssetRelationshipHistory';
    Fields: Fields$AssetRelationshipHistory;
    ParentReferences: ParentReferences$AssetRelationshipHistory;
    ChildRelationships: ChildRelationships$AssetRelationshipHistory;
  }

type Fields$AssetShare = {
  //
  Id: string;
  AssetId: string;
  UserOrGroupId: string;
  AssetAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AssetShare = {
  //
  Asset: SObjectDefinition$Asset;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AssetShare = {
  //
};

interface SObjectDefinition$AssetShare extends SObjectDefinition<'AssetShare'> {
    Name: 'AssetShare';
    Fields: Fields$AssetShare;
    ParentReferences: ParentReferences$AssetShare;
    ChildRelationships: ChildRelationships$AssetShare;
  }

type Fields$AssetTokenEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  ConnectedAppId: string | null;
  UserId: string | null;
  AssetId: string | null;
  Name: string | null;
  DeviceId: string | null;
  DeviceKey: string | null;
  Expiration: DateString | null;
  AssetSerialNumber: string | null;
  AssetName: string | null;
  ActorTokenPayload: string | null;
};

type ParentReferences$AssetTokenEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  ConnectedApp: SObjectDefinition$ConnectedApplication | null;
  User: SObjectDefinition$User | null;
  Asset: SObjectDefinition$Asset | null;
};

type ChildRelationships$AssetTokenEvent = {
  //
};

interface SObjectDefinition$AssetTokenEvent extends SObjectDefinition<'AssetTokenEvent'> {
    Name: 'AssetTokenEvent';
    Fields: Fields$AssetTokenEvent;
    ParentReferences: ParentReferences$AssetTokenEvent;
    ChildRelationships: ChildRelationships$AssetTokenEvent;
  }

type Fields$AssignmentRule = {
  //
  Id: string;
  Name: string | null;
  SobjectType: string | null;
  Active: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$AssignmentRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AssignmentRule = {
  //
};

interface SObjectDefinition$AssignmentRule extends SObjectDefinition<'AssignmentRule'> {
    Name: 'AssignmentRule';
    Fields: Fields$AssignmentRule;
    ParentReferences: ParentReferences$AssignmentRule;
    ChildRelationships: ChildRelationships$AssignmentRule;
  }

type Fields$AssociatedLocation = {
  //
  Id: string;
  IsDeleted: boolean;
  AssociatedLocationNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentRecordId: string;
  LocationId: string;
  Type: string | null;
  ActiveFrom: DateString | null;
  ActiveTo: DateString | null;
};

type ParentReferences$AssociatedLocation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentRecord: SObjectDefinition$Account;
  Location: SObjectDefinition$Location;
};

type ChildRelationships$AssociatedLocation = {
  //
  Histories: SObjectDefinition$AssociatedLocationHistory;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$AssociatedLocation extends SObjectDefinition<'AssociatedLocation'> {
    Name: 'AssociatedLocation';
    Fields: Fields$AssociatedLocation;
    ParentReferences: ParentReferences$AssociatedLocation;
    ChildRelationships: ChildRelationships$AssociatedLocation;
  }

type Fields$AssociatedLocationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AssociatedLocationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AssociatedLocationHistory = {
  //
  AssociatedLocation: SObjectDefinition$AssociatedLocation;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AssociatedLocationHistory = {
  //
};

interface SObjectDefinition$AssociatedLocationHistory extends SObjectDefinition<'AssociatedLocationHistory'> {
    Name: 'AssociatedLocationHistory';
    Fields: Fields$AssociatedLocationHistory;
    ParentReferences: ParentReferences$AssociatedLocationHistory;
    ChildRelationships: ChildRelationships$AssociatedLocationHistory;
  }

type Fields$AsyncOperationEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  OperationId: string | null;
  SourceEvent: any | null;
  OperationDetails: any | null;
};

type ParentReferences$AsyncOperationEvent = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AsyncOperationEvent = {
  //
};

interface SObjectDefinition$AsyncOperationEvent extends SObjectDefinition<'AsyncOperationEvent'> {
    Name: 'AsyncOperationEvent';
    Fields: Fields$AsyncOperationEvent;
    ParentReferences: ParentReferences$AsyncOperationEvent;
    ChildRelationships: ChildRelationships$AsyncOperationEvent;
  }

type Fields$AsyncOperationStatus = {
  //
  CreatedDate: DateString;
  CreatedById: string;
  Fields: any | null;
  Status: string | null;
  Category: string | null;
  Message: string | null;
  StatusCode: string | null;
};

type ParentReferences$AsyncOperationStatus = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AsyncOperationStatus = {
  //
};

interface SObjectDefinition$AsyncOperationStatus extends SObjectDefinition<'AsyncOperationStatus'> {
    Name: 'AsyncOperationStatus';
    Fields: Fields$AsyncOperationStatus;
    ParentReferences: ParentReferences$AsyncOperationStatus;
    ChildRelationships: ChildRelationships$AsyncOperationStatus;
  }

type Fields$AttachedContentDocument = {
  //
  Id: string;
  IsDeleted: boolean;
  LinkedEntityId: string;
  ContentDocumentId: string | null;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  ContentUrl: string | null;
  ExternalDataSourceName: string | null;
  ExternalDataSourceType: string | null;
  SharingOption: string | null;
};

type ParentReferences$AttachedContentDocument = {
  //
  LinkedEntity: SObjectDefinition$Name;
  ContentDocument: SObjectDefinition$ContentDocument | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AttachedContentDocument = {
  //
};

interface SObjectDefinition$AttachedContentDocument extends SObjectDefinition<'AttachedContentDocument'> {
    Name: 'AttachedContentDocument';
    Fields: Fields$AttachedContentDocument;
    ParentReferences: ParentReferences$AttachedContentDocument;
    ChildRelationships: ChildRelationships$AttachedContentDocument;
  }

type Fields$AttachedContentNote = {
  //
  Id: string;
  IsDeleted: boolean;
  LinkedEntityId: string;
  ContentDocumentId: string | null;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  TextPreview: string | null;
};

type ParentReferences$AttachedContentNote = {
  //
  LinkedEntity: SObjectDefinition$Name;
  ContentDocument: SObjectDefinition$ContentDocument | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AttachedContentNote = {
  //
};

interface SObjectDefinition$AttachedContentNote extends SObjectDefinition<'AttachedContentNote'> {
    Name: 'AttachedContentNote';
    Fields: Fields$AttachedContentNote;
    ParentReferences: ParentReferences$AttachedContentNote;
    ChildRelationships: ChildRelationships$AttachedContentNote;
  }

type Fields$Attachment = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Name: string;
  IsPrivate: boolean;
  ContentType: string | null;
  BodyLength: number | null;
  Body: BlobString;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
};

type ParentReferences$Attachment = {
  //
  Parent: SObjectDefinition$Name;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Attachment = {
  //
};

interface SObjectDefinition$Attachment extends SObjectDefinition<'Attachment'> {
    Name: 'Attachment';
    Fields: Fields$Attachment;
    ParentReferences: ParentReferences$Attachment;
    ChildRelationships: ChildRelationships$Attachment;
  }

type Fields$Audience = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ContainerId: string;
  AudienceName: string;
  Description: string | null;
  FormulaFilterType: string | null;
};

type ParentReferences$Audience = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Container: SObjectDefinition$Network;
};

type ChildRelationships$Audience = {
  //
};

interface SObjectDefinition$Audience extends SObjectDefinition<'Audience'> {
    Name: 'Audience';
    Fields: Fields$Audience;
    ParentReferences: ParentReferences$Audience;
    ChildRelationships: ChildRelationships$Audience;
  }

type Fields$AuthApplicationAsset = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RgltyAuthApplicationId: string;
  AssetId: string;
  LicensePermitNameId: string | null;
};

type ParentReferences$AuthApplicationAsset = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RgltyAuthApplication: SObjectDefinition$Name;
  Asset: SObjectDefinition$Asset;
  LicensePermitName: SObjectDefinition$BusinessLicense | null;
};

type ChildRelationships$AuthApplicationAsset = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Feeds: SObjectDefinition$AuthApplicationAssetFeed;
  Histories: SObjectDefinition$AuthApplicationAssetHistory;
  Shares: SObjectDefinition$AuthApplicationAssetShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$AuthApplicationAsset extends SObjectDefinition<'AuthApplicationAsset'> {
    Name: 'AuthApplicationAsset';
    Fields: Fields$AuthApplicationAsset;
    ParentReferences: ParentReferences$AuthApplicationAsset;
    ChildRelationships: ChildRelationships$AuthApplicationAsset;
  }

type Fields$AuthApplicationAssetFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AuthApplicationAssetFeed = {
  //
  Parent: SObjectDefinition$AuthApplicationAsset;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AuthApplicationAssetFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AuthApplicationAssetFeed extends SObjectDefinition<'AuthApplicationAssetFeed'> {
    Name: 'AuthApplicationAssetFeed';
    Fields: Fields$AuthApplicationAssetFeed;
    ParentReferences: ParentReferences$AuthApplicationAssetFeed;
    ChildRelationships: ChildRelationships$AuthApplicationAssetFeed;
  }

type Fields$AuthApplicationAssetHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthApplicationAssetId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthApplicationAssetHistory = {
  //
  AuthApplicationAsset: SObjectDefinition$AuthApplicationAsset;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthApplicationAssetHistory = {
  //
};

interface SObjectDefinition$AuthApplicationAssetHistory extends SObjectDefinition<'AuthApplicationAssetHistory'> {
    Name: 'AuthApplicationAssetHistory';
    Fields: Fields$AuthApplicationAssetHistory;
    ParentReferences: ParentReferences$AuthApplicationAssetHistory;
    ChildRelationships: ChildRelationships$AuthApplicationAssetHistory;
  }

type Fields$AuthApplicationAssetShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthApplicationAssetShare = {
  //
  Parent: SObjectDefinition$AuthApplicationAsset;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthApplicationAssetShare = {
  //
};

interface SObjectDefinition$AuthApplicationAssetShare extends SObjectDefinition<'AuthApplicationAssetShare'> {
    Name: 'AuthApplicationAssetShare';
    Fields: Fields$AuthApplicationAssetShare;
    ParentReferences: ParentReferences$AuthApplicationAssetShare;
    ChildRelationships: ChildRelationships$AuthApplicationAssetShare;
  }

type Fields$AuthApplicationPlace = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RgltyAuthApplicationId: string;
  PlaceId: string;
  AuthorizationId: string | null;
};

type ParentReferences$AuthApplicationPlace = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RgltyAuthApplication: SObjectDefinition$Name;
  Place: SObjectDefinition$Name;
  Authorization: SObjectDefinition$BusinessLicense | null;
};

type ChildRelationships$AuthApplicationPlace = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Feeds: SObjectDefinition$AuthApplicationPlaceFeed;
  Histories: SObjectDefinition$AuthApplicationPlaceHistory;
  Shares: SObjectDefinition$AuthApplicationPlaceShare;
  AuthApplPlace: SObjectDefinition$AuthLocationAccessSchedule;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$AuthApplicationPlace extends SObjectDefinition<'AuthApplicationPlace'> {
    Name: 'AuthApplicationPlace';
    Fields: Fields$AuthApplicationPlace;
    ParentReferences: ParentReferences$AuthApplicationPlace;
    ChildRelationships: ChildRelationships$AuthApplicationPlace;
  }

type Fields$AuthApplicationPlaceFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AuthApplicationPlaceFeed = {
  //
  Parent: SObjectDefinition$AuthApplicationPlace;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AuthApplicationPlaceFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AuthApplicationPlaceFeed extends SObjectDefinition<'AuthApplicationPlaceFeed'> {
    Name: 'AuthApplicationPlaceFeed';
    Fields: Fields$AuthApplicationPlaceFeed;
    ParentReferences: ParentReferences$AuthApplicationPlaceFeed;
    ChildRelationships: ChildRelationships$AuthApplicationPlaceFeed;
  }

type Fields$AuthApplicationPlaceHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthApplicationPlaceId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthApplicationPlaceHistory = {
  //
  AuthApplicationPlace: SObjectDefinition$AuthApplicationPlace;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthApplicationPlaceHistory = {
  //
};

interface SObjectDefinition$AuthApplicationPlaceHistory extends SObjectDefinition<'AuthApplicationPlaceHistory'> {
    Name: 'AuthApplicationPlaceHistory';
    Fields: Fields$AuthApplicationPlaceHistory;
    ParentReferences: ParentReferences$AuthApplicationPlaceHistory;
    ChildRelationships: ChildRelationships$AuthApplicationPlaceHistory;
  }

type Fields$AuthApplicationPlaceShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthApplicationPlaceShare = {
  //
  Parent: SObjectDefinition$AuthApplicationPlace;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthApplicationPlaceShare = {
  //
};

interface SObjectDefinition$AuthApplicationPlaceShare extends SObjectDefinition<'AuthApplicationPlaceShare'> {
    Name: 'AuthApplicationPlaceShare';
    Fields: Fields$AuthApplicationPlaceShare;
    ParentReferences: ParentReferences$AuthApplicationPlaceShare;
    ChildRelationships: ChildRelationships$AuthApplicationPlaceShare;
  }

type Fields$AuthLocationAccessSchedule = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AuthApplPlaceId: string;
  WorkDay: string | null;
  WorkStartTime: DateString | null;
  WorkEndTime: DateString | null;
  AuthStartDate: DateString;
  AuthEndDate: DateString;
};

type ParentReferences$AuthLocationAccessSchedule = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthApplPlace: SObjectDefinition$AuthApplicationPlace;
};

type ChildRelationships$AuthLocationAccessSchedule = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Feeds: SObjectDefinition$AuthLocationAccessScheduleFeed;
  Histories: SObjectDefinition$AuthLocationAccessScheduleHistory;
  Shares: SObjectDefinition$AuthLocationAccessScheduleShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$AuthLocationAccessSchedule extends SObjectDefinition<'AuthLocationAccessSchedule'> {
    Name: 'AuthLocationAccessSchedule';
    Fields: Fields$AuthLocationAccessSchedule;
    ParentReferences: ParentReferences$AuthLocationAccessSchedule;
    ChildRelationships: ChildRelationships$AuthLocationAccessSchedule;
  }

type Fields$AuthLocationAccessScheduleFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AuthLocationAccessScheduleFeed = {
  //
  Parent: SObjectDefinition$AuthLocationAccessSchedule;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AuthLocationAccessScheduleFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AuthLocationAccessScheduleFeed extends SObjectDefinition<'AuthLocationAccessScheduleFeed'> {
    Name: 'AuthLocationAccessScheduleFeed';
    Fields: Fields$AuthLocationAccessScheduleFeed;
    ParentReferences: ParentReferences$AuthLocationAccessScheduleFeed;
    ChildRelationships: ChildRelationships$AuthLocationAccessScheduleFeed;
  }

type Fields$AuthLocationAccessScheduleHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthLocationAccessScheduleId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthLocationAccessScheduleHistory = {
  //
  AuthLocationAccessSchedule: SObjectDefinition$AuthLocationAccessSchedule;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthLocationAccessScheduleHistory = {
  //
};

interface SObjectDefinition$AuthLocationAccessScheduleHistory extends SObjectDefinition<'AuthLocationAccessScheduleHistory'> {
    Name: 'AuthLocationAccessScheduleHistory';
    Fields: Fields$AuthLocationAccessScheduleHistory;
    ParentReferences: ParentReferences$AuthLocationAccessScheduleHistory;
    ChildRelationships: ChildRelationships$AuthLocationAccessScheduleHistory;
  }

type Fields$AuthLocationAccessScheduleShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthLocationAccessScheduleShare = {
  //
  Parent: SObjectDefinition$AuthLocationAccessSchedule;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthLocationAccessScheduleShare = {
  //
};

interface SObjectDefinition$AuthLocationAccessScheduleShare extends SObjectDefinition<'AuthLocationAccessScheduleShare'> {
    Name: 'AuthLocationAccessScheduleShare';
    Fields: Fields$AuthLocationAccessScheduleShare;
    ParentReferences: ParentReferences$AuthLocationAccessScheduleShare;
    ChildRelationships: ChildRelationships$AuthLocationAccessScheduleShare;
  }

type Fields$AuthSession = {
  //
  Id: string;
  UsersId: string | null;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  NumSecondsValid: number;
  UserType: string;
  SourceIp: string;
  LoginType: string | null;
  SessionType: string | null;
  SessionSecurityLevel: string | null;
  LogoutUrl: string | null;
  ParentId: string | null;
  LoginHistoryId: string | null;
  IsCurrent: boolean;
};

type ParentReferences$AuthSession = {
  //
  Users: SObjectDefinition$User | null;
  LoginHistory: SObjectDefinition$LoginHistory | null;
};

type ChildRelationships$AuthSession = {
  //
};

interface SObjectDefinition$AuthSession extends SObjectDefinition<'AuthSession'> {
    Name: 'AuthSession';
    Fields: Fields$AuthSession;
    ParentReferences: ParentReferences$AuthSession;
    ChildRelationships: ChildRelationships$AuthSession;
  }

type Fields$AuthorizationForm = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RevisionNumber: string | null;
  EffectiveFromDate: DateString | null;
  EffectiveToDate: DateString | null;
  DefaultAuthFormTextId: string | null;
  IsSignatureRequired: boolean;
};

type ParentReferences$AuthorizationForm = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DefaultAuthFormText: SObjectDefinition$AuthorizationFormText | null;
};

type ChildRelationships$AuthorizationForm = {
  //
  Histories: SObjectDefinition$AuthorizationFormHistory;
  Shares: SObjectDefinition$AuthorizationFormShare;
  AuthorizationForms: SObjectDefinition$AuthorizationFormText;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationForm extends SObjectDefinition<'AuthorizationForm'> {
    Name: 'AuthorizationForm';
    Fields: Fields$AuthorizationForm;
    ParentReferences: ParentReferences$AuthorizationForm;
    ChildRelationships: ChildRelationships$AuthorizationForm;
  }

type Fields$AuthorizationFormConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ConsentGiverId: string;
  AuthorizationFormTextId: string | null;
  ConsentCapturedSource: string | null;
  ConsentCapturedSourceType: string | null;
  ConsentCapturedDateTime: DateString | null;
  Status: string | null;
  DocumentVersionId: string | null;
  RelatedRecordId: string | null;
};

type ParentReferences$AuthorizationFormConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ConsentGiver: SObjectDefinition$Name;
  AuthorizationFormText: SObjectDefinition$AuthorizationFormText | null;
  DocumentVersion: SObjectDefinition$ContentVersion | null;
  RelatedRecord: SObjectDefinition$Account | null;
};

type ChildRelationships$AuthorizationFormConsent = {
  //
  Histories: SObjectDefinition$AuthorizationFormConsentHistory;
  Shares: SObjectDefinition$AuthorizationFormConsentShare;
  DigitalSignatures: SObjectDefinition$DigitalSignature;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationFormConsent extends SObjectDefinition<'AuthorizationFormConsent'> {
    Name: 'AuthorizationFormConsent';
    Fields: Fields$AuthorizationFormConsent;
    ParentReferences: ParentReferences$AuthorizationFormConsent;
    ChildRelationships: ChildRelationships$AuthorizationFormConsent;
  }

type Fields$AuthorizationFormConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ConsentGiverId: string | null;
  AuthorizationFormTextId: string | null;
  ConsentCapturedSource: string | null;
  ConsentCapturedSourceType: string | null;
  ConsentCapturedDateTime: DateString | null;
  Status: string | null;
  DocumentVersionId: string | null;
  RelatedRecordId: string | null;
};

type ParentReferences$AuthorizationFormConsentChangeEvent = {
  //
};

type ChildRelationships$AuthorizationFormConsentChangeEvent = {
  //
};

interface SObjectDefinition$AuthorizationFormConsentChangeEvent extends SObjectDefinition<'AuthorizationFormConsentChangeEvent'> {
    Name: 'AuthorizationFormConsentChangeEvent';
    Fields: Fields$AuthorizationFormConsentChangeEvent;
    ParentReferences: ParentReferences$AuthorizationFormConsentChangeEvent;
    ChildRelationships: ChildRelationships$AuthorizationFormConsentChangeEvent;
  }

type Fields$AuthorizationFormConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormConsentHistory = {
  //
  AuthorizationFormConsent: SObjectDefinition$AuthorizationFormConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormConsentHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormConsentHistory extends SObjectDefinition<'AuthorizationFormConsentHistory'> {
    Name: 'AuthorizationFormConsentHistory';
    Fields: Fields$AuthorizationFormConsentHistory;
    ParentReferences: ParentReferences$AuthorizationFormConsentHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormConsentHistory;
  }

type Fields$AuthorizationFormConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthorizationFormConsentShare = {
  //
  Parent: SObjectDefinition$AuthorizationFormConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormConsentShare = {
  //
};

interface SObjectDefinition$AuthorizationFormConsentShare extends SObjectDefinition<'AuthorizationFormConsentShare'> {
    Name: 'AuthorizationFormConsentShare';
    Fields: Fields$AuthorizationFormConsentShare;
    ParentReferences: ParentReferences$AuthorizationFormConsentShare;
    ChildRelationships: ChildRelationships$AuthorizationFormConsentShare;
  }

type Fields$AuthorizationFormDataUse = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AuthorizationFormId: string;
  DataUsePurposeId: string;
};

type ParentReferences$AuthorizationFormDataUse = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthorizationForm: SObjectDefinition$AuthorizationForm;
  DataUsePurpose: SObjectDefinition$DataUsePurpose;
};

type ChildRelationships$AuthorizationFormDataUse = {
  //
  Histories: SObjectDefinition$AuthorizationFormDataUseHistory;
  Shares: SObjectDefinition$AuthorizationFormDataUseShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationFormDataUse extends SObjectDefinition<'AuthorizationFormDataUse'> {
    Name: 'AuthorizationFormDataUse';
    Fields: Fields$AuthorizationFormDataUse;
    ParentReferences: ParentReferences$AuthorizationFormDataUse;
    ChildRelationships: ChildRelationships$AuthorizationFormDataUse;
  }

type Fields$AuthorizationFormDataUseHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormDataUseId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormDataUseHistory = {
  //
  AuthorizationFormDataUse: SObjectDefinition$AuthorizationFormDataUse;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormDataUseHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormDataUseHistory extends SObjectDefinition<'AuthorizationFormDataUseHistory'> {
    Name: 'AuthorizationFormDataUseHistory';
    Fields: Fields$AuthorizationFormDataUseHistory;
    ParentReferences: ParentReferences$AuthorizationFormDataUseHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormDataUseHistory;
  }

type Fields$AuthorizationFormDataUseShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthorizationFormDataUseShare = {
  //
  Parent: SObjectDefinition$AuthorizationFormDataUse;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormDataUseShare = {
  //
};

interface SObjectDefinition$AuthorizationFormDataUseShare extends SObjectDefinition<'AuthorizationFormDataUseShare'> {
    Name: 'AuthorizationFormDataUseShare';
    Fields: Fields$AuthorizationFormDataUseShare;
    ParentReferences: ParentReferences$AuthorizationFormDataUseShare;
    ChildRelationships: ChildRelationships$AuthorizationFormDataUseShare;
  }

type Fields$AuthorizationFormHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormHistory = {
  //
  AuthorizationForm: SObjectDefinition$AuthorizationForm;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormHistory extends SObjectDefinition<'AuthorizationFormHistory'> {
    Name: 'AuthorizationFormHistory';
    Fields: Fields$AuthorizationFormHistory;
    ParentReferences: ParentReferences$AuthorizationFormHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormHistory;
  }

type Fields$AuthorizationFormShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthorizationFormShare = {
  //
  Parent: SObjectDefinition$AuthorizationForm;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormShare = {
  //
};

interface SObjectDefinition$AuthorizationFormShare extends SObjectDefinition<'AuthorizationFormShare'> {
    Name: 'AuthorizationFormShare';
    Fields: Fields$AuthorizationFormShare;
    ParentReferences: ParentReferences$AuthorizationFormShare;
    ChildRelationships: ChildRelationships$AuthorizationFormShare;
  }

type Fields$AuthorizationFormText = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AuthorizationFormId: string;
  FullAuthorizationFormUrl: string | null;
  SummaryAuthFormText: string | null;
  Locale: string | null;
  LocaleSelection: string | null;
  ContentDocumentId: string | null;
};

type ParentReferences$AuthorizationFormText = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthorizationForm: SObjectDefinition$AuthorizationForm;
  ContentDocument: SObjectDefinition$ContentDocument | null;
};

type ChildRelationships$AuthorizationFormText = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  Histories: SObjectDefinition$AuthorizationFormTextHistory;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationFormText extends SObjectDefinition<'AuthorizationFormText'> {
    Name: 'AuthorizationFormText';
    Fields: Fields$AuthorizationFormText;
    ParentReferences: ParentReferences$AuthorizationFormText;
    ChildRelationships: ChildRelationships$AuthorizationFormText;
  }

type Fields$AuthorizationFormTextHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormTextId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormTextHistory = {
  //
  AuthorizationFormText: SObjectDefinition$AuthorizationFormText;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormTextHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormTextHistory extends SObjectDefinition<'AuthorizationFormTextHistory'> {
    Name: 'AuthorizationFormTextHistory';
    Fields: Fields$AuthorizationFormTextHistory;
    ParentReferences: ParentReferences$AuthorizationFormTextHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormTextHistory;
  }

type Fields$Award = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Award = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Award = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Feeds: SObjectDefinition$AwardFeed;
  Histories: SObjectDefinition$AwardHistory;
  Shares: SObjectDefinition$AwardShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Award extends SObjectDefinition<'Award'> {
    Name: 'Award';
    Fields: Fields$Award;
    ParentReferences: ParentReferences$Award;
    ChildRelationships: ChildRelationships$Award;
  }

type Fields$AwardFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AwardFeed = {
  //
  Parent: SObjectDefinition$Award;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AwardFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AwardFeed extends SObjectDefinition<'AwardFeed'> {
    Name: 'AwardFeed';
    Fields: Fields$AwardFeed;
    ParentReferences: ParentReferences$AwardFeed;
    ChildRelationships: ChildRelationships$AwardFeed;
  }

type Fields$AwardHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AwardId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AwardHistory = {
  //
  Award: SObjectDefinition$Award;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AwardHistory = {
  //
};

interface SObjectDefinition$AwardHistory extends SObjectDefinition<'AwardHistory'> {
    Name: 'AwardHistory';
    Fields: Fields$AwardHistory;
    ParentReferences: ParentReferences$AwardHistory;
    ChildRelationships: ChildRelationships$AwardHistory;
  }

type Fields$AwardShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AwardShare = {
  //
  Parent: SObjectDefinition$Award;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AwardShare = {
  //
};

interface SObjectDefinition$AwardShare extends SObjectDefinition<'AwardShare'> {
    Name: 'AwardShare';
    Fields: Fields$AwardShare;
    ParentReferences: ParentReferences$AwardShare;
    ChildRelationships: ChildRelationships$AwardShare;
  }

type Fields$BackgroundOperation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SubmittedAt: DateString | null;
  Status: string | null;
  ExecutionGroup: string | null;
  SequenceGroup: string | null;
  SequenceNumber: number | null;
  GroupLeaderId: string | null;
  StartedAt: DateString | null;
  FinishedAt: DateString | null;
  WorkerUri: string | null;
  Timeout: number | null;
  ExpiresAt: DateString | null;
  NumFollowers: number | null;
  ProcessAfter: DateString | null;
  ParentKey: string | null;
  RetryLimit: number | null;
  RetryCount: number | null;
  RetryBackoff: number | null;
  Error: string | null;
};

type ParentReferences$BackgroundOperation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  GroupLeader: SObjectDefinition$BackgroundOperation | null;
};

type ChildRelationships$BackgroundOperation = {
  //
  MergedOperations: SObjectDefinition$BackgroundOperation;
};

interface SObjectDefinition$BackgroundOperation extends SObjectDefinition<'BackgroundOperation'> {
    Name: 'BackgroundOperation';
    Fields: Fields$BackgroundOperation;
    ParentReferences: ParentReferences$BackgroundOperation;
    ChildRelationships: ChildRelationships$BackgroundOperation;
  }

type Fields$BatchJobStatusChangedEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  BatchJobDefinition: string | null;
  BatchJob: string;
  Status: string;
  StartDateTime: DateString | null;
  EndDateTime: DateString | null;
};

type ParentReferences$BatchJobStatusChangedEvent = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$BatchJobStatusChangedEvent = {
  //
};

interface SObjectDefinition$BatchJobStatusChangedEvent extends SObjectDefinition<'BatchJobStatusChangedEvent'> {
    Name: 'BatchJobStatusChangedEvent';
    Fields: Fields$BatchJobStatusChangedEvent;
    ParentReferences: ParentReferences$BatchJobStatusChangedEvent;
    ChildRelationships: ChildRelationships$BatchJobStatusChangedEvent;
  }

type Fields$BoardCertification = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$BoardCertification = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BoardCertification = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Feeds: SObjectDefinition$BoardCertificationFeed;
  Histories: SObjectDefinition$BoardCertificationHistory;
  Shares: SObjectDefinition$BoardCertificationShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$BoardCertification extends SObjectDefinition<'BoardCertification'> {
    Name: 'BoardCertification';
    Fields: Fields$BoardCertification;
    ParentReferences: ParentReferences$BoardCertification;
    ChildRelationships: ChildRelationships$BoardCertification;
  }

type Fields$BoardCertificationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$BoardCertificationFeed = {
  //
  Parent: SObjectDefinition$BoardCertification;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$BoardCertificationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$BoardCertificationFeed extends SObjectDefinition<'BoardCertificationFeed'> {
    Name: 'BoardCertificationFeed';
    Fields: Fields$BoardCertificationFeed;
    ParentReferences: ParentReferences$BoardCertificationFeed;
    ChildRelationships: ChildRelationships$BoardCertificationFeed;
  }

type Fields$BoardCertificationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  BoardCertificationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$BoardCertificationHistory = {
  //
  BoardCertification: SObjectDefinition$BoardCertification;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$BoardCertificationHistory = {
  //
};

interface SObjectDefinition$BoardCertificationHistory extends SObjectDefinition<'BoardCertificationHistory'> {
    Name: 'BoardCertificationHistory';
    Fields: Fields$BoardCertificationHistory;
    ParentReferences: ParentReferences$BoardCertificationHistory;
    ChildRelationships: ChildRelationships$BoardCertificationHistory;
  }

type Fields$BoardCertificationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$BoardCertificationShare = {
  //
  Parent: SObjectDefinition$BoardCertification;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BoardCertificationShare = {
  //
};

interface SObjectDefinition$BoardCertificationShare extends SObjectDefinition<'BoardCertificationShare'> {
    Name: 'BoardCertificationShare';
    Fields: Fields$BoardCertificationShare;
    ParentReferences: ParentReferences$BoardCertificationShare;
    ChildRelationships: ChildRelationships$BoardCertificationShare;
  }

type Fields$BrandTemplate = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  IsActive: boolean;
  Description: string | null;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$BrandTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BrandTemplate = {
  //
};

interface SObjectDefinition$BrandTemplate extends SObjectDefinition<'BrandTemplate'> {
    Name: 'BrandTemplate';
    Fields: Fields$BrandTemplate;
    ParentReferences: ParentReferences$BrandTemplate;
    ChildRelationships: ChildRelationships$BrandTemplate;
  }

type Fields$BrandingSet = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
};

type ParentReferences$BrandingSet = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BrandingSet = {
  //
};

interface SObjectDefinition$BrandingSet extends SObjectDefinition<'BrandingSet'> {
    Name: 'BrandingSet';
    Fields: Fields$BrandingSet;
    ParentReferences: ParentReferences$BrandingSet;
    ChildRelationships: ChildRelationships$BrandingSet;
  }

type Fields$BrandingSetProperty = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  BrandingSetId: string;
  PropertyName: string;
  PropertyValue: string | null;
};

type ParentReferences$BrandingSetProperty = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BrandingSet: SObjectDefinition$BrandingSet;
};

type ChildRelationships$BrandingSetProperty = {
  //
};

interface SObjectDefinition$BrandingSetProperty extends SObjectDefinition<'BrandingSetProperty'> {
    Name: 'BrandingSetProperty';
    Fields: Fields$BrandingSetProperty;
    ParentReferences: ParentReferences$BrandingSetProperty;
    ChildRelationships: ChildRelationships$BrandingSetProperty;
  }

type Fields$BriefcaseAssignment = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserOrGroupId: string;
  BriefcaseId: string;
};

type ParentReferences$BriefcaseAssignment = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserOrGroup: SObjectDefinition$Name;
  Briefcase: SObjectDefinition$BriefcaseDefinition;
};

type ChildRelationships$BriefcaseAssignment = {
  //
};

interface SObjectDefinition$BriefcaseAssignment extends SObjectDefinition<'BriefcaseAssignment'> {
    Name: 'BriefcaseAssignment';
    Fields: Fields$BriefcaseAssignment;
    ParentReferences: ParentReferences$BriefcaseAssignment;
    ChildRelationships: ChildRelationships$BriefcaseAssignment;
  }

type Fields$BriefcaseDefinition = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsActive: boolean;
  Description: string | null;
};

type ParentReferences$BriefcaseDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BriefcaseDefinition = {
  //
  Briefcases: SObjectDefinition$BriefcaseAssignment;
  BriefcaseRules: SObjectDefinition$BriefcaseRule;
};

interface SObjectDefinition$BriefcaseDefinition extends SObjectDefinition<'BriefcaseDefinition'> {
    Name: 'BriefcaseDefinition';
    Fields: Fields$BriefcaseDefinition;
    ParentReferences: ParentReferences$BriefcaseDefinition;
    ChildRelationships: ChildRelationships$BriefcaseDefinition;
  }

type Fields$BriefcaseRule = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  BriefcaseId: string;
  TargetEntity: string;
  FilterLogic: string | null;
  QueryScope: string;
  RecordLimit: number | null;
  OrderBy: string | null;
  IsAscendingOrder: boolean;
};

type ParentReferences$BriefcaseRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Briefcase: SObjectDefinition$BriefcaseDefinition;
};

type ChildRelationships$BriefcaseRule = {
  //
  BriefcaseRuleFilters: SObjectDefinition$BriefcaseRuleFilter;
};

interface SObjectDefinition$BriefcaseRule extends SObjectDefinition<'BriefcaseRule'> {
    Name: 'BriefcaseRule';
    Fields: Fields$BriefcaseRule;
    ParentReferences: ParentReferences$BriefcaseRule;
    ChildRelationships: ChildRelationships$BriefcaseRule;
  }

type Fields$BriefcaseRuleFilter = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  BriefcaseRuleId: string;
  TargetEntityField: string;
  FilterOperator: string;
  FilterValue: string | null;
  FilterSeqNumber: number;
};

type ParentReferences$BriefcaseRuleFilter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BriefcaseRule: SObjectDefinition$BriefcaseRule;
};

type ChildRelationships$BriefcaseRuleFilter = {
  //
};

interface SObjectDefinition$BriefcaseRuleFilter extends SObjectDefinition<'BriefcaseRuleFilter'> {
    Name: 'BriefcaseRuleFilter';
    Fields: Fields$BriefcaseRuleFilter;
    ParentReferences: ParentReferences$BriefcaseRuleFilter;
    ChildRelationships: ChildRelationships$BriefcaseRuleFilter;
  }

type Fields$BusRegAuthTypeDependency = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentBusRegAuthId: string;
  DependentBusRegAuthId: string;
};

type ParentReferences$BusRegAuthTypeDependency = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentBusRegAuth: SObjectDefinition$BusRegAuthorizationType;
  DependentBusRegAuth: SObjectDefinition$BusRegAuthorizationType;
};

type ChildRelationships$BusRegAuthTypeDependency = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Shares: SObjectDefinition$BusRegAuthTypeDependencyShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$BusRegAuthTypeDependency extends SObjectDefinition<'BusRegAuthTypeDependency'> {
    Name: 'BusRegAuthTypeDependency';
    Fields: Fields$BusRegAuthTypeDependency;
    ParentReferences: ParentReferences$BusRegAuthTypeDependency;
    ChildRelationships: ChildRelationships$BusRegAuthTypeDependency;
  }

type Fields$BusRegAuthTypeDependencyShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$BusRegAuthTypeDependencyShare = {
  //
  Parent: SObjectDefinition$BusRegAuthTypeDependency;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusRegAuthTypeDependencyShare = {
  //
};

interface SObjectDefinition$BusRegAuthTypeDependencyShare extends SObjectDefinition<'BusRegAuthTypeDependencyShare'> {
    Name: 'BusRegAuthTypeDependencyShare';
    Fields: Fields$BusRegAuthTypeDependencyShare;
    ParentReferences: ParentReferences$BusRegAuthTypeDependencyShare;
    ChildRelationships: ChildRelationships$BusRegAuthTypeDependencyShare;
  }

type Fields$BusRegAuthorizationType = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  BusinessTypeIdentifierId: string;
  RegAuthTypeIdentifierId: string;
};

type ParentReferences$BusRegAuthorizationType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BusinessTypeIdentifier: SObjectDefinition$BusinessType;
  RegAuthTypeIdentifier: SObjectDefinition$RegulatoryAuthorizationType;
};

type ChildRelationships$BusRegAuthorizationType = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  BusRegAuthDepDependent: SObjectDefinition$BusRegAuthTypeDependency;
  BusRegAuthDepParent: SObjectDefinition$BusRegAuthTypeDependency;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$BusRegAuthorizationType extends SObjectDefinition<'BusRegAuthorizationType'> {
    Name: 'BusRegAuthorizationType';
    Fields: Fields$BusRegAuthorizationType;
    ParentReferences: ParentReferences$BusRegAuthorizationType;
    ChildRelationships: ChildRelationships$BusRegAuthorizationType;
  }

type Fields$BusinessHours = {
  //
  Id: string;
  Name: string;
  IsActive: boolean;
  IsDefault: boolean;
  SundayStartTime: DateString | null;
  SundayEndTime: DateString | null;
  MondayStartTime: DateString | null;
  MondayEndTime: DateString | null;
  TuesdayStartTime: DateString | null;
  TuesdayEndTime: DateString | null;
  WednesdayStartTime: DateString | null;
  WednesdayEndTime: DateString | null;
  ThursdayStartTime: DateString | null;
  ThursdayEndTime: DateString | null;
  FridayStartTime: DateString | null;
  FridayEndTime: DateString | null;
  SaturdayStartTime: DateString | null;
  SaturdayEndTime: DateString | null;
  TimeZoneSidKey: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  LastViewedDate: DateString | null;
};

type ParentReferences$BusinessHours = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessHours = {
  //
  Cases: SObjectDefinition$Case;
  Entitlements: SObjectDefinition$Entitlement;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$BusinessHours extends SObjectDefinition<'BusinessHours'> {
    Name: 'BusinessHours';
    Fields: Fields$BusinessHours;
    ParentReferences: ParentReferences$BusinessHours;
    ChildRelationships: ChildRelationships$BusinessHours;
  }

type Fields$BusinessLicense = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RegulatoryAuthorizationTypeId: string | null;
  BusinessTypeId: string | null;
};

type ParentReferences$BusinessLicense = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RegulatoryAuthorizationType: SObjectDefinition$RegulatoryAuthorizationType | null;
  BusinessType: SObjectDefinition$BusinessType | null;
};

type ChildRelationships$BusinessLicense = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthApplicationAssetLicense: SObjectDefinition$AuthApplicationAsset;
  ApplAuthorization: SObjectDefinition$AuthApplicationPlace;
  BusinessLicenseApplicationPermit: SObjectDefinition$BusinessLicenseApplication;
  Feeds: SObjectDefinition$BusinessLicenseFeed;
  Histories: SObjectDefinition$BusinessLicenseHistory;
  Shares: SObjectDefinition$BusinessLicenseShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  IndividualApplicationPermit: SObjectDefinition$IndividualApplication;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$BusinessLicense extends SObjectDefinition<'BusinessLicense'> {
    Name: 'BusinessLicense';
    Fields: Fields$BusinessLicense;
    ParentReferences: ParentReferences$BusinessLicense;
    ChildRelationships: ChildRelationships$BusinessLicense;
  }

type Fields$BusinessLicenseApplication = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string | null;
  Description: string | null;
  ApplicationCaseId: string | null;
  AppliedDate: DateString;
  ApprovedDate: DateString | null;
  PaymentDate: DateString | null;
  RequirementsCompleteDate: DateString | null;
  AmountPaid: number | null;
  PrimaryOwnerId: string | null;
  ApplicationType: string | null;
  ApplicantId: string | null;
  LicensePermitNameId: string | null;
  SiteStreet: string | null;
  SiteCity: string | null;
  SiteState: string | null;
  SitePostalCode: string | null;
  SiteCountry: string | null;
  SiteLatitude: number | null;
  SiteLongitude: number | null;
  SiteGeocodeAccuracy: string | null;
  SiteAddress: Address | null;
  BusinessTypeId: string | null;
  LicenseTypeId: string;
  Category: string;
  ApplicationCategory: string | null;
  Status: string | null;
  WasReturned: boolean;
  SavedApplicationRefId: string | null;
};

type ParentReferences$BusinessLicenseApplication = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account | null;
  ApplicationCase: SObjectDefinition$Case | null;
  PrimaryOwner: SObjectDefinition$Contact | null;
  Applicant: SObjectDefinition$Contact | null;
  LicensePermitName: SObjectDefinition$BusinessLicense | null;
  BusinessType: SObjectDefinition$BusinessType | null;
  LicenseType: SObjectDefinition$RegulatoryAuthorizationType;
  SavedApplicationRef: SObjectDefinition$PreliminaryApplicationRef | null;
};

type ChildRelationships$BusinessLicenseApplication = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthRegApplication: SObjectDefinition$AuthApplicationAsset;
  RegAuthApplication: SObjectDefinition$AuthApplicationPlace;
  Feeds: SObjectDefinition$BusinessLicenseApplicationFeed;
  Histories: SObjectDefinition$BusinessLicenseApplicationHistory;
  Shares: SObjectDefinition$BusinessLicenseApplicationShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$BusinessLicenseApplication extends SObjectDefinition<'BusinessLicenseApplication'> {
    Name: 'BusinessLicenseApplication';
    Fields: Fields$BusinessLicenseApplication;
    ParentReferences: ParentReferences$BusinessLicenseApplication;
    ChildRelationships: ChildRelationships$BusinessLicenseApplication;
  }

type Fields$BusinessLicenseApplicationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$BusinessLicenseApplicationFeed = {
  //
  Parent: SObjectDefinition$BusinessLicenseApplication;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$BusinessLicenseApplicationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$BusinessLicenseApplicationFeed extends SObjectDefinition<'BusinessLicenseApplicationFeed'> {
    Name: 'BusinessLicenseApplicationFeed';
    Fields: Fields$BusinessLicenseApplicationFeed;
    ParentReferences: ParentReferences$BusinessLicenseApplicationFeed;
    ChildRelationships: ChildRelationships$BusinessLicenseApplicationFeed;
  }

type Fields$BusinessLicenseApplicationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  BusinessLicenseApplicationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$BusinessLicenseApplicationHistory = {
  //
  BusinessLicenseApplication: SObjectDefinition$BusinessLicenseApplication;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessLicenseApplicationHistory = {
  //
};

interface SObjectDefinition$BusinessLicenseApplicationHistory extends SObjectDefinition<'BusinessLicenseApplicationHistory'> {
    Name: 'BusinessLicenseApplicationHistory';
    Fields: Fields$BusinessLicenseApplicationHistory;
    ParentReferences: ParentReferences$BusinessLicenseApplicationHistory;
    ChildRelationships: ChildRelationships$BusinessLicenseApplicationHistory;
  }

type Fields$BusinessLicenseApplicationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$BusinessLicenseApplicationShare = {
  //
  Parent: SObjectDefinition$BusinessLicenseApplication;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessLicenseApplicationShare = {
  //
};

interface SObjectDefinition$BusinessLicenseApplicationShare extends SObjectDefinition<'BusinessLicenseApplicationShare'> {
    Name: 'BusinessLicenseApplicationShare';
    Fields: Fields$BusinessLicenseApplicationShare;
    ParentReferences: ParentReferences$BusinessLicenseApplicationShare;
    ChildRelationships: ChildRelationships$BusinessLicenseApplicationShare;
  }

type Fields$BusinessLicenseFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$BusinessLicenseFeed = {
  //
  Parent: SObjectDefinition$BusinessLicense;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$BusinessLicenseFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$BusinessLicenseFeed extends SObjectDefinition<'BusinessLicenseFeed'> {
    Name: 'BusinessLicenseFeed';
    Fields: Fields$BusinessLicenseFeed;
    ParentReferences: ParentReferences$BusinessLicenseFeed;
    ChildRelationships: ChildRelationships$BusinessLicenseFeed;
  }

type Fields$BusinessLicenseHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  BusinessLicenseId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$BusinessLicenseHistory = {
  //
  BusinessLicense: SObjectDefinition$BusinessLicense;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessLicenseHistory = {
  //
};

interface SObjectDefinition$BusinessLicenseHistory extends SObjectDefinition<'BusinessLicenseHistory'> {
    Name: 'BusinessLicenseHistory';
    Fields: Fields$BusinessLicenseHistory;
    ParentReferences: ParentReferences$BusinessLicenseHistory;
    ChildRelationships: ChildRelationships$BusinessLicenseHistory;
  }

type Fields$BusinessLicenseShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$BusinessLicenseShare = {
  //
  Parent: SObjectDefinition$BusinessLicense;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessLicenseShare = {
  //
};

interface SObjectDefinition$BusinessLicenseShare extends SObjectDefinition<'BusinessLicenseShare'> {
    Name: 'BusinessLicenseShare';
    Fields: Fields$BusinessLicenseShare;
    ParentReferences: ParentReferences$BusinessLicenseShare;
    ChildRelationships: ChildRelationships$BusinessLicenseShare;
  }

type Fields$BusinessProcess = {
  //
  Id: string;
  Name: string;
  NamespacePrefix: string | null;
  Description: string | null;
  TableEnumOrId: string;
  IsActive: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$BusinessProcess = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessProcess = {
  //
};

interface SObjectDefinition$BusinessProcess extends SObjectDefinition<'BusinessProcess'> {
    Name: 'BusinessProcess';
    Fields: Fields$BusinessProcess;
    ParentReferences: ParentReferences$BusinessProcess;
    ChildRelationships: ChildRelationships$BusinessProcess;
  }

type Fields$BusinessProfile = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string;
  BusinessOperatingName: string | null;
  BusinessTaxIdentifier: string | null;
  BusinessStructure: string | null;
  Codice_gestionale__c: string | null;
  Conto_corrente_tesoreria__c: string | null;
  Tipologia_conto__c: string | null;
};

type ParentReferences$BusinessProfile = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account;
};

type ChildRelationships$BusinessProfile = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Feeds: SObjectDefinition$BusinessProfileFeed;
  Histories: SObjectDefinition$BusinessProfileHistory;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$BusinessProfile extends SObjectDefinition<'BusinessProfile'> {
    Name: 'BusinessProfile';
    Fields: Fields$BusinessProfile;
    ParentReferences: ParentReferences$BusinessProfile;
    ChildRelationships: ChildRelationships$BusinessProfile;
  }

type Fields$BusinessProfileFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$BusinessProfileFeed = {
  //
  Parent: SObjectDefinition$BusinessProfile;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$BusinessProfileFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$BusinessProfileFeed extends SObjectDefinition<'BusinessProfileFeed'> {
    Name: 'BusinessProfileFeed';
    Fields: Fields$BusinessProfileFeed;
    ParentReferences: ParentReferences$BusinessProfileFeed;
    ChildRelationships: ChildRelationships$BusinessProfileFeed;
  }

type Fields$BusinessProfileHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  BusinessProfileId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$BusinessProfileHistory = {
  //
  BusinessProfile: SObjectDefinition$BusinessProfile;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessProfileHistory = {
  //
};

interface SObjectDefinition$BusinessProfileHistory extends SObjectDefinition<'BusinessProfileHistory'> {
    Name: 'BusinessProfileHistory';
    Fields: Fields$BusinessProfileHistory;
    ParentReferences: ParentReferences$BusinessProfileHistory;
    ChildRelationships: ChildRelationships$BusinessProfileHistory;
  }

type Fields$BusinessType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  Industry: string | null;
  ActivityCode: string | null;
  AuthorizationActivityType: string;
};

type ParentReferences$BusinessType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessType = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RegulatoryAuthAndBusinessTypeRelations: SObjectDefinition$BusRegAuthorizationType;
  LicenseBusinessType: SObjectDefinition$BusinessLicense;
  BlaBusinessType: SObjectDefinition$BusinessLicenseApplication;
  Shares: SObjectDefinition$BusinessTypeShare;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  IaBusinessType: SObjectDefinition$IndividualApplication;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$BusinessType extends SObjectDefinition<'BusinessType'> {
    Name: 'BusinessType';
    Fields: Fields$BusinessType;
    ParentReferences: ParentReferences$BusinessType;
    ChildRelationships: ChildRelationships$BusinessType;
  }

type Fields$BusinessTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$BusinessTypeShare = {
  //
  Parent: SObjectDefinition$BusinessType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessTypeShare = {
  //
};

interface SObjectDefinition$BusinessTypeShare extends SObjectDefinition<'BusinessTypeShare'> {
    Name: 'BusinessTypeShare';
    Fields: Fields$BusinessTypeShare;
    ParentReferences: ParentReferences$BusinessTypeShare;
    ChildRelationships: ChildRelationships$BusinessTypeShare;
  }

type Fields$Calendar = {
  //
  Id: string;
  Name: string;
  UserId: string | null;
  Type: string;
  IsActive: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Calendar = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Calendar = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  EventRelations: SObjectDefinition$EventRelation;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
};

interface SObjectDefinition$Calendar extends SObjectDefinition<'Calendar'> {
    Name: 'Calendar';
    Fields: Fields$Calendar;
    ParentReferences: ParentReferences$Calendar;
    ChildRelationships: ChildRelationships$Calendar;
  }

type Fields$CalendarView = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDisplayed: boolean;
  Color: string | null;
  FillPattern: string | null;
  ListViewFilterId: string | null;
  DateHandlingType: string | null;
  StartField: string;
  EndField: string | null;
  DisplayField: string;
  SobjectType: string;
};

type ParentReferences$CalendarView = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ListViewFilter: SObjectDefinition$ListView | null;
};

type ChildRelationships$CalendarView = {
  //
  Shares: SObjectDefinition$CalendarViewShare;
};

interface SObjectDefinition$CalendarView extends SObjectDefinition<'CalendarView'> {
    Name: 'CalendarView';
    Fields: Fields$CalendarView;
    ParentReferences: ParentReferences$CalendarView;
    ChildRelationships: ChildRelationships$CalendarView;
  }

type Fields$CalendarViewShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CalendarViewShare = {
  //
  Parent: SObjectDefinition$CalendarView;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CalendarViewShare = {
  //
};

interface SObjectDefinition$CalendarViewShare extends SObjectDefinition<'CalendarViewShare'> {
    Name: 'CalendarViewShare';
    Fields: Fields$CalendarViewShare;
    ParentReferences: ParentReferences$CalendarViewShare;
    ChildRelationships: ChildRelationships$CalendarViewShare;
  }

type Fields$CallCenter = {
  //
  Id: string;
  Name: string;
  InternalName: string;
  Version: number | null;
  AdapterUrl: string | null;
  CustomSettings: string | null;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$CallCenter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CallCenter = {
  //
};

interface SObjectDefinition$CallCenter extends SObjectDefinition<'CallCenter'> {
    Name: 'CallCenter';
    Fields: Fields$CallCenter;
    ParentReferences: ParentReferences$CallCenter;
    ChildRelationships: ChildRelationships$CallCenter;
  }

type Fields$CallCoachConfigModifyEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  OrganizationId: string;
  ChangeType: string;
  ProviderIdChange: string | null;
};

type ParentReferences$CallCoachConfigModifyEvent = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CallCoachConfigModifyEvent = {
  //
};

interface SObjectDefinition$CallCoachConfigModifyEvent extends SObjectDefinition<'CallCoachConfigModifyEvent'> {
    Name: 'CallCoachConfigModifyEvent';
    Fields: Fields$CallCoachConfigModifyEvent;
    ParentReferences: ParentReferences$CallCoachConfigModifyEvent;
    ChildRelationships: ChildRelationships$CallCoachConfigModifyEvent;
  }

type Fields$CallCoachingMediaProvider = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProviderName: string;
  ProviderDescription: string | null;
  IsActive: boolean;
};

type ParentReferences$CallCoachingMediaProvider = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CallCoachingMediaProvider = {
  //
};

interface SObjectDefinition$CallCoachingMediaProvider extends SObjectDefinition<'CallCoachingMediaProvider'> {
    Name: 'CallCoachingMediaProvider';
    Fields: Fields$CallCoachingMediaProvider;
    ParentReferences: ParentReferences$CallCoachingMediaProvider;
    ChildRelationships: ChildRelationships$CallCoachingMediaProvider;
  }

type Fields$Campaign = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  ParentId: string | null;
  Type: string | null;
  Status: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  ExpectedRevenue: number | null;
  BudgetedCost: number | null;
  ActualCost: number | null;
  ExpectedResponse: number | null;
  NumberSent: number | null;
  IsActive: boolean;
  Description: string | null;
  NumberOfLeads: number;
  NumberOfConvertedLeads: number;
  NumberOfContacts: number;
  NumberOfResponses: number;
  NumberOfOpportunities: number;
  NumberOfWonOpportunities: number;
  AmountAllOpportunities: number;
  AmountWonOpportunities: number;
  HierarchyNumberOfLeads: number | null;
  HierarchyNumberOfConvertedLeads: number | null;
  HierarchyNumberOfContacts: number | null;
  HierarchyNumberOfResponses: number | null;
  HierarchyNumberOfOpportunities: number | null;
  HierarchyNumberOfWonOpportunities: number | null;
  HierarchyAmountAllOpportunities: number | null;
  HierarchyAmountWonOpportunities: number | null;
  HierarchyNumberSent: number | null;
  HierarchyExpectedRevenue: number | null;
  HierarchyBudgetedCost: number | null;
  HierarchyActualCost: number | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CampaignMemberRecordTypeId: string | null;
};

type ParentReferences$Campaign = {
  //
  Parent: SObjectDefinition$Campaign | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CampaignMemberRecordType: SObjectDefinition$RecordType | null;
};

type ChildRelationships$Campaign = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  ChildCampaigns: SObjectDefinition$Campaign;
  Feeds: SObjectDefinition$CampaignFeed;
  Histories: SObjectDefinition$CampaignHistory;
  CampaignMembers: SObjectDefinition$CampaignMember;
  CampaignMemberStatuses: SObjectDefinition$CampaignMemberStatus;
  Shares: SObjectDefinition$CampaignShare;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  ListEmails: SObjectDefinition$ListEmail;
  ListEmailRecipientSources: SObjectDefinition$ListEmailRecipientSource;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Campaign extends SObjectDefinition<'Campaign'> {
    Name: 'Campaign';
    Fields: Fields$Campaign;
    ParentReferences: ParentReferences$Campaign;
    ChildRelationships: ChildRelationships$Campaign;
  }

type Fields$CampaignChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  ParentId: string | null;
  Type: string | null;
  Status: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  ExpectedRevenue: number | null;
  BudgetedCost: number | null;
  ActualCost: number | null;
  ExpectedResponse: number | null;
  NumberSent: number | null;
  IsActive: boolean;
  Description: string | null;
  NumberOfLeads: number | null;
  NumberOfConvertedLeads: number | null;
  NumberOfContacts: number | null;
  NumberOfResponses: number | null;
  NumberOfOpportunities: number | null;
  NumberOfWonOpportunities: number | null;
  AmountAllOpportunities: number | null;
  AmountWonOpportunities: number | null;
  HierarchyNumberOfLeads: number | null;
  HierarchyNumberOfConvertedLeads: number | null;
  HierarchyNumberOfContacts: number | null;
  HierarchyNumberOfResponses: number | null;
  HierarchyNumberOfOpportunities: number | null;
  HierarchyNumberOfWonOpportunities: number | null;
  HierarchyAmountAllOpportunities: number | null;
  HierarchyAmountWonOpportunities: number | null;
  HierarchyNumberSent: number | null;
  HierarchyExpectedRevenue: number | null;
  HierarchyBudgetedCost: number | null;
  HierarchyActualCost: number | null;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  CampaignMemberRecordTypeId: string | null;
};

type ParentReferences$CampaignChangeEvent = {
  //
};

type ChildRelationships$CampaignChangeEvent = {
  //
};

interface SObjectDefinition$CampaignChangeEvent extends SObjectDefinition<'CampaignChangeEvent'> {
    Name: 'CampaignChangeEvent';
    Fields: Fields$CampaignChangeEvent;
    ParentReferences: ParentReferences$CampaignChangeEvent;
    ChildRelationships: ChildRelationships$CampaignChangeEvent;
  }

type Fields$CampaignFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CampaignFeed = {
  //
  Parent: SObjectDefinition$Campaign;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CampaignFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CampaignFeed extends SObjectDefinition<'CampaignFeed'> {
    Name: 'CampaignFeed';
    Fields: Fields$CampaignFeed;
    ParentReferences: ParentReferences$CampaignFeed;
    ChildRelationships: ChildRelationships$CampaignFeed;
  }

type Fields$CampaignHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CampaignId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CampaignHistory = {
  //
  Campaign: SObjectDefinition$Campaign;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignHistory = {
  //
};

interface SObjectDefinition$CampaignHistory extends SObjectDefinition<'CampaignHistory'> {
    Name: 'CampaignHistory';
    Fields: Fields$CampaignHistory;
    ParentReferences: ParentReferences$CampaignHistory;
    ChildRelationships: ChildRelationships$CampaignHistory;
  }

type Fields$CampaignMember = {
  //
  Id: string;
  IsDeleted: boolean;
  CampaignId: string;
  LeadId: string | null;
  ContactId: string | null;
  Status: string | null;
  HasResponded: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FirstRespondedDate: DateString | null;
  Salutation: string | null;
  Name: string | null;
  FirstName: string | null;
  LastName: string | null;
  Title: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Email: string | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  Description: string | null;
  DoNotCall: boolean;
  HasOptedOutOfEmail: boolean;
  HasOptedOutOfFax: boolean;
  LeadSource: string | null;
  CompanyOrAccount: string | null;
  Type: string | null;
  LeadOrContactId: string | null;
  LeadOrContactOwnerId: string | null;
};

type ParentReferences$CampaignMember = {
  //
  Campaign: SObjectDefinition$Campaign;
  Lead: SObjectDefinition$Lead | null;
  Contact: SObjectDefinition$Contact | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LeadOrContactOwner: SObjectDefinition$Name | null;
};

type ChildRelationships$CampaignMember = {
  //
  ListEmailIndividualRecipients: SObjectDefinition$ListEmailIndividualRecipient;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$CampaignMember extends SObjectDefinition<'CampaignMember'> {
    Name: 'CampaignMember';
    Fields: Fields$CampaignMember;
    ParentReferences: ParentReferences$CampaignMember;
    ChildRelationships: ChildRelationships$CampaignMember;
  }

type Fields$CampaignMemberChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CampaignId: string | null;
  LeadId: string | null;
  ContactId: string | null;
  Status: string | null;
  HasResponded: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  FirstRespondedDate: DateString | null;
};

type ParentReferences$CampaignMemberChangeEvent = {
  //
};

type ChildRelationships$CampaignMemberChangeEvent = {
  //
};

interface SObjectDefinition$CampaignMemberChangeEvent extends SObjectDefinition<'CampaignMemberChangeEvent'> {
    Name: 'CampaignMemberChangeEvent';
    Fields: Fields$CampaignMemberChangeEvent;
    ParentReferences: ParentReferences$CampaignMemberChangeEvent;
    ChildRelationships: ChildRelationships$CampaignMemberChangeEvent;
  }

type Fields$CampaignMemberStatus = {
  //
  Id: string;
  IsDeleted: boolean;
  CampaignId: string;
  Label: string;
  SortOrder: number | null;
  IsDefault: boolean;
  HasResponded: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CampaignMemberStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignMemberStatus = {
  //
};

interface SObjectDefinition$CampaignMemberStatus extends SObjectDefinition<'CampaignMemberStatus'> {
    Name: 'CampaignMemberStatus';
    Fields: Fields$CampaignMemberStatus;
    ParentReferences: ParentReferences$CampaignMemberStatus;
    ChildRelationships: ChildRelationships$CampaignMemberStatus;
  }

type Fields$CampaignMemberStatusChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CampaignId: string | null;
  SortOrder: number | null;
  IsDefault: boolean;
  HasResponded: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$CampaignMemberStatusChangeEvent = {
  //
};

type ChildRelationships$CampaignMemberStatusChangeEvent = {
  //
};

interface SObjectDefinition$CampaignMemberStatusChangeEvent extends SObjectDefinition<'CampaignMemberStatusChangeEvent'> {
    Name: 'CampaignMemberStatusChangeEvent';
    Fields: Fields$CampaignMemberStatusChangeEvent;
    ParentReferences: ParentReferences$CampaignMemberStatusChangeEvent;
    ChildRelationships: ChildRelationships$CampaignMemberStatusChangeEvent;
  }

type Fields$CampaignShare = {
  //
  Id: string;
  CampaignId: string;
  UserOrGroupId: string;
  CampaignAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CampaignShare = {
  //
  Campaign: SObjectDefinition$Campaign;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignShare = {
  //
};

interface SObjectDefinition$CampaignShare extends SObjectDefinition<'CampaignShare'> {
    Name: 'CampaignShare';
    Fields: Fields$CampaignShare;
    ParentReferences: ParentReferences$CampaignShare;
    ChildRelationships: ChildRelationships$CampaignShare;
  }

type Fields$Case = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  CaseNumber: string;
  ContactId: string | null;
  AccountId: string | null;
  AssetId: string | null;
  ProductId: string | null;
  EntitlementId: string | null;
  SourceId: string | null;
  BusinessHoursId: string;
  ParentId: string | null;
  SuppliedName: string | null;
  SuppliedEmail: string | null;
  SuppliedPhone: string | null;
  SuppliedCompany: string | null;
  Type: string | null;
  RecordTypeId: string | null;
  Status: string | null;
  Reason: string | null;
  Origin: string | null;
  Language: string | null;
  Subject: string | null;
  Priority: string | null;
  Description: string | null;
  IsClosed: boolean;
  ClosedDate: DateString | null;
  IsEscalated: boolean;
  OwnerId: string;
  IsClosedOnCreate: boolean;
  SlaStartDate: DateString | null;
  SlaExitDate: DateString | null;
  IsStopped: boolean;
  StopStartDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ContactPhone: string | null;
  ContactMobile: string | null;
  ContactEmail: string | null;
  ContactFax: string | null;
  Comments: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ServiceContractId: string | null;
  MilestoneStatus: string | null;
  Aggiunto__c: string | null;
  Ambito__c: string | null;
  Argomento__c: string | null;
  Categoria_PA_non_clusterizzata__c: string | null;
  Categoria__c: string | null;
  Classificazione_Calcolata__c: string | null;
  Classificazione_Di_Default__c: string | null;
  Close_Reason__c: string | null;
  Commenti_Ente__c: string | null;
  Comunicazione_inviata__c: boolean;
  Contatto_telefonico_wtc__c: string | null;
  Controlli_Necessari__c: string | null;
  Data_Sottomissione_Pratica__c: DateString | null;
  Data_apertura_chiusura__c: DateString | null;
  Data_invio_risoluzione__c: DateString | null;
  Data_ultima_modifica__c: DateString | null;
  Descrizione_wtc__c: string | null;
  Dettaglio_richiesta__c: string | null;
  DocJobId__c: string | null;
  Email_wtc__c: string | null;
  Giorni_dalla_sottomissione__c: number | null;
  Misura__c: string | null;
  Motivazione_Rifiuto_Pratica__c: string | null;
  Motivazione_a_supporto__c: string | null;
  Nome_richiedente_wtc__c: string | null;
  Oggetto_wtc__c: string | null;
  Old_Contact__c: string | null;
  PA_clusterizzata__c: boolean;
  Questionario__c: string | null;
  Rate_Numerico__c: number | null;
  Richiesta_callback__c: boolean;
  Risoluzione__c: string | null;
  Servizio__c: string | null;
  Stato_calcolato__c: string | null;
  Step_Compilazione_Questionario__c: string | null;
  SubmittedBy__c: string | null;
  Tipo_di_record__c: string | null;
  Ulteriori_informazioni_a_supporto__c: string | null;
  User__c: string | null;
  EmailConfigName__c: string | null;
  Case_Classification__c: string | null;
  Nome_Account_Manager__c: string | null;
  Data_Sottomissione_Pratica_Padre__c: DateString | null;
  Sintesi_servizio__c: string | null;
  Due_Date_ACN__c: DateString | null;
  Due_Date_PA__c: DateString | null;
  Last_counter_ACN__c: number | null;
  Proroga_in_corso__c: boolean;
  Proroga_richiesta_precedentemente__c: boolean;
  Scaduta__c: boolean;
  Counter_ACN__c: number | null;
  Counter_PA__c: number | null;
  Due_Date_ACN_formula__c: boolean;
  Categoria_Richiedente_o_Richiedente__c: string | null;
  Commenti_stato_interno__c: string | null;
  Stato_Interno__c: string | null;
  Accettazione_Dichiarazione_Step_2__c: boolean;
  Last_Confirmed_Step_Piano_di_Migrazione__c: number | null;
  Modalit_di_migrazione__c: string | null;
  Motivazione_Processo_di_Convalida__c: string | null;
  Piano_di_Migrazione__c: string | null;
  Tag__c: string | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Assegnatario_task_PDM__c: string | null;
  Data_esito_convalida_PDM__c: DateString | null;
  Data_ultima_assegnazione__c: DateString | null;
  In_aggiornamento__c: boolean;
  Motivazione__c: string | null;
  isCloned__c: boolean;
  Data_riapertura__c: DateString | null;
  Fascia_oraria_preferita__c: string | null;
  Richiesta_risolta__c: boolean;
  New_Contact__c: string | null;
  Area_geografica__c: string | null;
};

type ParentReferences$Case = {
  //
  MasterRecord: SObjectDefinition$Case | null;
  Contact: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  Asset: SObjectDefinition$Asset | null;
  Product: SObjectDefinition$Product2 | null;
  Entitlement: SObjectDefinition$Entitlement | null;
  Source: SObjectDefinition$Name | null;
  BusinessHours: SObjectDefinition$BusinessHours;
  Parent: SObjectDefinition$Case | null;
  RecordType: SObjectDefinition$RecordType | null;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ServiceContract: SObjectDefinition$ServiceContract | null;
  Old_Contact__r: SObjectDefinition$Contact | null;
  Servizio__r: SObjectDefinition$Catalogo_Servizi__c | null;
  SubmittedBy__r: SObjectDefinition$Contact | null;
  User__r: SObjectDefinition$User | null;
  Piano_di_Migrazione__r: SObjectDefinition$Case | null;
  Assegnatario_task_PDM__r: SObjectDefinition$User | null;
  New_Contact__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Case = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  BusinessLicenseApplicationCase: SObjectDefinition$BusinessLicenseApplication;
  Cases: SObjectDefinition$Case;
  CaseArticles: SObjectDefinition$CaseArticle;
  CaseComments: SObjectDefinition$CaseComment;
  CaseContactRoles: SObjectDefinition$CaseContactRole;
  CaseExternalDocuments: SObjectDefinition$CaseExternalDocument;
  Feeds: SObjectDefinition$CaseFeed;
  Histories: SObjectDefinition$CaseHistory;
  CaseMilestones: SObjectDefinition$CaseMilestone;
  Shares: SObjectDefinition$CaseShare;
  CaseSolutions: SObjectDefinition$CaseSolution;
  TeamMembers: SObjectDefinition$CaseTeamMember;
  TeamTemplateRecords: SObjectDefinition$CaseTeamTemplateRecord;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  EmailMessages: SObjectDefinition$EmailMessage;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  IndividualApplicationCase: SObjectDefinition$IndividualApplication;
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Posts: SObjectDefinition$SocialPost;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$Case extends SObjectDefinition<'Case'> {
    Name: 'Case';
    Fields: Fields$Case;
    ParentReferences: ParentReferences$Case;
    ChildRelationships: ChildRelationships$Case;
  }

type Fields$CaseArticle = {
  //
  Id: string;
  CaseId: string;
  KnowledgeArticleId: string;
  KnowledgeArticleVersionId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ArticleLanguage: string | null;
  ArticleVersionNumber: number | null;
  IsSharedByEmail: boolean;
};

type ParentReferences$CaseArticle = {
  //
  Case: SObjectDefinition$Case;
  KnowledgeArticle: SObjectDefinition$Knowledge__ka;
  KnowledgeArticleVersion: SObjectDefinition$Knowledge__kav | null;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseArticle = {
  //
};

interface SObjectDefinition$CaseArticle extends SObjectDefinition<'CaseArticle'> {
    Name: 'CaseArticle';
    Fields: Fields$CaseArticle;
    ParentReferences: ParentReferences$CaseArticle;
    ChildRelationships: ChildRelationships$CaseArticle;
  }

type Fields$CaseChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CaseNumber: string;
  ContactId: string | null;
  AccountId: string | null;
  AssetId: string | null;
  ProductId: string | null;
  EntitlementId: string | null;
  SourceId: string | null;
  BusinessHoursId: string | null;
  ParentId: string | null;
  SuppliedName: string | null;
  SuppliedEmail: string | null;
  SuppliedPhone: string | null;
  SuppliedCompany: string | null;
  Type: string | null;
  RecordTypeId: string | null;
  Status: string | null;
  Reason: string | null;
  Origin: string | null;
  Language: string | null;
  Subject: string | null;
  Priority: string | null;
  Description: string | null;
  IsClosed: boolean;
  ClosedDate: DateString | null;
  IsEscalated: boolean;
  OwnerId: string | null;
  IsClosedOnCreate: boolean;
  SlaStartDate: DateString | null;
  SlaExitDate: DateString | null;
  IsStopped: boolean;
  StopStartDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ServiceContractId: string | null;
  Aggiunto__c: string | null;
  Ambito__c: string | null;
  Argomento__c: string | null;
  Categoria_PA_non_clusterizzata__c: string | null;
  Categoria__c: string | null;
  Classificazione_Calcolata__c: string | null;
  Classificazione_Di_Default__c: string | null;
  Close_Reason__c: string | null;
  Commenti_Ente__c: string | null;
  Comunicazione_inviata__c: boolean;
  Contatto_telefonico_wtc__c: string | null;
  Controlli_Necessari__c: string | null;
  Data_Sottomissione_Pratica__c: DateString | null;
  Data_apertura_chiusura__c: DateString | null;
  Data_invio_risoluzione__c: DateString | null;
  Data_ultima_modifica__c: DateString | null;
  Descrizione_wtc__c: string | null;
  Dettaglio_richiesta__c: string | null;
  DocJobId__c: string | null;
  Email_wtc__c: string | null;
  Giorni_dalla_sottomissione__c: number | null;
  Misura__c: string | null;
  Motivazione_Rifiuto_Pratica__c: string | null;
  Motivazione_a_supporto__c: string | null;
  Nome_richiedente_wtc__c: string | null;
  Oggetto_wtc__c: string | null;
  Old_Contact__c: string | null;
  PA_clusterizzata__c: boolean;
  Questionario__c: string | null;
  Rate_Numerico__c: number | null;
  Richiesta_callback__c: boolean;
  Risoluzione__c: string | null;
  Servizio__c: string | null;
  Stato_calcolato__c: string | null;
  Step_Compilazione_Questionario__c: string | null;
  SubmittedBy__c: string | null;
  Tipo_di_record__c: string | null;
  Ulteriori_informazioni_a_supporto__c: string | null;
  User__c: string | null;
  EmailConfigName__c: string | null;
  Case_Classification__c: string | null;
  Nome_Account_Manager__c: string | null;
  Data_Sottomissione_Pratica_Padre__c: DateString | null;
  Sintesi_servizio__c: string | null;
  Due_Date_ACN__c: DateString | null;
  Due_Date_PA__c: DateString | null;
  Last_counter_ACN__c: number | null;
  Proroga_in_corso__c: boolean;
  Proroga_richiesta_precedentemente__c: boolean;
  Scaduta__c: boolean;
  Counter_ACN__c: number | null;
  Counter_PA__c: number | null;
  Due_Date_ACN_formula__c: boolean;
  Categoria_Richiedente_o_Richiedente__c: string | null;
  Commenti_stato_interno__c: string | null;
  Stato_Interno__c: string | null;
  Accettazione_Dichiarazione_Step_2__c: boolean;
  Last_Confirmed_Step_Piano_di_Migrazione__c: number | null;
  Modalit_di_migrazione__c: string | null;
  Motivazione_Processo_di_Convalida__c: string | null;
  Piano_di_Migrazione__c: string | null;
  Tag__c: string | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Assegnatario_task_PDM__c: string | null;
  Data_esito_convalida_PDM__c: DateString | null;
  Data_ultima_assegnazione__c: DateString | null;
  In_aggiornamento__c: boolean;
  Motivazione__c: string | null;
  isCloned__c: boolean;
  Data_riapertura__c: DateString | null;
  Fascia_oraria_preferita__c: string | null;
  Richiesta_risolta__c: boolean;
  New_Contact__c: string | null;
  Area_geografica__c: string | null;
};

type ParentReferences$CaseChangeEvent = {
  //
};

type ChildRelationships$CaseChangeEvent = {
  //
};

interface SObjectDefinition$CaseChangeEvent extends SObjectDefinition<'CaseChangeEvent'> {
    Name: 'CaseChangeEvent';
    Fields: Fields$CaseChangeEvent;
    ParentReferences: ParentReferences$CaseChangeEvent;
    ChildRelationships: ChildRelationships$CaseChangeEvent;
  }

type Fields$CaseComment = {
  //
  Id: string;
  ParentId: string;
  IsPublished: boolean;
  CommentBody: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CaseComment = {
  //
  Parent: SObjectDefinition$Case;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseComment = {
  //
};

interface SObjectDefinition$CaseComment extends SObjectDefinition<'CaseComment'> {
    Name: 'CaseComment';
    Fields: Fields$CaseComment;
    ParentReferences: ParentReferences$CaseComment;
    ChildRelationships: ChildRelationships$CaseComment;
  }

type Fields$CaseContactRole = {
  //
  Id: string;
  CasesId: string;
  ContactId: string;
  Role: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$CaseContactRole = {
  //
  Cases: SObjectDefinition$Case;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseContactRole = {
  //
};

interface SObjectDefinition$CaseContactRole extends SObjectDefinition<'CaseContactRole'> {
    Name: 'CaseContactRole';
    Fields: Fields$CaseContactRole;
    ParentReferences: ParentReferences$CaseContactRole;
    ChildRelationships: ChildRelationships$CaseContactRole;
  }

type Fields$CaseExternalDocument = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CaseId: string;
  ExternalId: string | null;
  Title: string | null;
  DisplayUrl: string | null;
  ExternalDocumentUid: string | null;
};

type ParentReferences$CaseExternalDocument = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Case: SObjectDefinition$Case;
};

type ChildRelationships$CaseExternalDocument = {
  //
};

interface SObjectDefinition$CaseExternalDocument extends SObjectDefinition<'CaseExternalDocument'> {
    Name: 'CaseExternalDocument';
    Fields: Fields$CaseExternalDocument;
    ParentReferences: ParentReferences$CaseExternalDocument;
    ChildRelationships: ChildRelationships$CaseExternalDocument;
  }

type Fields$CaseFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CaseFeed = {
  //
  Parent: SObjectDefinition$Case;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CaseFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CaseFeed extends SObjectDefinition<'CaseFeed'> {
    Name: 'CaseFeed';
    Fields: Fields$CaseFeed;
    ParentReferences: ParentReferences$CaseFeed;
    ChildRelationships: ChildRelationships$CaseFeed;
  }

type Fields$CaseHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CaseId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CaseHistory = {
  //
  Case: SObjectDefinition$Case;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseHistory = {
  //
};

interface SObjectDefinition$CaseHistory extends SObjectDefinition<'CaseHistory'> {
    Name: 'CaseHistory';
    Fields: Fields$CaseHistory;
    ParentReferences: ParentReferences$CaseHistory;
    ChildRelationships: ChildRelationships$CaseHistory;
  }

type Fields$CaseMilestone = {
  //
  Id: string;
  CaseId: string;
  StartDate: DateString | null;
  TargetDate: DateString;
  CompletionDate: DateString | null;
  MilestoneTypeId: string | null;
  IsCompleted: boolean;
  IsViolated: boolean;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
  TargetResponseInMins: number | null;
  TargetResponseInHrs: number | null;
  TargetResponseInDays: number | null;
  TimeRemainingInMins: string | null;
  TimeRemainingInHrs: string | null;
  TimeRemainingInDays: number | null;
  ElapsedTimeInMins: number | null;
  ElapsedTimeInHrs: number | null;
  ElapsedTimeInDays: number | null;
  TimeSinceTargetInMins: string | null;
  TimeSinceTargetInHrs: string | null;
  TimeSinceTargetInDays: number | null;
  BusinessHoursId: string | null;
};

type ParentReferences$CaseMilestone = {
  //
  Case: SObjectDefinition$Case;
  MilestoneType: SObjectDefinition$MilestoneType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BusinessHours: SObjectDefinition$BusinessHours | null;
};

type ChildRelationships$CaseMilestone = {
  //
};

interface SObjectDefinition$CaseMilestone extends SObjectDefinition<'CaseMilestone'> {
    Name: 'CaseMilestone';
    Fields: Fields$CaseMilestone;
    ParentReferences: ParentReferences$CaseMilestone;
    ChildRelationships: ChildRelationships$CaseMilestone;
  }

type Fields$CaseShare = {
  //
  Id: string;
  CaseId: string;
  UserOrGroupId: string;
  CaseAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CaseShare = {
  //
  Case: SObjectDefinition$Case;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseShare = {
  //
};

interface SObjectDefinition$CaseShare extends SObjectDefinition<'CaseShare'> {
    Name: 'CaseShare';
    Fields: Fields$CaseShare;
    ParentReferences: ParentReferences$CaseShare;
    ChildRelationships: ChildRelationships$CaseShare;
  }

type Fields$CaseSolution = {
  //
  Id: string;
  CaseId: string;
  SolutionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$CaseSolution = {
  //
  Case: SObjectDefinition$Case;
  Solution: SObjectDefinition$Solution;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseSolution = {
  //
};

interface SObjectDefinition$CaseSolution extends SObjectDefinition<'CaseSolution'> {
    Name: 'CaseSolution';
    Fields: Fields$CaseSolution;
    ParentReferences: ParentReferences$CaseSolution;
    ChildRelationships: ChildRelationships$CaseSolution;
  }

type Fields$CaseStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsClosed: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$CaseStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseStatus = {
  //
};

interface SObjectDefinition$CaseStatus extends SObjectDefinition<'CaseStatus'> {
    Name: 'CaseStatus';
    Fields: Fields$CaseStatus;
    ParentReferences: ParentReferences$CaseStatus;
    ChildRelationships: ChildRelationships$CaseStatus;
  }

type Fields$CaseSubjectParticle = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Index: number;
  Type: string;
  TextField: string | null;
};

type ParentReferences$CaseSubjectParticle = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseSubjectParticle = {
  //
};

interface SObjectDefinition$CaseSubjectParticle extends SObjectDefinition<'CaseSubjectParticle'> {
    Name: 'CaseSubjectParticle';
    Fields: Fields$CaseSubjectParticle;
    ParentReferences: ParentReferences$CaseSubjectParticle;
    ChildRelationships: ChildRelationships$CaseSubjectParticle;
  }

type Fields$CaseTeamMember = {
  //
  Id: string;
  ParentId: string;
  MemberId: string;
  TeamTemplateMemberId: string | null;
  TeamRoleId: string;
  TeamTemplateId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamMember = {
  //
  Parent: SObjectDefinition$Case;
  Member: SObjectDefinition$Name;
  TeamTemplateMember: SObjectDefinition$CaseTeamTemplateMember | null;
  TeamRole: SObjectDefinition$CaseTeamRole;
  TeamTemplate: SObjectDefinition$CaseTeamTemplate | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamMember = {
  //
};

interface SObjectDefinition$CaseTeamMember extends SObjectDefinition<'CaseTeamMember'> {
    Name: 'CaseTeamMember';
    Fields: Fields$CaseTeamMember;
    ParentReferences: ParentReferences$CaseTeamMember;
    ChildRelationships: ChildRelationships$CaseTeamMember;
  }

type Fields$CaseTeamRole = {
  //
  Id: string;
  Name: string;
  AccessLevel: string;
  PreferencesVisibleInCSP: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamRole = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamRole = {
  //
};

interface SObjectDefinition$CaseTeamRole extends SObjectDefinition<'CaseTeamRole'> {
    Name: 'CaseTeamRole';
    Fields: Fields$CaseTeamRole;
    ParentReferences: ParentReferences$CaseTeamRole;
    ChildRelationships: ChildRelationships$CaseTeamRole;
  }

type Fields$CaseTeamTemplate = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamTemplate = {
  //
};

interface SObjectDefinition$CaseTeamTemplate extends SObjectDefinition<'CaseTeamTemplate'> {
    Name: 'CaseTeamTemplate';
    Fields: Fields$CaseTeamTemplate;
    ParentReferences: ParentReferences$CaseTeamTemplate;
    ChildRelationships: ChildRelationships$CaseTeamTemplate;
  }

type Fields$CaseTeamTemplateMember = {
  //
  Id: string;
  TeamTemplateId: string;
  MemberId: string;
  TeamRoleId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamTemplateMember = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamTemplateMember = {
  //
};

interface SObjectDefinition$CaseTeamTemplateMember extends SObjectDefinition<'CaseTeamTemplateMember'> {
    Name: 'CaseTeamTemplateMember';
    Fields: Fields$CaseTeamTemplateMember;
    ParentReferences: ParentReferences$CaseTeamTemplateMember;
    ChildRelationships: ChildRelationships$CaseTeamTemplateMember;
  }

type Fields$CaseTeamTemplateRecord = {
  //
  Id: string;
  ParentId: string;
  TeamTemplateId: string;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamTemplateRecord = {
  //
  Parent: SObjectDefinition$Case;
  TeamTemplate: SObjectDefinition$CaseTeamTemplate;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamTemplateRecord = {
  //
};

interface SObjectDefinition$CaseTeamTemplateRecord extends SObjectDefinition<'CaseTeamTemplateRecord'> {
    Name: 'CaseTeamTemplateRecord';
    Fields: Fields$CaseTeamTemplateRecord;
    ParentReferences: ParentReferences$CaseTeamTemplateRecord;
    ChildRelationships: ChildRelationships$CaseTeamTemplateRecord;
  }

type Fields$Catalogo_Servizi__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Advanced_Price__c: number | null;
  Anagrafica_Servizi__c: string | null;
  Basic_Price__c: number | null;
  Classificazione__c: string | null;
  Cluster__c: string | null;
  Essenziale__c: boolean;
  Obsoleto__c: boolean;
  Servizio_Obbligatorio__c: boolean;
  Prevent_delete__c: boolean;
};

type ParentReferences$Catalogo_Servizi__ChangeEvent = {
  //
};

type ChildRelationships$Catalogo_Servizi__ChangeEvent = {
  //
};

interface SObjectDefinition$Catalogo_Servizi__ChangeEvent extends SObjectDefinition<'Catalogo_Servizi__ChangeEvent'> {
    Name: 'Catalogo_Servizi__ChangeEvent';
    Fields: Fields$Catalogo_Servizi__ChangeEvent;
    ParentReferences: ParentReferences$Catalogo_Servizi__ChangeEvent;
    ChildRelationships: ChildRelationships$Catalogo_Servizi__ChangeEvent;
  }

type Fields$Catalogo_Servizi__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Catalogo_Servizi__Share = {
  //
  Parent: SObjectDefinition$Catalogo_Servizi__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Catalogo_Servizi__Share = {
  //
};

interface SObjectDefinition$Catalogo_Servizi__Share extends SObjectDefinition<'Catalogo_Servizi__Share'> {
    Name: 'Catalogo_Servizi__Share';
    Fields: Fields$Catalogo_Servizi__Share;
    ParentReferences: ParentReferences$Catalogo_Servizi__Share;
    ChildRelationships: ChildRelationships$Catalogo_Servizi__Share;
  }

type Fields$Catalogo_Servizi__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Advanced_Price__c: number | null;
  Anagrafica_Servizi__c: string | null;
  Basic_Price__c: number | null;
  Classificazione__c: string | null;
  Cluster__c: string | null;
  Essenziale__c: boolean;
  Obsoleto__c: boolean;
  Servizio_Obbligatorio__c: boolean;
  Prevent_delete__c: boolean;
};

type ParentReferences$Catalogo_Servizi__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Anagrafica_Servizi__r: SObjectDefinition$Anagrafica_Servizi__c | null;
  Cluster__r: SObjectDefinition$Cluster__c | null;
};

type ChildRelationships$Catalogo_Servizi__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Shares: SObjectDefinition$Catalogo_Servizi__Share;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Catalogo_Servizi__c extends SObjectDefinition<'Catalogo_Servizi__c'> {
    Name: 'Catalogo_Servizi__c';
    Fields: Fields$Catalogo_Servizi__c;
    ParentReferences: ParentReferences$Catalogo_Servizi__c;
    ChildRelationships: ChildRelationships$Catalogo_Servizi__c;
  }

type Fields$CategoryNode = {
  //
  Id: string;
  ParentId: string | null;
  MasterLabel: string;
  SortOrder: number | null;
  SortStyle: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CategoryNode = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CategoryNode = {
  //
};

interface SObjectDefinition$CategoryNode extends SObjectDefinition<'CategoryNode'> {
    Name: 'CategoryNode';
    Fields: Fields$CategoryNode;
    ParentReferences: ParentReferences$CategoryNode;
    ChildRelationships: ChildRelationships$CategoryNode;
  }

type Fields$ChatterActivity = {
  //
  Id: string;
  NetworkId: string | null;
  ParentId: string | null;
  PostCount: number;
  CommentCount: number;
  CommentReceivedCount: number;
  LikeReceivedCount: number;
  InfluenceRawRank: number;
  SystemModstamp: DateString;
};

type ParentReferences$ChatterActivity = {
  //
};

type ChildRelationships$ChatterActivity = {
  //
};

interface SObjectDefinition$ChatterActivity extends SObjectDefinition<'ChatterActivity'> {
    Name: 'ChatterActivity';
    Fields: Fields$ChatterActivity;
    ParentReferences: ParentReferences$ChatterActivity;
    ChildRelationships: ChildRelationships$ChatterActivity;
  }

type Fields$ChatterExtension = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  IsProtected: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExtensionName: string;
  Type: string;
  IconId: string | null;
  Description: string;
  CompositionComponentEnumOrId: string | null;
  RenderComponentEnumOrId: string | null;
  HoverText: string | null;
  HeaderText: string | null;
};

type ParentReferences$ChatterExtension = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Icon: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$ChatterExtension = {
  //
  Localization: SObjectDefinition$ChatterExtensionLocalization;
};

interface SObjectDefinition$ChatterExtension extends SObjectDefinition<'ChatterExtension'> {
    Name: 'ChatterExtension';
    Fields: Fields$ChatterExtension;
    ParentReferences: ParentReferences$ChatterExtension;
    ChildRelationships: ChildRelationships$ChatterExtension;
  }

type Fields$ChatterExtensionConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ChatterExtensionId: string | null;
  NetworkId: string | null;
  CanCreate: boolean;
  CanRead: boolean;
  Position: number | null;
};

type ParentReferences$ChatterExtensionConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ChatterExtension: SObjectDefinition$ChatterExtension | null;
  Network: SObjectDefinition$Network | null;
};

type ChildRelationships$ChatterExtensionConfig = {
  //
};

interface SObjectDefinition$ChatterExtensionConfig extends SObjectDefinition<'ChatterExtensionConfig'> {
    Name: 'ChatterExtensionConfig';
    Fields: Fields$ChatterExtensionConfig;
    ParentReferences: ParentReferences$ChatterExtensionConfig;
    ChildRelationships: ChildRelationships$ChatterExtensionConfig;
  }

type Fields$ChatterExtensionLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ChatterExtensionLocalization = {
  //
  Parent: SObjectDefinition$ChatterExtension;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ChatterExtensionLocalization = {
  //
};

interface SObjectDefinition$ChatterExtensionLocalization extends SObjectDefinition<'ChatterExtensionLocalization'> {
    Name: 'ChatterExtensionLocalization';
    Fields: Fields$ChatterExtensionLocalization;
    ParentReferences: ParentReferences$ChatterExtensionLocalization;
    ChildRelationships: ChildRelationships$ChatterExtensionLocalization;
  }

type Fields$Checklist__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Accessibilita__c: string | null;
  Aggiornamento_PaaS_risorse__c: string | null;
  Aggiornamento_SaaS_mancata_migrazione__c: string | null;
  Aggiornamento_SaaS_nuova_soluzione__c: string | null;
  Buone_pratiche__c: string | null;
  CSP_qualificato_prodotto_identificato__c: string | null;
  Coerenza_uso_font__c: string | null;
  Cookie__c: string | null;
  Dati_critici_soluzione_CSP__c: string | null;
  Esigenze_servizi_oggetto_migrazione__c: string | null;
  Esito_Checklist__c: string | null;
  ID_univoco_segregazione__c: string | null;
  IP_pubblici_soluzioni_tecnologiche__c: string | null;
  Libreria_elementi_interfaccia__c: string | null;
  Migrazione_congruente_scenari__c: string | null;
  Motivazione__c: string | null;
  Necessita_erogazione_servizi__c: string | null;
  No_attivita_altri_finanziamenti__c: string | null;
  No_servizi_altri_finanziamenti__c: string | null;
  Note_Accessibilita__c: string | null;
  Note_AggiornamentoSaaS_mancataMigrazione__c: string | null;
  Note_Aggiornamento_PaaS_risorse__c: string | null;
  Note_Aggiornamento_SaaS_nuova_soluzione__c: string | null;
  Note_Buone_pratiche__c: string | null;
  Note_CSP_qualificatoprod_identificato__c: string | null;
  Note_Coerenza_uso_font__c: string | null;
  Note_Cookie__c: string | null;
  Note_Dati_critici_soluzione_CSP__c: string | null;
  Note_Esigenze_serv_oggetto_migrazioni__c: string | null;
  Note_ID_univoco_segregazione__c: string | null;
  Note_IP_pubblici_soluzioni_tecnologiche__c: string | null;
  Note_Libreria_elementi_interfaccia__c: string | null;
  Note_Migrazione_congruente_scenari__c: string | null;
  Note_Necessita_erogazione_servizi__c: string | null;
  Note_No_attivita_altri_finanziamenti__c: string | null;
  Note_No_servizi_altri_finanziamenti__c: string | null;
  Note_OpenID_Connect_Piano_formativo__c: string | null;
  Note_PaaS_esigenze_servizi__c: string | null;
  Note_PaaS_piattaforme_mancata_migrazione__c: string | null;
  Note_PaaS_qualificati_prodotto_identific__c: string | null;
  Note_Piattaforme_attive_data_finanziabil__c: string | null;
  Note_Presenza_LOGO_UE__c: string | null;
  Note_Privacy__c: string | null;
  Note_Produzione_giustifica_no_produzione__c: string | null;
  Note_Protocollo_https__c: string | null;
  Note_SaaS_qualificato_prodotto_identific__c: string | null;
  Note_Servizi_attivi_data_finanziabilita__c: string | null;
  Note_Servizi_fascicolo_attivi__c: string | null;
  Note_URL_del_sito__c: string | null;
  Note_Uso_temi_CMS__c: string | null;
  Note_Visibilita_servizi_rete_privata__c: string | null;
  Note_Voci_menu_primo_livello__c: string | null;
  Note_Voci_menu_secondo_livello__c: string | null;
  OpenID_Connect_Piano_formativo__c: string | null;
  PaaS_esigenze_servizi__c: string | null;
  PaaS_piattaforme_mancata_migrazione__c: string | null;
  PaaS_qualificati_prodotto_identificato__c: string | null;
  Piattaforme_attive_data_finanziabilita__c: string | null;
  Presenza_LOGO_UE__c: string | null;
  Privacy__c: string | null;
  Produzione_giustifica_no_produzione__c: string | null;
  Protocollo_https__c: string | null;
  SaaS_qualificato_prodotto_identificato__c: string | null;
  Servizi_attivi_data_finanziabilita__c: string | null;
  Servizi_fascicolo_attivi__c: string | null;
  URL_del_sito__c: string | null;
  Uso_temi_CMS__c: string | null;
  Visibilit_servizi_rete_privata__c: string | null;
  Voci_menu_primo_livello__c: string | null;
  Voci_menu_secondo_livello__c: string | null;
  canGeneratePDF__c: boolean;
  Servizi_fascicolo_attivi_143__c: string | null;
  Buone_pratiche_141__c: string | null;
  CSE110_Verifica_istanza_tempo__c: string | null;
  CSE11_Accesso_identita__c: string | null;
  CSE12_Presa_carico_istanza__c: string | null;
  CSE13_Consistenza_font_librerie__c: string | null;
  CSE14_Riepilogo_dati_inseriti__c: string | null;
  CSE15_Once_only__c: string | null;
  CSE16_Salva_bozza__c: string | null;
  CSE17_Valutazione_esperienza_servizio__c: string | null;
  CSE18_Verifica_stato_servizio__c: string | null;
  CSE19_Verifica_istanza_progresso__c: string | null;
  CSE21_Pagamento__c: string | null;
  CSE22_Prenotazione_appuntamenti__c: string | null;
  CSE31_Cookie__c: string | null;
  CSE32_Dichiarazione_accessibilit__c: string | null;
  CSE33_Informativa_privacy__c: string | null;
  CSE41_Velocit_risposta__c: string | null;
  CSE51_Https_servizi__c: string | null;
  CSE52_Sottodominio_servizi__c: string | null;
  CSI11_Coerenza_font_librerie__c: string | null;
  CSI12_Libreria_interfaccia__c: string | null;
  CSI13_Schede_informative__c: string | null;
  CSI14_TemiCMS__c: string | null;
  CSI15_Vocabolari__c: string | null;
  CSI16_Voci_menu1livello__c: string | null;
  CSI17_Titolo_pagine2livello__c: string | null;
  CSI21_Prenotazione_appuntamenti__c: string | null;
  CSI22_Assistenza_contatti__c: string | null;
  CSI23_Assistenza_FAQ__c: string | null;
  CSI24_Segnalazione_disservizio__c: string | null;
  CSI25_Valutazione_pagine_info__c: string | null;
  CSI26_Valutazione_scheda_servizio__c: string | null;
  CSI31_Cookie__c: string | null;
  CSI32_Dichiarazione_accessibilita__c: string | null;
  CSI33_Informativa_privacy__c: string | null;
  CSI34_Licenza__c: string | null;
  CSI41_Tempi_risposta__c: string | null;
  CSI51_Https__c: string | null;
  CSI52_Dominio__c: string | null;
  Note_Buone_pratiche_141_comuni__c: string | null;
  Note_CSE110_Verifica_istanza_tempo__c: string | null;
  Note_CSE11_Accesso_identita__c: string | null;
  Note_CSE12_Presa_carico_istanza__c: string | null;
  Note_CSE13_Consistenza_font_librerie__c: string | null;
  Note_CSE14_Riepilogo_dati_inseriti__c: string | null;
  Note_CSE15_Once_only__c: string | null;
  Note_CSE16_Salva_bozza__c: string | null;
  Note_CSE17_Valutazione_esperienza_serviz__c: string | null;
  Note_CSE18_Verifica_stato_servizio__c: string | null;
  Note_CSE19_Verifica_istanza_progresso__c: string | null;
  Note_CSE21_Pagamento__c: string | null;
  Note_CSE22_Prenotazione_appuntamenti__c: string | null;
  Note_CSE31_Cookie__c: string | null;
  Note_CSE32_Dichiarazione_accessibilita__c: string | null;
  Note_CSE33_Informativa_privacy__c: string | null;
  Note_CSE41_Velocita_risposta__c: string | null;
  Note_CSE51_Https_servizi__c: string | null;
  Note_CSE52_Sottodominio_servizi__c: string | null;
  Note_CSI11_Coerenza_font_librerie__c: string | null;
  Note_CSI12_Libreria_interfaccia__c: string | null;
  Note_CSI13_Schede_informative__c: string | null;
  Note_CSI14_TemiCMS__c: string | null;
  Note_CSI15_Vocabolari__c: string | null;
  Note_CSI16_Voci_menu1livello__c: string | null;
  Note_CSI17_Titolo_pagine2livello__c: string | null;
  Note_CSI21_Prenotazione_appuntamenti__c: string | null;
  Note_CSI22_Assistenza_contatti__c: string | null;
  Note_CSI23_Assistenza_FAQ__c: string | null;
  Note_CSI24_Segnalazione_disservizio__c: string | null;
  Note_CSI25_Valutazione_pagine_info__c: string | null;
  Note_CSI26_Valutazione_scheda_servizio__c: string | null;
  Note_CSI31_Cookie__c: string | null;
  Note_CSI32_Dichiarazione_accessibilita__c: string | null;
  Note_CSI33_Informativa_privacy__c: string | null;
  Note_CSI34_Licenza__c: string | null;
  Note_CSI41_Tempi_risposta__c: string | null;
  Note_CSI51_Https__c: string | null;
  Note_CSI52_Dominio__c: string | null;
  Note_Numero_API_avviso__c: string | null;
  Note_Presenza_LOGO_UE_com__c: string | null;
  Note_Servizi_attivi_data_finanziab_131__c: string | null;
  Note_URL_del_sito_com__c: string | null;
  Numero_API_avviso__c: string | null;
  Presenza_LOGO_UE_com__c: string | null;
  Servizi_attivi_data_finanziabilita_131__c: string | null;
  URL_del_sito_com__c: string | null;
  canGeneratePDF141Comuni__c: boolean;
  Controllo_esito_1_lv__c: string | null;
  Controllo_esito_2_lv__c: string | null;
  Coordinate_IBAN_o_conto_tesoreria__c: string | null;
  Data_esito_1_lv__c: DateString | null;
  Data_esito_2_lv__c: DateString | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  Parent_Task_Owner_Id__c: string | null;
  Verifica_correttezza_CL_asseveratori__c: string | null;
  Verifica_correttezza_CUP_CRE__c: string | null;
  Verifica_correttezza_allegato_5__c: string | null;
  Verifica_correttezza_contratti__c: string | null;
  Verifica_data_attivazione_servizi__c: string | null;
  Verifica_documentazione_prodotta__c: string | null;
  Verifica_titolare_effettivo__c: string | null;
  Autocert_notifiche_mod_manuale__c: string | null;
  Note_Autocert_notifiche_mod_manuale__c: string | null;
  Note_PDND_finanziabilita_avviso_mod_auto__c: string | null;
  Note_servizi_attivati_finanziabilita__c: string | null;
  Note_servizi_inseriti_attivi__c: string | null;
  PDND_finanziabilita_avviso_mod_auto__c: string | null;
  Servizi_attivati_finanziabilita__c: string | null;
  Servizi_inseriti_attivi__c: string | null;
  Allocazione_su_PSN__c: string | null;
  Attivazione_in_produzione__c: string | null;
  Compatibilita_classificazione__c: string | null;
  Configurazione_IP__c: string | null;
  Corrispondenza_con_atto_notorio__c: string | null;
  Migrazione_su_PSN__c: string | null;
  Motivazione_coerenza_sw__c: string | null;
  Note_Allocazione_su_PSN__c: string | null;
  Note_Attivazione_in_produzione__c: string | null;
  Note_Compatibilita_classificazione__c: string | null;
  Note_Configurazione_IP__c: string | null;
  Note_Corrispondenza_con_atto_notorio__c: string | null;
  Note_Migrazione_su_PSN__c: string | null;
  Note_Motivazione_coerenza_sw__c: string | null;
  Note_Soluzione_tecn_Per_ip_pubblici__c: string | null;
  Note_Utilizzo_IP__c: string | null;
  Note_Utilizzo_sul_PSN__c: string | null;
  Note_Verifica_compilazione_documenti__c: string | null;
  Note_Verifica_disponibilita__c: string | null;
  Note_Verifica_indicazione_modalita_migr__c: string | null;
  Note_Verifica_infrastruttura__c: string | null;
  Note_Verifica_riferimento_documenti__c: string | null;
  Note_Verifica_risorse_acquisite__c: string | null;
  Soluzione_tecn_Per_ip_pubblici__c: string | null;
  Utilizzo_IP__c: string | null;
  Utilizzo_sul_PSN__c: string | null;
  Verifica_compilazione_documenti__c: string | null;
  Verifica_disponibilita__c: string | null;
  Verifica_indicazione_modalita_migr__c: string | null;
  Verifica_infrastruttura__c: string | null;
  Verifica_riferimento_documenti__c: string | null;
  Verifica_risorse_acquisite__c: string | null;
  canGeneratePDF11__c: boolean;
  Aggiornamento_PaaS_risorse_MM__c: string | null;
  Allocazione_su_PSN_singolo__c: string | null;
  Attivazione_in_produzione_singolo__c: string | null;
  CSP_qualificato_prodotto_identificato_MM__c: string | null;
  Coerenza_schema_arch_origine__c: string | null;
  Configurazione_IP_singolo__c: string | null;
  Corrispondenza_con_report_PSN__c: string | null;
  Migrazione_su_PSN_singolo__c: string | null;
  Necessita_erogazione_servizi_MM__c: string | null;
  Note_CSP_qualificato_prod_ident_MM__c: string | null;
  Note_Configurazione_IP_singolo__c: string | null;
  Note_Corrispondenza_con_report_PSN__c: string | null;
  Note_Soluzione_tecn_Per_ip_pubblici_sing__c: string | null;
  Note_aggiornamento_PaaS_risorse_MM__c: string | null;
  Note_allocazione_su_PSN_singolo__c: string | null;
  Note_attivazione_in_produzione_singolo__c: string | null;
  Note_coerenza_schema_arch_origine__c: string | null;
  Note_migrazione_su_PSN_singolo__c: string | null;
  Note_necessita_erogazione_servizi_MM__c: string | null;
  Note_utilizzo_sul_PSN_singolo__c: string | null;
  Note_verifica_compilazione_documenti_MM__c: string | null;
  Note_verifica_indicazione_mod_migr_MM__c: string | null;
  Note_verifica_infrastruttura_MM__c: string | null;
  Note_verifica_risorse_acquisite_MM__c: string | null;
  Soluzione_tecn_Per_ip_pubblici_singolo__c: string | null;
  Tipo_Misura__c: string | null;
  Utilizzo_sul_PSN_singolo__c: string | null;
  Verifica_compilazione_documenti_MM__c: string | null;
  Verifica_indicazione_modalita_migr_MM__c: string | null;
  Verifica_infrastruttura_MM__c: string | null;
  Verifica_risorse_acquisite_MM__c: string | null;
  canGeneratePDFGeneral__c: boolean;
  API_Catalogo_conformi__c: string | null;
  Atto_di_ammissione_a_finanziamento__c: string | null;
  Campi_completi_e_date_post_31_12_2023__c: string | null;
  Caricamento_contratto_con_fornitore__c: string | null;
  Caricamento_report_SBBT__c: string | null;
  Coerenza_e_completezza_documentale__c: string | null;
  Coerenza_fascia_tecnologica_prevista__c: string | null;
  Conformit_al_principio_DNSH__c: string | null;
  Correttezza_componenti_FO_e_BO__c: string | null;
  Data_atto_digitale_post_adesione_ANSC__c: string | null;
  Data_chiusura_registri_preadesione_ANSC__c: string | null;
  Data_imposs_atto_post_adesione_ANSC__c: string | null;
  Descrizione_API_conforme__c: string | null;
  Digitalizzazione_delle_procedure_SUAP__c: string | null;
  Esclusione_doppio_finanziamento__c: string | null;
  Esecuzione_del_black_box_test__c: string | null;
  Nome_API_conforme__c: string | null;
  Rispetto_tempistiche_di_adeguamento__c: string | null;
  Rispetto_tempistiche_di_finanziamento__c: string | null;
  Valore_Esente_in_Data_atto_digitale__c: string | null;
  Valori_in_Soluzione_utilizzata__c: string | null;
  Note_API_Catalogo_conformi__c: string | null;
  Note_Descrizione_API_conforme__c: string | null;
  Note_Nome_API_conforme__c: string | null;
  Note_Rispetto_tempistiche_di_adeguamento__c: string | null;
  Note_atto_di_ammissione_a_finanziamento__c: string | null;
  Note_campi_completi_e_date__c: string | null;
  Note_caricamento_contratto_con_fornitore__c: string | null;
  Note_caricamento_report_SBBT__c: string | null;
  Note_coerenza_e_completezza_documentale__c: string | null;
  Note_coerenza_fascia_tecnologica_previst__c: string | null;
  Note_conformit_al_principio_DNSH__c: string | null;
  Note_correttezza_componenti_FO_e_BO__c: string | null;
  Note_data_atto_digitale_post_adesione__c: string | null;
  Note_data_chiusura_registri_preadesione__c: string | null;
  Note_data_impossibilita_atto__c: string | null;
  Note_digitalizzazione_procedure_SUAP__c: string | null;
  Note_esclusione_doppio_finanziamento__c: string | null;
  Note_esecuzione_del_black_box_test__c: string | null;
  Note_rispetto_tempistiche_di_finanziamen__c: string | null;
  Note_valore_esente__c: string | null;
  Note_valori_in_soluzione_utilizzata__c: string | null;
};

type ParentReferences$Checklist__ChangeEvent = {
  //
};

type ChildRelationships$Checklist__ChangeEvent = {
  //
};

interface SObjectDefinition$Checklist__ChangeEvent extends SObjectDefinition<'Checklist__ChangeEvent'> {
    Name: 'Checklist__ChangeEvent';
    Fields: Fields$Checklist__ChangeEvent;
    ParentReferences: ParentReferences$Checklist__ChangeEvent;
    ChildRelationships: ChildRelationships$Checklist__ChangeEvent;
  }

type Fields$Checklist__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Checklist__History = {
  //
  Parent: SObjectDefinition$Checklist__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Checklist__History = {
  //
};

interface SObjectDefinition$Checklist__History extends SObjectDefinition<'Checklist__History'> {
    Name: 'Checklist__History';
    Fields: Fields$Checklist__History;
    ParentReferences: ParentReferences$Checklist__History;
    ChildRelationships: ChildRelationships$Checklist__History;
  }

type Fields$Checklist__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Checklist__Share = {
  //
  Parent: SObjectDefinition$Checklist__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Checklist__Share = {
  //
};

interface SObjectDefinition$Checklist__Share extends SObjectDefinition<'Checklist__Share'> {
    Name: 'Checklist__Share';
    Fields: Fields$Checklist__Share;
    ParentReferences: ParentReferences$Checklist__Share;
    ChildRelationships: ChildRelationships$Checklist__Share;
  }

type Fields$Checklist__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Accessibilita__c: string | null;
  Aggiornamento_PaaS_risorse__c: string | null;
  Aggiornamento_SaaS_mancata_migrazione__c: string | null;
  Aggiornamento_SaaS_nuova_soluzione__c: string | null;
  Buone_pratiche__c: string | null;
  CSP_qualificato_prodotto_identificato__c: string | null;
  Coerenza_uso_font__c: string | null;
  Cookie__c: string | null;
  Dati_critici_soluzione_CSP__c: string | null;
  Esigenze_servizi_oggetto_migrazione__c: string | null;
  Esito_Checklist__c: string | null;
  ID_univoco_segregazione__c: string | null;
  IP_pubblici_soluzioni_tecnologiche__c: string | null;
  Libreria_elementi_interfaccia__c: string | null;
  Migrazione_congruente_scenari__c: string | null;
  Motivazione__c: string | null;
  Necessita_erogazione_servizi__c: string | null;
  No_attivita_altri_finanziamenti__c: string | null;
  No_servizi_altri_finanziamenti__c: string | null;
  Note_Accessibilita__c: string | null;
  Note_AggiornamentoSaaS_mancataMigrazione__c: string | null;
  Note_Aggiornamento_PaaS_risorse__c: string | null;
  Note_Aggiornamento_SaaS_nuova_soluzione__c: string | null;
  Note_Buone_pratiche__c: string | null;
  Note_CSP_qualificatoprod_identificato__c: string | null;
  Note_Coerenza_uso_font__c: string | null;
  Note_Cookie__c: string | null;
  Note_Dati_critici_soluzione_CSP__c: string | null;
  Note_Esigenze_serv_oggetto_migrazioni__c: string | null;
  Note_ID_univoco_segregazione__c: string | null;
  Note_IP_pubblici_soluzioni_tecnologiche__c: string | null;
  Note_Libreria_elementi_interfaccia__c: string | null;
  Note_Migrazione_congruente_scenari__c: string | null;
  Note_Necessita_erogazione_servizi__c: string | null;
  Note_No_attivita_altri_finanziamenti__c: string | null;
  Note_No_servizi_altri_finanziamenti__c: string | null;
  Note_OpenID_Connect_Piano_formativo__c: string | null;
  Note_PaaS_esigenze_servizi__c: string | null;
  Note_PaaS_piattaforme_mancata_migrazione__c: string | null;
  Note_PaaS_qualificati_prodotto_identific__c: string | null;
  Note_Piattaforme_attive_data_finanziabil__c: string | null;
  Note_Presenza_LOGO_UE__c: string | null;
  Note_Privacy__c: string | null;
  Note_Produzione_giustifica_no_produzione__c: string | null;
  Note_Protocollo_https__c: string | null;
  Note_SaaS_qualificato_prodotto_identific__c: string | null;
  Note_Servizi_attivi_data_finanziabilita__c: string | null;
  Note_Servizi_fascicolo_attivi__c: string | null;
  Note_URL_del_sito__c: string | null;
  Note_Uso_temi_CMS__c: string | null;
  Note_Visibilita_servizi_rete_privata__c: string | null;
  Note_Voci_menu_primo_livello__c: string | null;
  Note_Voci_menu_secondo_livello__c: string | null;
  OpenID_Connect_Piano_formativo__c: string | null;
  PaaS_esigenze_servizi__c: string | null;
  PaaS_piattaforme_mancata_migrazione__c: string | null;
  PaaS_qualificati_prodotto_identificato__c: string | null;
  Piattaforme_attive_data_finanziabilita__c: string | null;
  Presenza_LOGO_UE__c: string | null;
  Privacy__c: string | null;
  Produzione_giustifica_no_produzione__c: string | null;
  Protocollo_https__c: string | null;
  SaaS_qualificato_prodotto_identificato__c: string | null;
  Servizi_attivi_data_finanziabilita__c: string | null;
  Servizi_fascicolo_attivi__c: string | null;
  URL_del_sito__c: string | null;
  Uso_temi_CMS__c: string | null;
  Visibilit_servizi_rete_privata__c: string | null;
  Voci_menu_primo_livello__c: string | null;
  Voci_menu_secondo_livello__c: string | null;
  canGeneratePDF__c: boolean;
  Servizi_fascicolo_attivi_143__c: string | null;
  Buone_pratiche_141__c: string | null;
  CSE110_Verifica_istanza_tempo__c: string | null;
  CSE11_Accesso_identita__c: string | null;
  CSE12_Presa_carico_istanza__c: string | null;
  CSE13_Consistenza_font_librerie__c: string | null;
  CSE14_Riepilogo_dati_inseriti__c: string | null;
  CSE15_Once_only__c: string | null;
  CSE16_Salva_bozza__c: string | null;
  CSE17_Valutazione_esperienza_servizio__c: string | null;
  CSE18_Verifica_stato_servizio__c: string | null;
  CSE19_Verifica_istanza_progresso__c: string | null;
  CSE21_Pagamento__c: string | null;
  CSE22_Prenotazione_appuntamenti__c: string | null;
  CSE31_Cookie__c: string | null;
  CSE32_Dichiarazione_accessibilit__c: string | null;
  CSE33_Informativa_privacy__c: string | null;
  CSE41_Velocit_risposta__c: string | null;
  CSE51_Https_servizi__c: string | null;
  CSE52_Sottodominio_servizi__c: string | null;
  CSI11_Coerenza_font_librerie__c: string | null;
  CSI12_Libreria_interfaccia__c: string | null;
  CSI13_Schede_informative__c: string | null;
  CSI14_TemiCMS__c: string | null;
  CSI15_Vocabolari__c: string | null;
  CSI16_Voci_menu1livello__c: string | null;
  CSI17_Titolo_pagine2livello__c: string | null;
  CSI21_Prenotazione_appuntamenti__c: string | null;
  CSI22_Assistenza_contatti__c: string | null;
  CSI23_Assistenza_FAQ__c: string | null;
  CSI24_Segnalazione_disservizio__c: string | null;
  CSI25_Valutazione_pagine_info__c: string | null;
  CSI26_Valutazione_scheda_servizio__c: string | null;
  CSI31_Cookie__c: string | null;
  CSI32_Dichiarazione_accessibilita__c: string | null;
  CSI33_Informativa_privacy__c: string | null;
  CSI34_Licenza__c: string | null;
  CSI41_Tempi_risposta__c: string | null;
  CSI51_Https__c: string | null;
  CSI52_Dominio__c: string | null;
  Note_Buone_pratiche_141_comuni__c: string | null;
  Note_CSE110_Verifica_istanza_tempo__c: string | null;
  Note_CSE11_Accesso_identita__c: string | null;
  Note_CSE12_Presa_carico_istanza__c: string | null;
  Note_CSE13_Consistenza_font_librerie__c: string | null;
  Note_CSE14_Riepilogo_dati_inseriti__c: string | null;
  Note_CSE15_Once_only__c: string | null;
  Note_CSE16_Salva_bozza__c: string | null;
  Note_CSE17_Valutazione_esperienza_serviz__c: string | null;
  Note_CSE18_Verifica_stato_servizio__c: string | null;
  Note_CSE19_Verifica_istanza_progresso__c: string | null;
  Note_CSE21_Pagamento__c: string | null;
  Note_CSE22_Prenotazione_appuntamenti__c: string | null;
  Note_CSE31_Cookie__c: string | null;
  Note_CSE32_Dichiarazione_accessibilita__c: string | null;
  Note_CSE33_Informativa_privacy__c: string | null;
  Note_CSE41_Velocita_risposta__c: string | null;
  Note_CSE51_Https_servizi__c: string | null;
  Note_CSE52_Sottodominio_servizi__c: string | null;
  Note_CSI11_Coerenza_font_librerie__c: string | null;
  Note_CSI12_Libreria_interfaccia__c: string | null;
  Note_CSI13_Schede_informative__c: string | null;
  Note_CSI14_TemiCMS__c: string | null;
  Note_CSI15_Vocabolari__c: string | null;
  Note_CSI16_Voci_menu1livello__c: string | null;
  Note_CSI17_Titolo_pagine2livello__c: string | null;
  Note_CSI21_Prenotazione_appuntamenti__c: string | null;
  Note_CSI22_Assistenza_contatti__c: string | null;
  Note_CSI23_Assistenza_FAQ__c: string | null;
  Note_CSI24_Segnalazione_disservizio__c: string | null;
  Note_CSI25_Valutazione_pagine_info__c: string | null;
  Note_CSI26_Valutazione_scheda_servizio__c: string | null;
  Note_CSI31_Cookie__c: string | null;
  Note_CSI32_Dichiarazione_accessibilita__c: string | null;
  Note_CSI33_Informativa_privacy__c: string | null;
  Note_CSI34_Licenza__c: string | null;
  Note_CSI41_Tempi_risposta__c: string | null;
  Note_CSI51_Https__c: string | null;
  Note_CSI52_Dominio__c: string | null;
  Note_Numero_API_avviso__c: string | null;
  Note_Presenza_LOGO_UE_com__c: string | null;
  Note_Servizi_attivi_data_finanziab_131__c: string | null;
  Note_URL_del_sito_com__c: string | null;
  Numero_API_avviso__c: string | null;
  Presenza_LOGO_UE_com__c: string | null;
  Servizi_attivi_data_finanziabilita_131__c: string | null;
  URL_del_sito_com__c: string | null;
  canGeneratePDF141Comuni__c: boolean;
  Controllo_esito_1_lv__c: string | null;
  Controllo_esito_2_lv__c: string | null;
  Coordinate_IBAN_o_conto_tesoreria__c: string | null;
  Data_esito_1_lv__c: DateString | null;
  Data_esito_2_lv__c: DateString | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  Parent_Task_Owner_Id__c: string | null;
  Verifica_correttezza_CL_asseveratori__c: string | null;
  Verifica_correttezza_CUP_CRE__c: string | null;
  Verifica_correttezza_allegato_5__c: string | null;
  Verifica_correttezza_contratti__c: string | null;
  Verifica_data_attivazione_servizi__c: string | null;
  Verifica_documentazione_prodotta__c: string | null;
  Verifica_titolare_effettivo__c: string | null;
  Autocert_notifiche_mod_manuale__c: string | null;
  Note_Autocert_notifiche_mod_manuale__c: string | null;
  Note_PDND_finanziabilita_avviso_mod_auto__c: string | null;
  Note_servizi_attivati_finanziabilita__c: string | null;
  Note_servizi_inseriti_attivi__c: string | null;
  PDND_finanziabilita_avviso_mod_auto__c: string | null;
  Servizi_attivati_finanziabilita__c: string | null;
  Servizi_inseriti_attivi__c: string | null;
  Allocazione_su_PSN__c: string | null;
  Attivazione_in_produzione__c: string | null;
  Compatibilita_classificazione__c: string | null;
  Configurazione_IP__c: string | null;
  Corrispondenza_con_atto_notorio__c: string | null;
  Migrazione_su_PSN__c: string | null;
  Motivazione_coerenza_sw__c: string | null;
  Note_Allocazione_su_PSN__c: string | null;
  Note_Attivazione_in_produzione__c: string | null;
  Note_Compatibilita_classificazione__c: string | null;
  Note_Configurazione_IP__c: string | null;
  Note_Corrispondenza_con_atto_notorio__c: string | null;
  Note_Migrazione_su_PSN__c: string | null;
  Note_Motivazione_coerenza_sw__c: string | null;
  Note_Soluzione_tecn_Per_ip_pubblici__c: string | null;
  Note_Utilizzo_IP__c: string | null;
  Note_Utilizzo_sul_PSN__c: string | null;
  Note_Verifica_compilazione_documenti__c: string | null;
  Note_Verifica_disponibilita__c: string | null;
  Note_Verifica_indicazione_modalita_migr__c: string | null;
  Note_Verifica_infrastruttura__c: string | null;
  Note_Verifica_riferimento_documenti__c: string | null;
  Note_Verifica_risorse_acquisite__c: string | null;
  Soluzione_tecn_Per_ip_pubblici__c: string | null;
  Utilizzo_IP__c: string | null;
  Utilizzo_sul_PSN__c: string | null;
  Verifica_compilazione_documenti__c: string | null;
  Verifica_disponibilita__c: string | null;
  Verifica_indicazione_modalita_migr__c: string | null;
  Verifica_infrastruttura__c: string | null;
  Verifica_riferimento_documenti__c: string | null;
  Verifica_risorse_acquisite__c: string | null;
  canGeneratePDF11__c: boolean;
  Aggiornamento_PaaS_risorse_MM__c: string | null;
  Allocazione_su_PSN_singolo__c: string | null;
  Attivazione_in_produzione_singolo__c: string | null;
  CSP_qualificato_prodotto_identificato_MM__c: string | null;
  Coerenza_schema_arch_origine__c: string | null;
  Configurazione_IP_singolo__c: string | null;
  Corrispondenza_con_report_PSN__c: string | null;
  Migrazione_su_PSN_singolo__c: string | null;
  Necessita_erogazione_servizi_MM__c: string | null;
  Note_CSP_qualificato_prod_ident_MM__c: string | null;
  Note_Configurazione_IP_singolo__c: string | null;
  Note_Corrispondenza_con_report_PSN__c: string | null;
  Note_Soluzione_tecn_Per_ip_pubblici_sing__c: string | null;
  Note_aggiornamento_PaaS_risorse_MM__c: string | null;
  Note_allocazione_su_PSN_singolo__c: string | null;
  Note_attivazione_in_produzione_singolo__c: string | null;
  Note_coerenza_schema_arch_origine__c: string | null;
  Note_migrazione_su_PSN_singolo__c: string | null;
  Note_necessita_erogazione_servizi_MM__c: string | null;
  Note_utilizzo_sul_PSN_singolo__c: string | null;
  Note_verifica_compilazione_documenti_MM__c: string | null;
  Note_verifica_indicazione_mod_migr_MM__c: string | null;
  Note_verifica_infrastruttura_MM__c: string | null;
  Note_verifica_risorse_acquisite_MM__c: string | null;
  Soluzione_tecn_Per_ip_pubblici_singolo__c: string | null;
  Tipo_Misura__c: string | null;
  Utilizzo_sul_PSN_singolo__c: string | null;
  Verifica_compilazione_documenti_MM__c: string | null;
  Verifica_indicazione_modalita_migr_MM__c: string | null;
  Verifica_infrastruttura_MM__c: string | null;
  Verifica_risorse_acquisite_MM__c: string | null;
  canGeneratePDFGeneral__c: boolean;
  API_Catalogo_conformi__c: string | null;
  Atto_di_ammissione_a_finanziamento__c: string | null;
  Campi_completi_e_date_post_31_12_2023__c: string | null;
  Caricamento_contratto_con_fornitore__c: string | null;
  Caricamento_report_SBBT__c: string | null;
  Coerenza_e_completezza_documentale__c: string | null;
  Coerenza_fascia_tecnologica_prevista__c: string | null;
  Conformit_al_principio_DNSH__c: string | null;
  Correttezza_componenti_FO_e_BO__c: string | null;
  Data_atto_digitale_post_adesione_ANSC__c: string | null;
  Data_chiusura_registri_preadesione_ANSC__c: string | null;
  Data_imposs_atto_post_adesione_ANSC__c: string | null;
  Descrizione_API_conforme__c: string | null;
  Digitalizzazione_delle_procedure_SUAP__c: string | null;
  Esclusione_doppio_finanziamento__c: string | null;
  Esecuzione_del_black_box_test__c: string | null;
  Nome_API_conforme__c: string | null;
  Rispetto_tempistiche_di_adeguamento__c: string | null;
  Rispetto_tempistiche_di_finanziamento__c: string | null;
  Valore_Esente_in_Data_atto_digitale__c: string | null;
  Valori_in_Soluzione_utilizzata__c: string | null;
  Note_API_Catalogo_conformi__c: string | null;
  Note_Descrizione_API_conforme__c: string | null;
  Note_Nome_API_conforme__c: string | null;
  Note_Rispetto_tempistiche_di_adeguamento__c: string | null;
  Note_atto_di_ammissione_a_finanziamento__c: string | null;
  Note_campi_completi_e_date__c: string | null;
  Note_caricamento_contratto_con_fornitore__c: string | null;
  Note_caricamento_report_SBBT__c: string | null;
  Note_coerenza_e_completezza_documentale__c: string | null;
  Note_coerenza_fascia_tecnologica_previst__c: string | null;
  Note_conformit_al_principio_DNSH__c: string | null;
  Note_correttezza_componenti_FO_e_BO__c: string | null;
  Note_data_atto_digitale_post_adesione__c: string | null;
  Note_data_chiusura_registri_preadesione__c: string | null;
  Note_data_impossibilita_atto__c: string | null;
  Note_digitalizzazione_procedure_SUAP__c: string | null;
  Note_esclusione_doppio_finanziamento__c: string | null;
  Note_esecuzione_del_black_box_test__c: string | null;
  Note_rispetto_tempistiche_di_finanziamen__c: string | null;
  Note_valore_esente__c: string | null;
  Note_valori_in_soluzione_utilizzata__c: string | null;
};

type ParentReferences$Checklist__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Checklist__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Histories: SObjectDefinition$Checklist__History;
  Shares: SObjectDefinition$Checklist__Share;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Checklist__c extends SObjectDefinition<'Checklist__c'> {
    Name: 'Checklist__c';
    Fields: Fields$Checklist__c;
    ParentReferences: ParentReferences$Checklist__c;
    ChildRelationships: ChildRelationships$Checklist__c;
  }

type Fields$ClientBrowser = {
  //
  Id: string;
  UsersId: string;
  FullUserAgent: string | null;
  ProxyInfo: string | null;
  LastUpdate: DateString | null;
  CreatedDate: DateString;
};

type ParentReferences$ClientBrowser = {
  //
  Users: SObjectDefinition$User;
};

type ChildRelationships$ClientBrowser = {
  //
};

interface SObjectDefinition$ClientBrowser extends SObjectDefinition<'ClientBrowser'> {
    Name: 'ClientBrowser';
    Fields: Fields$ClientBrowser;
    ParentReferences: ParentReferences$ClientBrowser;
    ChildRelationships: ChildRelationships$ClientBrowser;
  }

type Fields$Cluster__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Canone__c: number | null;
  Considera_Advanced_Price__c: boolean;
  External_Key__c: string | null;
  Misura__c: string | null;
  Numero_Max_Servizi__c: number | null;
  Numero_Min_Servizi__c: number | null;
  Pacchetto__c: string | null;
  Prezzo_Tipologia__c: number | null;
  Range__c: string | null;
  Tipologia_Ente__c: string | null;
  Range_classificazione__c: string | null;
  PA_non_clusterizzata__c: boolean;
  Soglia_Variazione_Cronoprogramma__c: number | null;
  Costo_Unit_Critico__c: number | null;
  Costo_Unit_Ordinario__c: number | null;
  Numero_Max_Servizi_2__c: number | null;
  Numero_Min_Servizi_2__c: number | null;
  Numero_Massimo_Servizi_Fisici__c: number | null;
  Numero_Massimo_Servizi_Virtuali__c: number | null;
  Numero_Minimo_Servizi_Fisici__c: number | null;
  Numero_Minimo_Servizi_Virtuali__c: number | null;
  Soglia_Importo_Massimo__c: number | null;
  Soglia_Importo_Minimo__c: number | null;
  Nuovo_Avviso_1_4_3_App_IO__c: boolean;
  Nuovo_avviso__c: boolean;
  Versione__c: string | null;
};

type ParentReferences$Cluster__ChangeEvent = {
  //
};

type ChildRelationships$Cluster__ChangeEvent = {
  //
};

interface SObjectDefinition$Cluster__ChangeEvent extends SObjectDefinition<'Cluster__ChangeEvent'> {
    Name: 'Cluster__ChangeEvent';
    Fields: Fields$Cluster__ChangeEvent;
    ParentReferences: ParentReferences$Cluster__ChangeEvent;
    ChildRelationships: ChildRelationships$Cluster__ChangeEvent;
  }

type Fields$Cluster__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Cluster__Share = {
  //
  Parent: SObjectDefinition$Cluster__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Cluster__Share = {
  //
};

interface SObjectDefinition$Cluster__Share extends SObjectDefinition<'Cluster__Share'> {
    Name: 'Cluster__Share';
    Fields: Fields$Cluster__Share;
    ParentReferences: ParentReferences$Cluster__Share;
    ChildRelationships: ChildRelationships$Cluster__Share;
  }

type Fields$Cluster__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Canone__c: number | null;
  Considera_Advanced_Price__c: boolean;
  External_Key__c: string | null;
  Misura__c: string | null;
  Numero_Max_Servizi__c: number | null;
  Numero_Min_Servizi__c: number | null;
  Pacchetto__c: string | null;
  Prezzo_Tipologia__c: number | null;
  Range__c: string | null;
  Tipologia_Ente__c: string | null;
  Range_classificazione__c: string | null;
  PA_non_clusterizzata__c: boolean;
  Soglia_Variazione_Cronoprogramma__c: number | null;
  Costo_Unit_Critico__c: number | null;
  Costo_Unit_Ordinario__c: number | null;
  Numero_Max_Servizi_2__c: number | null;
  Numero_Min_Servizi_2__c: number | null;
  Numero_Massimo_Servizi_Fisici__c: number | null;
  Numero_Massimo_Servizi_Virtuali__c: number | null;
  Numero_Minimo_Servizi_Fisici__c: number | null;
  Numero_Minimo_Servizi_Virtuali__c: number | null;
  Soglia_Importo_Massimo__c: number | null;
  Soglia_Importo_Minimo__c: number | null;
  Nuovo_Avviso_1_4_3_App_IO__c: boolean;
  Nuovo_avviso__c: boolean;
  Versione__c: string | null;
};

type ParentReferences$Cluster__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Misura__r: SObjectDefinition$outfunds__Funding_Program__c | null;
};

type ChildRelationships$Cluster__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Shares: SObjectDefinition$Cluster__Share;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Cluster__c extends SObjectDefinition<'Cluster__c'> {
    Name: 'Cluster__c';
    Fields: Fields$Cluster__c;
    ParentReferences: ParentReferences$Cluster__c;
    ChildRelationships: ChildRelationships$Cluster__c;
  }

type Fields$CollaborationGroup = {
  //
  Id: string;
  Name: string;
  MemberCount: number | null;
  OwnerId: string;
  CollaborationType: string;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FullPhotoUrl: string | null;
  MediumPhotoUrl: string | null;
  SmallPhotoUrl: string | null;
  LastFeedModifiedDate: DateString;
  InformationTitle: string | null;
  InformationBody: string | null;
  HasPrivateFieldsAccess: boolean;
  CanHaveGuests: boolean;
  NetworkId: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsArchived: boolean;
  IsAutoArchiveDisabled: boolean;
  AnnouncementId: string | null;
  GroupEmail: string | null;
  BannerPhotoUrl: string | null;
  IsBroadcast: boolean;
};

type ParentReferences$CollaborationGroup = {
  //
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
  Announcement: SObjectDefinition$Announcement | null;
};

type ChildRelationships$CollaborationGroup = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Feeds: SObjectDefinition$CollaborationGroupFeed;
  GroupMembers: SObjectDefinition$CollaborationGroupMember;
  GroupMemberRequests: SObjectDefinition$CollaborationGroupMemberRequest;
  CollaborationGroupRecords: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ChatterGroup: SObjectDefinition$LightningOnboardingConfig;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$CollaborationGroup extends SObjectDefinition<'CollaborationGroup'> {
    Name: 'CollaborationGroup';
    Fields: Fields$CollaborationGroup;
    ParentReferences: ParentReferences$CollaborationGroup;
    ChildRelationships: ChildRelationships$CollaborationGroup;
  }

type Fields$CollaborationGroupFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CollaborationGroupFeed = {
  //
  Parent: SObjectDefinition$CollaborationGroup;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CollaborationGroupFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CollaborationGroupFeed extends SObjectDefinition<'CollaborationGroupFeed'> {
    Name: 'CollaborationGroupFeed';
    Fields: Fields$CollaborationGroupFeed;
    ParentReferences: ParentReferences$CollaborationGroupFeed;
    ChildRelationships: ChildRelationships$CollaborationGroupFeed;
  }

type Fields$CollaborationGroupMember = {
  //
  Id: string;
  CollaborationGroupId: string;
  MemberId: string;
  CollaborationRole: string | null;
  NotificationFrequency: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastFeedAccessDate: DateString | null;
  NetworkId: string | null;
};

type ParentReferences$CollaborationGroupMember = {
  //
  CollaborationGroup: SObjectDefinition$CollaborationGroup;
  Member: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CollaborationGroupMember = {
  //
};

interface SObjectDefinition$CollaborationGroupMember extends SObjectDefinition<'CollaborationGroupMember'> {
    Name: 'CollaborationGroupMember';
    Fields: Fields$CollaborationGroupMember;
    ParentReferences: ParentReferences$CollaborationGroupMember;
    ChildRelationships: ChildRelationships$CollaborationGroupMember;
  }

type Fields$CollaborationGroupMemberRequest = {
  //
  Id: string;
  CollaborationGroupId: string;
  RequesterId: string;
  ResponseMessage: string | null;
  Status: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CollaborationGroupMemberRequest = {
  //
  CollaborationGroup: SObjectDefinition$CollaborationGroup;
  Requester: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CollaborationGroupMemberRequest = {
  //
};

interface SObjectDefinition$CollaborationGroupMemberRequest extends SObjectDefinition<'CollaborationGroupMemberRequest'> {
    Name: 'CollaborationGroupMemberRequest';
    Fields: Fields$CollaborationGroupMemberRequest;
    ParentReferences: ParentReferences$CollaborationGroupMemberRequest;
    ChildRelationships: ChildRelationships$CollaborationGroupMemberRequest;
  }

type Fields$CollaborationGroupRecord = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CollaborationGroupId: string;
  RecordId: string;
  NetworkId: string | null;
};

type ParentReferences$CollaborationGroupRecord = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CollaborationGroup: SObjectDefinition$CollaborationGroup;
  Record: SObjectDefinition$Name;
  Network: SObjectDefinition$Network | null;
};

type ChildRelationships$CollaborationGroupRecord = {
  //
};

interface SObjectDefinition$CollaborationGroupRecord extends SObjectDefinition<'CollaborationGroupRecord'> {
    Name: 'CollaborationGroupRecord';
    Fields: Fields$CollaborationGroupRecord;
    ParentReferences: ParentReferences$CollaborationGroupRecord;
    ChildRelationships: ChildRelationships$CollaborationGroupRecord;
  }

type Fields$CollaborationInvitation = {
  //
  Id: string;
  ParentId: string | null;
  SharedEntityId: string;
  InviterId: string;
  InvitedUserEmail: string;
  InvitedUserEmailNormalized: string;
  Status: string;
  OptionalMessage: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CollaborationInvitation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CollaborationInvitation = {
  //
};

interface SObjectDefinition$CollaborationInvitation extends SObjectDefinition<'CollaborationInvitation'> {
    Name: 'CollaborationInvitation';
    Fields: Fields$CollaborationInvitation;
    ParentReferences: ParentReferences$CollaborationInvitation;
    ChildRelationships: ChildRelationships$CollaborationInvitation;
  }

type Fields$ColorDefinition = {
  //
  Id: string;
  DurableId: string | null;
  TabDefinitionId: string | null;
  Color: string | null;
  Theme: string | null;
  Context: string | null;
};

type ParentReferences$ColorDefinition = {
  //
};

type ChildRelationships$ColorDefinition = {
  //
};

interface SObjectDefinition$ColorDefinition extends SObjectDefinition<'ColorDefinition'> {
    Name: 'ColorDefinition';
    Fields: Fields$ColorDefinition;
    ParentReferences: ParentReferences$ColorDefinition;
    ChildRelationships: ChildRelationships$ColorDefinition;
  }

type Fields$CombinedAttachment = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  RecordType: string | null;
  Title: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  ContentUrl: string | null;
  ExternalDataSourceName: string | null;
  ExternalDataSourceType: string | null;
  SharingOption: string | null;
};

type ParentReferences$CombinedAttachment = {
  //
  Parent: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CombinedAttachment = {
  //
};

interface SObjectDefinition$CombinedAttachment extends SObjectDefinition<'CombinedAttachment'> {
    Name: 'CombinedAttachment';
    Fields: Fields$CombinedAttachment;
    ParentReferences: ParentReferences$CombinedAttachment;
    ChildRelationships: ChildRelationships$CombinedAttachment;
  }

type Fields$CommSubscription = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DataUsePurposeId: string | null;
  IsDefault: boolean;
};

type ParentReferences$CommSubscription = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DataUsePurpose: SObjectDefinition$DataUsePurpose | null;
};

type ChildRelationships$CommSubscription = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionChannelTypes: SObjectDefinition$CommSubscriptionChannelType;
  Feeds: SObjectDefinition$CommSubscriptionFeed;
  Histories: SObjectDefinition$CommSubscriptionHistory;
  Shares: SObjectDefinition$CommSubscriptionShare;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$CommSubscription extends SObjectDefinition<'CommSubscription'> {
    Name: 'CommSubscription';
    Fields: Fields$CommSubscription;
    ParentReferences: ParentReferences$CommSubscription;
    ChildRelationships: ChildRelationships$CommSubscription;
  }

type Fields$CommSubscriptionChannelType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CommunicationSubscriptionId: string;
  EngagementChannelTypeId: string;
};

type ParentReferences$CommSubscriptionChannelType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CommunicationSubscription: SObjectDefinition$CommSubscription;
  EngagementChannelType: SObjectDefinition$EngagementChannelType;
};

type ChildRelationships$CommSubscriptionChannelType = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  Feeds: SObjectDefinition$CommSubscriptionChannelTypeFeed;
  Histories: SObjectDefinition$CommSubscriptionChannelTypeHistory;
  Shares: SObjectDefinition$CommSubscriptionChannelTypeShare;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$CommSubscriptionChannelType extends SObjectDefinition<'CommSubscriptionChannelType'> {
    Name: 'CommSubscriptionChannelType';
    Fields: Fields$CommSubscriptionChannelType;
    ParentReferences: ParentReferences$CommSubscriptionChannelType;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelType;
  }

type Fields$CommSubscriptionChannelTypeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionChannelTypeFeed = {
  //
  Parent: SObjectDefinition$CommSubscriptionChannelType;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionChannelTypeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionChannelTypeFeed extends SObjectDefinition<'CommSubscriptionChannelTypeFeed'> {
    Name: 'CommSubscriptionChannelTypeFeed';
    Fields: Fields$CommSubscriptionChannelTypeFeed;
    ParentReferences: ParentReferences$CommSubscriptionChannelTypeFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelTypeFeed;
  }

type Fields$CommSubscriptionChannelTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionChannelTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionChannelTypeHistory = {
  //
  CommSubscriptionChannelType: SObjectDefinition$CommSubscriptionChannelType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionChannelTypeHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionChannelTypeHistory extends SObjectDefinition<'CommSubscriptionChannelTypeHistory'> {
    Name: 'CommSubscriptionChannelTypeHistory';
    Fields: Fields$CommSubscriptionChannelTypeHistory;
    ParentReferences: ParentReferences$CommSubscriptionChannelTypeHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelTypeHistory;
  }

type Fields$CommSubscriptionChannelTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CommSubscriptionChannelTypeShare = {
  //
  Parent: SObjectDefinition$CommSubscriptionChannelType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionChannelTypeShare = {
  //
};

interface SObjectDefinition$CommSubscriptionChannelTypeShare extends SObjectDefinition<'CommSubscriptionChannelTypeShare'> {
    Name: 'CommSubscriptionChannelTypeShare';
    Fields: Fields$CommSubscriptionChannelTypeShare;
    ParentReferences: ParentReferences$CommSubscriptionChannelTypeShare;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelTypeShare;
  }

type Fields$CommSubscriptionConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ConsentGiverId: string | null;
  ContactPointId: string;
  EffectiveFromDate: DateString;
  EffectiveToDate: DateString | null;
  ConsentCapturedDateTime: DateString | null;
  ConsentCapturedSource: string | null;
  CommSubscriptionChannelTypeId: string;
};

type ParentReferences$CommSubscriptionConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ConsentGiver: SObjectDefinition$Name | null;
  ContactPoint: SObjectDefinition$Name;
  CommSubscriptionChannelType: SObjectDefinition$CommSubscriptionChannelType;
};

type ChildRelationships$CommSubscriptionConsent = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  Feeds: SObjectDefinition$CommSubscriptionConsentFeed;
  Histories: SObjectDefinition$CommSubscriptionConsentHistory;
  Shares: SObjectDefinition$CommSubscriptionConsentShare;
  CommSubscriptionTimings: SObjectDefinition$CommSubscriptionTiming;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$CommSubscriptionConsent extends SObjectDefinition<'CommSubscriptionConsent'> {
    Name: 'CommSubscriptionConsent';
    Fields: Fields$CommSubscriptionConsent;
    ParentReferences: ParentReferences$CommSubscriptionConsent;
    ChildRelationships: ChildRelationships$CommSubscriptionConsent;
  }

type Fields$CommSubscriptionConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ConsentGiverId: string | null;
  ContactPointId: string | null;
  EffectiveFromDate: DateString | null;
  EffectiveToDate: DateString | null;
  ConsentCapturedDateTime: DateString | null;
  ConsentCapturedSource: string | null;
  CommSubscriptionChannelTypeId: string | null;
};

type ParentReferences$CommSubscriptionConsentChangeEvent = {
  //
};

type ChildRelationships$CommSubscriptionConsentChangeEvent = {
  //
};

interface SObjectDefinition$CommSubscriptionConsentChangeEvent extends SObjectDefinition<'CommSubscriptionConsentChangeEvent'> {
    Name: 'CommSubscriptionConsentChangeEvent';
    Fields: Fields$CommSubscriptionConsentChangeEvent;
    ParentReferences: ParentReferences$CommSubscriptionConsentChangeEvent;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentChangeEvent;
  }

type Fields$CommSubscriptionConsentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionConsentFeed = {
  //
  Parent: SObjectDefinition$CommSubscriptionConsent;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionConsentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionConsentFeed extends SObjectDefinition<'CommSubscriptionConsentFeed'> {
    Name: 'CommSubscriptionConsentFeed';
    Fields: Fields$CommSubscriptionConsentFeed;
    ParentReferences: ParentReferences$CommSubscriptionConsentFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentFeed;
  }

type Fields$CommSubscriptionConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionConsentHistory = {
  //
  CommSubscriptionConsent: SObjectDefinition$CommSubscriptionConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionConsentHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionConsentHistory extends SObjectDefinition<'CommSubscriptionConsentHistory'> {
    Name: 'CommSubscriptionConsentHistory';
    Fields: Fields$CommSubscriptionConsentHistory;
    ParentReferences: ParentReferences$CommSubscriptionConsentHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentHistory;
  }

type Fields$CommSubscriptionConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CommSubscriptionConsentShare = {
  //
  Parent: SObjectDefinition$CommSubscriptionConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionConsentShare = {
  //
};

interface SObjectDefinition$CommSubscriptionConsentShare extends SObjectDefinition<'CommSubscriptionConsentShare'> {
    Name: 'CommSubscriptionConsentShare';
    Fields: Fields$CommSubscriptionConsentShare;
    ParentReferences: ParentReferences$CommSubscriptionConsentShare;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentShare;
  }

type Fields$CommSubscriptionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionFeed = {
  //
  Parent: SObjectDefinition$CommSubscription;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionFeed extends SObjectDefinition<'CommSubscriptionFeed'> {
    Name: 'CommSubscriptionFeed';
    Fields: Fields$CommSubscriptionFeed;
    ParentReferences: ParentReferences$CommSubscriptionFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionFeed;
  }

type Fields$CommSubscriptionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionHistory = {
  //
  CommSubscription: SObjectDefinition$CommSubscription;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionHistory extends SObjectDefinition<'CommSubscriptionHistory'> {
    Name: 'CommSubscriptionHistory';
    Fields: Fields$CommSubscriptionHistory;
    ParentReferences: ParentReferences$CommSubscriptionHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionHistory;
  }

type Fields$CommSubscriptionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CommSubscriptionShare = {
  //
  Parent: SObjectDefinition$CommSubscription;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionShare = {
  //
};

interface SObjectDefinition$CommSubscriptionShare extends SObjectDefinition<'CommSubscriptionShare'> {
    Name: 'CommSubscriptionShare';
    Fields: Fields$CommSubscriptionShare;
    ParentReferences: ParentReferences$CommSubscriptionShare;
    ChildRelationships: ChildRelationships$CommSubscriptionShare;
  }

type Fields$CommSubscriptionTiming = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CommSubscriptionConsentId: string;
  Unit: string;
  Offset: number | null;
  PreferredTimeStart: DateString | null;
  PreferredTimeEnd: DateString | null;
  PreferredTimeZone: string | null;
};

type ParentReferences$CommSubscriptionTiming = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CommSubscriptionConsent: SObjectDefinition$CommSubscriptionConsent;
};

type ChildRelationships$CommSubscriptionTiming = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  Feeds: SObjectDefinition$CommSubscriptionTimingFeed;
  Histories: SObjectDefinition$CommSubscriptionTimingHistory;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$CommSubscriptionTiming extends SObjectDefinition<'CommSubscriptionTiming'> {
    Name: 'CommSubscriptionTiming';
    Fields: Fields$CommSubscriptionTiming;
    ParentReferences: ParentReferences$CommSubscriptionTiming;
    ChildRelationships: ChildRelationships$CommSubscriptionTiming;
  }

type Fields$CommSubscriptionTimingFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionTimingFeed = {
  //
  Parent: SObjectDefinition$CommSubscriptionTiming;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionTimingFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionTimingFeed extends SObjectDefinition<'CommSubscriptionTimingFeed'> {
    Name: 'CommSubscriptionTimingFeed';
    Fields: Fields$CommSubscriptionTimingFeed;
    ParentReferences: ParentReferences$CommSubscriptionTimingFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionTimingFeed;
  }

type Fields$CommSubscriptionTimingHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionTimingId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionTimingHistory = {
  //
  CommSubscriptionTiming: SObjectDefinition$CommSubscriptionTiming;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionTimingHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionTimingHistory extends SObjectDefinition<'CommSubscriptionTimingHistory'> {
    Name: 'CommSubscriptionTimingHistory';
    Fields: Fields$CommSubscriptionTimingHistory;
    ParentReferences: ParentReferences$CommSubscriptionTimingHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionTimingHistory;
  }

type Fields$Community = {
  //
  Id: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  Name: string;
  Description: string | null;
  IsActive: boolean;
  IsPublished: boolean;
  NetworkId: string | null;
};

type ParentReferences$Community = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
};

type ChildRelationships$Community = {
  //
};

interface SObjectDefinition$Community extends SObjectDefinition<'Community'> {
    Name: 'Community';
    Fields: Fields$Community;
    ParentReferences: ParentReferences$Community;
    ChildRelationships: ChildRelationships$Community;
  }

type Fields$ConferenceNumber = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalEventId: string | null;
  Label: string | null;
  Number: string | null;
  AccessCode: string | null;
  Vendor: string | null;
};

type ParentReferences$ConferenceNumber = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ExternalEvent: SObjectDefinition$ExternalEvent | null;
};

type ChildRelationships$ConferenceNumber = {
  //
};

interface SObjectDefinition$ConferenceNumber extends SObjectDefinition<'ConferenceNumber'> {
    Name: 'ConferenceNumber';
    Fields: Fields$ConferenceNumber;
    ParentReferences: ParentReferences$ConferenceNumber;
    ChildRelationships: ChildRelationships$ConferenceNumber;
  }

type Fields$ConnectedApplication = {
  //
  Id: string;
  Name: string;
};

type ParentReferences$ConnectedApplication = {
  //
};

type ChildRelationships$ConnectedApplication = {
  //
  InstalledMobileApps: SObjectDefinition$InstalledMobileApp;
};

interface SObjectDefinition$ConnectedApplication extends SObjectDefinition<'ConnectedApplication'> {
    Name: 'ConnectedApplication';
    Fields: Fields$ConnectedApplication;
    ParentReferences: ParentReferences$ConnectedApplication;
    ChildRelationships: ChildRelationships$ConnectedApplication;
  }

type Fields$Contact = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  AccountId: string | null;
  LastName: string;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  OtherStreet: string | null;
  OtherCity: string | null;
  OtherState: string | null;
  OtherPostalCode: string | null;
  OtherCountry: string | null;
  OtherLatitude: number | null;
  OtherLongitude: number | null;
  OtherGeocodeAccuracy: string | null;
  OtherAddress: Address | null;
  MailingStreet: string | null;
  MailingCity: string | null;
  MailingState: string | null;
  MailingPostalCode: string | null;
  MailingCountry: string | null;
  MailingLatitude: number | null;
  MailingLongitude: number | null;
  MailingGeocodeAccuracy: string | null;
  MailingAddress: Address | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  HomePhone: string | null;
  OtherPhone: string | null;
  AssistantPhone: string | null;
  ReportsToId: string | null;
  Email: string | null;
  Title: string | null;
  Department: string | null;
  AssistantName: string | null;
  LeadSource: string | null;
  Birthdate: DateString | null;
  Description: string | null;
  OwnerId: string;
  HasOptedOutOfEmail: boolean;
  HasOptedOutOfFax: boolean;
  DoNotCall: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastCURequestDate: DateString | null;
  LastCUUpdateDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  IsEmailBounced: boolean;
  PhotoUrl: string | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  IndividualId: string | null;
  BirthCity__c: string | null;
  BirthProvince__c: string | null;
  FiscalCode__c: string | null;
  Gender__c: string | null;
  Invitato__c: boolean;
  Invitatore__c: string | null;
  PEC__c: string | null;
  Profilo__c: string | null;
  Stato__c: string | null;
  User__c: string | null;
  isMaster__c: boolean;
  Amministrazione__c: string | null;
  DataInvito__c: DateString | null;
  Forma_Aggregativa__c: string | null;
  Subscribed_to_newsletter__c: boolean;
  Area_Pubblica__c: boolean;
  et4ae5__HasOptedOutOfMobile__c: boolean;
  et4ae5__Mobile_Country_Code__c: string | null;
  Cambio_ruolo__c: boolean;
  Mail_Commerciale__c: boolean;
  vars_ente_MC__c: string | null;
  vars_enteSelect_MC__c: string | null;
  vars_enteType_MC__c: string | null;
  vars_message_MC__c: string | null;
  vars_messageSelect_MC__c: string | null;
  vars_representative_MC__c: string | null;
  vars_timestamp_MC__c: DateString | null;
  SincronizzaMarketingCloud__c: boolean;
  Posizione_Lavorativa_Altro__c: string | null;
  Posizione_Lavorativa__c: string | null;
  Azione__c: string | null;
  checkCF__c: string | null;
  Belfiore__c: string | null;
  DataScadenzaInvito__c: DateString | null;
  Invitatore_Name__c: string | null;
  ReminderEmail__c: boolean;
};

type ParentReferences$Contact = {
  //
  MasterRecord: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  ReportsTo: SObjectDefinition$Contact | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Individual: SObjectDefinition$Individual | null;
  Invitatore__r: SObjectDefinition$User | null;
  User__r: SObjectDefinition$User | null;
};

type ChildRelationships$Contact = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  AccountContactRoles: SObjectDefinition$AccountContactRole;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Assets: SObjectDefinition$Asset;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  CampaignMembers: SObjectDefinition$CampaignMember;
  Cases: SObjectDefinition$Case;
  CaseContactRoles: SObjectDefinition$CaseContactRole;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Feeds: SObjectDefinition$ContactFeed;
  Histories: SObjectDefinition$ContactHistory;
  ContactRequests: SObjectDefinition$ContactRequest;
  Shares: SObjectDefinition$ContactShare;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractsSigned: SObjectDefinition$Contract;
  ContractContactRoles: SObjectDefinition$ContractContactRole;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  EmailStatuses: SObjectDefinition$EmailStatus;
  EntitlementContacts: SObjectDefinition$EntitlementContact;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  EventWhoRelations: SObjectDefinition$EventWhoRelation;
  ListEmailIndividualRecipients: SObjectDefinition$ListEmailIndividualRecipient;
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  OpportunityContactRoles: SObjectDefinition$OpportunityContactRole;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
  PersonEmploymentDetails: SObjectDefinition$PersonEmployment;
  PersonExamContact: SObjectDefinition$PersonExamination;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  ServiceContracts: SObjectDefinition$ServiceContract;
  Personas: SObjectDefinition$SocialPersona;
  Posts: SObjectDefinition$SocialPost;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TaskWhoRelations: SObjectDefinition$TaskWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  TCPContact: SObjectDefinition$TrainingCourseParticipant;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
  Users: SObjectDefinition$User;
  PersonRecord: SObjectDefinition$UserEmailPreferredPerson;
  RelatedRecords: SObjectDefinition$VoiceCall;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$Contact extends SObjectDefinition<'Contact'> {
    Name: 'Contact';
    Fields: Fields$Contact;
    ParentReferences: ParentReferences$Contact;
    ChildRelationships: ChildRelationships$Contact;
  }

type Fields$ContactChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  AccountId: string | null;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  OtherStreet: string | null;
  OtherCity: string | null;
  OtherState: string | null;
  OtherPostalCode: string | null;
  OtherCountry: string | null;
  OtherLatitude: number | null;
  OtherLongitude: number | null;
  OtherGeocodeAccuracy: string | null;
  OtherAddress: Address | null;
  MailingStreet: string | null;
  MailingCity: string | null;
  MailingState: string | null;
  MailingPostalCode: string | null;
  MailingCountry: string | null;
  MailingLatitude: number | null;
  MailingLongitude: number | null;
  MailingGeocodeAccuracy: string | null;
  MailingAddress: Address | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  HomePhone: string | null;
  OtherPhone: string | null;
  AssistantPhone: string | null;
  ReportsToId: string | null;
  Email: string | null;
  Title: string | null;
  Department: string | null;
  AssistantName: string | null;
  LeadSource: string | null;
  Birthdate: DateString | null;
  Description: string | null;
  OwnerId: string | null;
  HasOptedOutOfEmail: boolean;
  HasOptedOutOfFax: boolean;
  DoNotCall: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  LastCURequestDate: DateString | null;
  LastCUUpdateDate: DateString | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  IndividualId: string | null;
  BirthCity__c: string | null;
  BirthProvince__c: string | null;
  FiscalCode__c: string | null;
  Gender__c: string | null;
  Invitato__c: boolean;
  Invitatore__c: string | null;
  PEC__c: string | null;
  Profilo__c: string | null;
  Stato__c: string | null;
  User__c: string | null;
  isMaster__c: boolean;
  Amministrazione__c: string | null;
  DataInvito__c: DateString | null;
  Forma_Aggregativa__c: string | null;
  Subscribed_to_newsletter__c: boolean;
  Area_Pubblica__c: boolean;
  et4ae5__HasOptedOutOfMobile__c: boolean;
  et4ae5__Mobile_Country_Code__c: string | null;
  Cambio_ruolo__c: boolean;
  Mail_Commerciale__c: boolean;
  vars_ente_MC__c: string | null;
  vars_enteSelect_MC__c: string | null;
  vars_enteType_MC__c: string | null;
  vars_message_MC__c: string | null;
  vars_messageSelect_MC__c: string | null;
  vars_representative_MC__c: string | null;
  vars_timestamp_MC__c: DateString | null;
  SincronizzaMarketingCloud__c: boolean;
  Posizione_Lavorativa_Altro__c: string | null;
  Posizione_Lavorativa__c: string | null;
  Azione__c: string | null;
  checkCF__c: string | null;
  Belfiore__c: string | null;
  DataScadenzaInvito__c: DateString | null;
  Invitatore_Name__c: string | null;
  ReminderEmail__c: boolean;
};

type ParentReferences$ContactChangeEvent = {
  //
};

type ChildRelationships$ContactChangeEvent = {
  //
};

interface SObjectDefinition$ContactChangeEvent extends SObjectDefinition<'ContactChangeEvent'> {
    Name: 'ContactChangeEvent';
    Fields: Fields$ContactChangeEvent;
    ParentReferences: ParentReferences$ContactChangeEvent;
    ChildRelationships: ChildRelationships$ContactChangeEvent;
  }

type Fields$ContactFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ContactFeed = {
  //
  Parent: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ContactFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ContactFeed extends SObjectDefinition<'ContactFeed'> {
    Name: 'ContactFeed';
    Fields: Fields$ContactFeed;
    ParentReferences: ParentReferences$ContactFeed;
    ChildRelationships: ChildRelationships$ContactFeed;
  }

type Fields$ContactHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactHistory = {
  //
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactHistory = {
  //
};

interface SObjectDefinition$ContactHistory extends SObjectDefinition<'ContactHistory'> {
    Name: 'ContactHistory';
    Fields: Fields$ContactHistory;
    ParentReferences: ParentReferences$ContactHistory;
    ChildRelationships: ChildRelationships$ContactHistory;
  }

type Fields$ContactPointAddress = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  ContactPointPhoneId: string | null;
  AddressType: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  IsDefault: boolean;
  PreferenceRank: number | null;
  UsageType: string | null;
};

type ParentReferences$ContactPointAddress = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name | null;
  ContactPointPhone: SObjectDefinition$ContactPointPhone | null;
};

type ChildRelationships$ContactPointAddress = {
  //
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Histories: SObjectDefinition$ContactPointAddressHistory;
  Shares: SObjectDefinition$ContactPointAddressShare;
  ContactPointConsents: SObjectDefinition$ContactPointConsent;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointAddress extends SObjectDefinition<'ContactPointAddress'> {
    Name: 'ContactPointAddress';
    Fields: Fields$ContactPointAddress;
    ParentReferences: ParentReferences$ContactPointAddress;
    ChildRelationships: ChildRelationships$ContactPointAddress;
  }

type Fields$ContactPointAddressChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  ContactPointPhoneId: string | null;
  AddressType: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  IsDefault: boolean;
  PreferenceRank: number | null;
  UsageType: string | null;
};

type ParentReferences$ContactPointAddressChangeEvent = {
  //
};

type ChildRelationships$ContactPointAddressChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointAddressChangeEvent extends SObjectDefinition<'ContactPointAddressChangeEvent'> {
    Name: 'ContactPointAddressChangeEvent';
    Fields: Fields$ContactPointAddressChangeEvent;
    ParentReferences: ParentReferences$ContactPointAddressChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointAddressChangeEvent;
  }

type Fields$ContactPointAddressHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointAddressId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointAddressHistory = {
  //
  ContactPointAddress: SObjectDefinition$ContactPointAddress;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointAddressHistory = {
  //
};

interface SObjectDefinition$ContactPointAddressHistory extends SObjectDefinition<'ContactPointAddressHistory'> {
    Name: 'ContactPointAddressHistory';
    Fields: Fields$ContactPointAddressHistory;
    ParentReferences: ParentReferences$ContactPointAddressHistory;
    ChildRelationships: ChildRelationships$ContactPointAddressHistory;
  }

type Fields$ContactPointAddressShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointAddressShare = {
  //
  Parent: SObjectDefinition$ContactPointAddress;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointAddressShare = {
  //
};

interface SObjectDefinition$ContactPointAddressShare extends SObjectDefinition<'ContactPointAddressShare'> {
    Name: 'ContactPointAddressShare';
    Fields: Fields$ContactPointAddressShare;
    ParentReferences: ParentReferences$ContactPointAddressShare;
    ChildRelationships: ChildRelationships$ContactPointAddressShare;
  }

type Fields$ContactPointConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ContactPointId: string;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContactPoint: SObjectDefinition$Name;
  DataUsePurpose: SObjectDefinition$DataUsePurpose | null;
};

type ChildRelationships$ContactPointConsent = {
  //
  Histories: SObjectDefinition$ContactPointConsentHistory;
  Shares: SObjectDefinition$ContactPointConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointConsent extends SObjectDefinition<'ContactPointConsent'> {
    Name: 'ContactPointConsent';
    Fields: Fields$ContactPointConsent;
    ParentReferences: ParentReferences$ContactPointConsent;
    ChildRelationships: ChildRelationships$ContactPointConsent;
  }

type Fields$ContactPointConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ContactPointId: string | null;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string | null;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointConsentChangeEvent = {
  //
};

type ChildRelationships$ContactPointConsentChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointConsentChangeEvent extends SObjectDefinition<'ContactPointConsentChangeEvent'> {
    Name: 'ContactPointConsentChangeEvent';
    Fields: Fields$ContactPointConsentChangeEvent;
    ParentReferences: ParentReferences$ContactPointConsentChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointConsentChangeEvent;
  }

type Fields$ContactPointConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointConsentHistory = {
  //
  ContactPointConsent: SObjectDefinition$ContactPointConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointConsentHistory = {
  //
};

interface SObjectDefinition$ContactPointConsentHistory extends SObjectDefinition<'ContactPointConsentHistory'> {
    Name: 'ContactPointConsentHistory';
    Fields: Fields$ContactPointConsentHistory;
    ParentReferences: ParentReferences$ContactPointConsentHistory;
    ChildRelationships: ChildRelationships$ContactPointConsentHistory;
  }

type Fields$ContactPointConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointConsentShare = {
  //
  Parent: SObjectDefinition$ContactPointConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointConsentShare = {
  //
};

interface SObjectDefinition$ContactPointConsentShare extends SObjectDefinition<'ContactPointConsentShare'> {
    Name: 'ContactPointConsentShare';
    Fields: Fields$ContactPointConsentShare;
    ParentReferences: ParentReferences$ContactPointConsentShare;
    ChildRelationships: ChildRelationships$ContactPointConsentShare;
  }

type Fields$ContactPointEmail = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  EmailAddress: string;
  EmailMailBox: string | null;
  EmailDomain: string | null;
  EmailLatestBounceDateTime: DateString | null;
  EmailLatestBounceReasonText: string | null;
  PreferenceRank: number | null;
  UsageType: string | null;
};

type ParentReferences$ContactPointEmail = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name | null;
};

type ChildRelationships$ContactPointEmail = {
  //
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContactPointConsents: SObjectDefinition$ContactPointConsent;
  Histories: SObjectDefinition$ContactPointEmailHistory;
  Shares: SObjectDefinition$ContactPointEmailShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointEmail extends SObjectDefinition<'ContactPointEmail'> {
    Name: 'ContactPointEmail';
    Fields: Fields$ContactPointEmail;
    ParentReferences: ParentReferences$ContactPointEmail;
    ChildRelationships: ChildRelationships$ContactPointEmail;
  }

type Fields$ContactPointEmailChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  EmailAddress: string | null;
  EmailMailBox: string | null;
  EmailDomain: string | null;
  EmailLatestBounceDateTime: DateString | null;
  EmailLatestBounceReasonText: string | null;
  PreferenceRank: number | null;
  UsageType: string | null;
};

type ParentReferences$ContactPointEmailChangeEvent = {
  //
};

type ChildRelationships$ContactPointEmailChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointEmailChangeEvent extends SObjectDefinition<'ContactPointEmailChangeEvent'> {
    Name: 'ContactPointEmailChangeEvent';
    Fields: Fields$ContactPointEmailChangeEvent;
    ParentReferences: ParentReferences$ContactPointEmailChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointEmailChangeEvent;
  }

type Fields$ContactPointEmailHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointEmailId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointEmailHistory = {
  //
  ContactPointEmail: SObjectDefinition$ContactPointEmail;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointEmailHistory = {
  //
};

interface SObjectDefinition$ContactPointEmailHistory extends SObjectDefinition<'ContactPointEmailHistory'> {
    Name: 'ContactPointEmailHistory';
    Fields: Fields$ContactPointEmailHistory;
    ParentReferences: ParentReferences$ContactPointEmailHistory;
    ChildRelationships: ChildRelationships$ContactPointEmailHistory;
  }

type Fields$ContactPointEmailShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointEmailShare = {
  //
  Parent: SObjectDefinition$ContactPointEmail;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointEmailShare = {
  //
};

interface SObjectDefinition$ContactPointEmailShare extends SObjectDefinition<'ContactPointEmailShare'> {
    Name: 'ContactPointEmailShare';
    Fields: Fields$ContactPointEmailShare;
    ParentReferences: ParentReferences$ContactPointEmailShare;
    ChildRelationships: ChildRelationships$ContactPointEmailShare;
  }

type Fields$ContactPointPhone = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  AreaCode: string | null;
  TelephoneNumber: string;
  ExtensionNumber: string | null;
  PhoneType: string | null;
  IsSmsCapable: boolean;
  FormattedInternationalPhoneNumber: string | null;
  FormattedNationalPhoneNumber: string | null;
  IsFaxCapable: boolean;
  IsPersonalPhone: boolean;
  IsBusinessPhone: boolean;
  PreferenceRank: number | null;
  UsageType: string | null;
};

type ParentReferences$ContactPointPhone = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name | null;
};

type ChildRelationships$ContactPointPhone = {
  //
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContactPointAddresses: SObjectDefinition$ContactPointAddress;
  ContactPointConsents: SObjectDefinition$ContactPointConsent;
  Histories: SObjectDefinition$ContactPointPhoneHistory;
  Shares: SObjectDefinition$ContactPointPhoneShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointPhone extends SObjectDefinition<'ContactPointPhone'> {
    Name: 'ContactPointPhone';
    Fields: Fields$ContactPointPhone;
    ParentReferences: ParentReferences$ContactPointPhone;
    ChildRelationships: ChildRelationships$ContactPointPhone;
  }

type Fields$ContactPointPhoneChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  AreaCode: string | null;
  TelephoneNumber: string | null;
  ExtensionNumber: string | null;
  PhoneType: string | null;
  IsSmsCapable: boolean;
  FormattedInternationalPhoneNumber: string | null;
  FormattedNationalPhoneNumber: string | null;
  IsFaxCapable: boolean;
  IsPersonalPhone: boolean;
  IsBusinessPhone: boolean;
  PreferenceRank: number | null;
  UsageType: string | null;
};

type ParentReferences$ContactPointPhoneChangeEvent = {
  //
};

type ChildRelationships$ContactPointPhoneChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointPhoneChangeEvent extends SObjectDefinition<'ContactPointPhoneChangeEvent'> {
    Name: 'ContactPointPhoneChangeEvent';
    Fields: Fields$ContactPointPhoneChangeEvent;
    ParentReferences: ParentReferences$ContactPointPhoneChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointPhoneChangeEvent;
  }

type Fields$ContactPointPhoneHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointPhoneId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointPhoneHistory = {
  //
  ContactPointPhone: SObjectDefinition$ContactPointPhone;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointPhoneHistory = {
  //
};

interface SObjectDefinition$ContactPointPhoneHistory extends SObjectDefinition<'ContactPointPhoneHistory'> {
    Name: 'ContactPointPhoneHistory';
    Fields: Fields$ContactPointPhoneHistory;
    ParentReferences: ParentReferences$ContactPointPhoneHistory;
    ChildRelationships: ChildRelationships$ContactPointPhoneHistory;
  }

type Fields$ContactPointPhoneShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointPhoneShare = {
  //
  Parent: SObjectDefinition$ContactPointPhone;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointPhoneShare = {
  //
};

interface SObjectDefinition$ContactPointPhoneShare extends SObjectDefinition<'ContactPointPhoneShare'> {
    Name: 'ContactPointPhoneShare';
    Fields: Fields$ContactPointPhoneShare;
    ParentReferences: ParentReferences$ContactPointPhoneShare;
    ChildRelationships: ChildRelationships$ContactPointPhoneShare;
  }

type Fields$ContactPointTypeConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  PartyId: string;
  ContactPointType: string | null;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointTypeConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Party: SObjectDefinition$Individual;
  DataUsePurpose: SObjectDefinition$DataUsePurpose | null;
};

type ChildRelationships$ContactPointTypeConsent = {
  //
  Histories: SObjectDefinition$ContactPointTypeConsentHistory;
  Shares: SObjectDefinition$ContactPointTypeConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointTypeConsent extends SObjectDefinition<'ContactPointTypeConsent'> {
    Name: 'ContactPointTypeConsent';
    Fields: Fields$ContactPointTypeConsent;
    ParentReferences: ParentReferences$ContactPointTypeConsent;
    ChildRelationships: ChildRelationships$ContactPointTypeConsent;
  }

type Fields$ContactPointTypeConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  PartyId: string | null;
  ContactPointType: string | null;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string | null;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointTypeConsentChangeEvent = {
  //
};

type ChildRelationships$ContactPointTypeConsentChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointTypeConsentChangeEvent extends SObjectDefinition<'ContactPointTypeConsentChangeEvent'> {
    Name: 'ContactPointTypeConsentChangeEvent';
    Fields: Fields$ContactPointTypeConsentChangeEvent;
    ParentReferences: ParentReferences$ContactPointTypeConsentChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointTypeConsentChangeEvent;
  }

type Fields$ContactPointTypeConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointTypeConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointTypeConsentHistory = {
  //
  ContactPointTypeConsent: SObjectDefinition$ContactPointTypeConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointTypeConsentHistory = {
  //
};

interface SObjectDefinition$ContactPointTypeConsentHistory extends SObjectDefinition<'ContactPointTypeConsentHistory'> {
    Name: 'ContactPointTypeConsentHistory';
    Fields: Fields$ContactPointTypeConsentHistory;
    ParentReferences: ParentReferences$ContactPointTypeConsentHistory;
    ChildRelationships: ChildRelationships$ContactPointTypeConsentHistory;
  }

type Fields$ContactPointTypeConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointTypeConsentShare = {
  //
  Parent: SObjectDefinition$ContactPointTypeConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointTypeConsentShare = {
  //
};

interface SObjectDefinition$ContactPointTypeConsentShare extends SObjectDefinition<'ContactPointTypeConsentShare'> {
    Name: 'ContactPointTypeConsentShare';
    Fields: Fields$ContactPointTypeConsentShare;
    ParentReferences: ParentReferences$ContactPointTypeConsentShare;
    ChildRelationships: ChildRelationships$ContactPointTypeConsentShare;
  }

type Fields$ContactRequest = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  WhatId: string | null;
  WhoId: string | null;
  PreferredPhone: string | null;
  PreferredChannel: string;
  Status: string;
  RequestReason: string | null;
  RequestDescription: string | null;
};

type ParentReferences$ContactRequest = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  What: SObjectDefinition$Name | null;
  Who: SObjectDefinition$Name | null;
};

type ChildRelationships$ContactRequest = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Shares: SObjectDefinition$ContactRequestShare;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ContactRequest extends SObjectDefinition<'ContactRequest'> {
    Name: 'ContactRequest';
    Fields: Fields$ContactRequest;
    ParentReferences: ParentReferences$ContactRequest;
    ChildRelationships: ChildRelationships$ContactRequest;
  }

type Fields$ContactRequestShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactRequestShare = {
  //
  Parent: SObjectDefinition$ContactRequest;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactRequestShare = {
  //
};

interface SObjectDefinition$ContactRequestShare extends SObjectDefinition<'ContactRequestShare'> {
    Name: 'ContactRequestShare';
    Fields: Fields$ContactRequestShare;
    ParentReferences: ParentReferences$ContactRequestShare;
    ChildRelationships: ChildRelationships$ContactRequestShare;
  }

type Fields$ContactShare = {
  //
  Id: string;
  ContactId: string;
  UserOrGroupId: string;
  ContactAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactShare = {
  //
  Contact: SObjectDefinition$Contact;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactShare = {
  //
};

interface SObjectDefinition$ContactShare extends SObjectDefinition<'ContactShare'> {
    Name: 'ContactShare';
    Fields: Fields$ContactShare;
    ParentReferences: ParentReferences$ContactShare;
    ChildRelationships: ChildRelationships$ContactShare;
  }

type Fields$ContentAsset = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ContentDocumentId: string | null;
  IsVisibleByExternalUsers: boolean;
};

type ParentReferences$ContentAsset = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument | null;
};

type ChildRelationships$ContentAsset = {
  //
};

interface SObjectDefinition$ContentAsset extends SObjectDefinition<'ContentAsset'> {
    Name: 'ContentAsset';
    Fields: Fields$ContentAsset;
    ParentReferences: ParentReferences$ContentAsset;
    ChildRelationships: ChildRelationships$ContentAsset;
  }

type Fields$ContentBody = {
  //
  Id: string;
};

type ParentReferences$ContentBody = {
  //
};

type ChildRelationships$ContentBody = {
  //
};

interface SObjectDefinition$ContentBody extends SObjectDefinition<'ContentBody'> {
    Name: 'ContentBody';
    Fields: Fields$ContentBody;
    ParentReferences: ParentReferences$ContentBody;
    ChildRelationships: ChildRelationships$ContentBody;
  }

type Fields$ContentDistribution = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  OwnerId: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Name: string;
  IsDeleted: boolean;
  ContentVersionId: string;
  ContentDocumentId: string | null;
  RelatedRecordId: string | null;
  PreferencesAllowPDFDownload: boolean;
  PreferencesAllowOriginalDownload: boolean;
  PreferencesPasswordRequired: boolean;
  PreferencesNotifyOnVisit: boolean;
  PreferencesLinkLatestVersion: boolean;
  PreferencesAllowViewInBrowser: boolean;
  PreferencesExpires: boolean;
  PreferencesNotifyRndtnComplete: boolean;
  ExpiryDate: DateString | null;
  Password: string | null;
  ViewCount: number | null;
  FirstViewDate: DateString | null;
  LastViewDate: DateString | null;
  DistributionPublicUrl: string | null;
  ContentDownloadUrl: string | null;
  PdfDownloadUrl: string | null;
};

type ParentReferences$ContentDistribution = {
  //
  CreatedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContentVersion: SObjectDefinition$ContentVersion;
  RelatedRecord: SObjectDefinition$Name | null;
};

type ChildRelationships$ContentDistribution = {
  //
  ContentDistributionViews: SObjectDefinition$ContentDistributionView;
};

interface SObjectDefinition$ContentDistribution extends SObjectDefinition<'ContentDistribution'> {
    Name: 'ContentDistribution';
    Fields: Fields$ContentDistribution;
    ParentReferences: ParentReferences$ContentDistribution;
    ChildRelationships: ChildRelationships$ContentDistribution;
  }

type Fields$ContentDistributionView = {
  //
  Id: string;
  DistributionId: string;
  ParentViewId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  IsInternal: boolean;
  IsDownload: boolean;
};

type ParentReferences$ContentDistributionView = {
  //
  Distribution: SObjectDefinition$ContentDistribution;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentDistributionView = {
  //
};

interface SObjectDefinition$ContentDistributionView extends SObjectDefinition<'ContentDistributionView'> {
    Name: 'ContentDistributionView';
    Fields: Fields$ContentDistributionView;
    ParentReferences: ParentReferences$ContentDistributionView;
    ChildRelationships: ChildRelationships$ContentDistributionView;
  }

type Fields$ContentDocument = {
  //
  Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  IsArchived: boolean;
  ArchivedById: string | null;
  ArchivedDate: DateString | null;
  IsDeleted: boolean;
  OwnerId: string;
  SystemModstamp: DateString;
  Title: string;
  PublishStatus: string;
  LatestPublishedVersionId: string | null;
  ParentId: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  ContentSize: number | null;
  FileType: string | null;
  FileExtension: string | null;
  SharingOption: string | null;
  SharingPrivacy: string | null;
  ContentModifiedDate: DateString | null;
  ContentAssetId: string | null;
};

type ParentReferences$ContentDocument = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
  LatestPublishedVersion: SObjectDefinition$ContentVersion | null;
  ContentAsset: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$ContentDocument = {
  //
  AuthorizationFormTexts: SObjectDefinition$AuthorizationFormText;
  ContentDistributions: SObjectDefinition$ContentDistribution;
  Feeds: SObjectDefinition$ContentDocumentFeed;
  Histories: SObjectDefinition$ContentDocumentHistory;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContentVersions: SObjectDefinition$ContentVersion;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$ContentDocument extends SObjectDefinition<'ContentDocument'> {
    Name: 'ContentDocument';
    Fields: Fields$ContentDocument;
    ParentReferences: ParentReferences$ContentDocument;
    ChildRelationships: ChildRelationships$ContentDocument;
  }

type Fields$ContentDocumentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ContentDocumentFeed = {
  //
  Parent: SObjectDefinition$ContentDocument;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ContentDocumentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ContentDocumentFeed extends SObjectDefinition<'ContentDocumentFeed'> {
    Name: 'ContentDocumentFeed';
    Fields: Fields$ContentDocumentFeed;
    ParentReferences: ParentReferences$ContentDocumentFeed;
    ChildRelationships: ChildRelationships$ContentDocumentFeed;
  }

type Fields$ContentDocumentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContentDocumentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContentDocumentHistory = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentDocumentHistory = {
  //
};

interface SObjectDefinition$ContentDocumentHistory extends SObjectDefinition<'ContentDocumentHistory'> {
    Name: 'ContentDocumentHistory';
    Fields: Fields$ContentDocumentHistory;
    ParentReferences: ParentReferences$ContentDocumentHistory;
    ChildRelationships: ChildRelationships$ContentDocumentHistory;
  }

type Fields$ContentDocumentLink = {
  //
  Id: string;
  LinkedEntityId: string;
  ContentDocumentId: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  ShareType: string | null;
  Visibility: string | null;
};

type ParentReferences$ContentDocumentLink = {
  //
  LinkedEntity: SObjectDefinition$Name;
  ContentDocument: SObjectDefinition$ContentDocument;
};

type ChildRelationships$ContentDocumentLink = {
  //
};

interface SObjectDefinition$ContentDocumentLink extends SObjectDefinition<'ContentDocumentLink'> {
    Name: 'ContentDocumentLink';
    Fields: Fields$ContentDocumentLink;
    ParentReferences: ParentReferences$ContentDocumentLink;
    ChildRelationships: ChildRelationships$ContentDocumentLink;
  }

type Fields$ContentFolder = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentContentFolderId: string | null;
};

type ParentReferences$ContentFolder = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentContentFolder: SObjectDefinition$ContentFolder | null;
};

type ChildRelationships$ContentFolder = {
  //
  ContentFolderLinks: SObjectDefinition$ContentFolderLink;
};

interface SObjectDefinition$ContentFolder extends SObjectDefinition<'ContentFolder'> {
    Name: 'ContentFolder';
    Fields: Fields$ContentFolder;
    ParentReferences: ParentReferences$ContentFolder;
    ChildRelationships: ChildRelationships$ContentFolder;
  }

type Fields$ContentFolderItem = {
  //
  Id: string;
  IsDeleted: boolean;
  IsFolder: boolean;
  ParentContentFolderId: string | null;
  Title: string;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ContentFolderItem = {
  //
  ParentContentFolder: SObjectDefinition$ContentFolder | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentFolderItem = {
  //
};

interface SObjectDefinition$ContentFolderItem extends SObjectDefinition<'ContentFolderItem'> {
    Name: 'ContentFolderItem';
    Fields: Fields$ContentFolderItem;
    ParentReferences: ParentReferences$ContentFolderItem;
    ChildRelationships: ChildRelationships$ContentFolderItem;
  }

type Fields$ContentFolderLink = {
  //
  Id: string;
  ParentEntityId: string;
  ContentFolderId: string;
  IsDeleted: boolean;
  EnableFolderStatus: string | null;
};

type ParentReferences$ContentFolderLink = {
  //
  ContentFolder: SObjectDefinition$ContentFolder;
};

type ChildRelationships$ContentFolderLink = {
  //
};

interface SObjectDefinition$ContentFolderLink extends SObjectDefinition<'ContentFolderLink'> {
    Name: 'ContentFolderLink';
    Fields: Fields$ContentFolderLink;
    ParentReferences: ParentReferences$ContentFolderLink;
    ChildRelationships: ChildRelationships$ContentFolderLink;
  }

type Fields$ContentFolderMember = {
  //
  Id: string;
  ParentContentFolderId: string;
  ChildRecordId: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
};

type ParentReferences$ContentFolderMember = {
  //
  ParentContentFolder: SObjectDefinition$ContentFolder;
  ChildRecord: SObjectDefinition$ContentDocument;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentFolderMember = {
  //
};

interface SObjectDefinition$ContentFolderMember extends SObjectDefinition<'ContentFolderMember'> {
    Name: 'ContentFolderMember';
    Fields: Fields$ContentFolderMember;
    ParentReferences: ParentReferences$ContentFolderMember;
    ChildRelationships: ChildRelationships$ContentFolderMember;
  }

type Fields$ContentNote = {
  //
  Id: string;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  ContentModifiedDate: DateString | null;
  LastViewedDate: DateString | null;
  FileType: string | null;
  TextPreview: string | null;
  ContentSize: number | null;
  IsDeleted: boolean;
  FileExtension: string | null;
  LatestPublishedVersionId: string | null;
  OwnerId: string;
  Content: BlobString | null;
  IsReadOnly: boolean;
  SharingPrivacy: string | null;
};

type ParentReferences$ContentNote = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LatestPublishedVersion: SObjectDefinition$ContentVersion | null;
  Owner: SObjectDefinition$User;
};

type ChildRelationships$ContentNote = {
  //
};

interface SObjectDefinition$ContentNote extends SObjectDefinition<'ContentNote'> {
    Name: 'ContentNote';
    Fields: Fields$ContentNote;
    ParentReferences: ParentReferences$ContentNote;
    ChildRelationships: ChildRelationships$ContentNote;
  }

type Fields$ContentVersion = {
  //
  Id: string;
  ContentDocumentId: string;
  IsLatest: boolean;
  ContentUrl: string | null;
  ContentBodyId: string | null;
  VersionNumber: string | null;
  Title: string;
  Description: string | null;
  ReasonForChange: string | null;
  SharingOption: string;
  SharingPrivacy: string;
  PathOnClient: string | null;
  RatingCount: number | null;
  IsDeleted: boolean;
  ContentModifiedDate: DateString | null;
  ContentModifiedById: string | null;
  PositiveRatingCount: number | null;
  NegativeRatingCount: number | null;
  FeaturedContentBoost: number | null;
  FeaturedContentDate: DateString | null;
  OwnerId: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  TagCsv: string | null;
  FileType: string;
  PublishStatus: string;
  VersionData: BlobString | null;
  ContentSize: number | null;
  FileExtension: string | null;
  FirstPublishLocationId: string | null;
  Origin: string;
  NetworkId: string | null;
  ContentLocation: string;
  TextPreview: string | null;
  ExternalDocumentInfo1: string | null;
  ExternalDocumentInfo2: string | null;
  Checksum: string | null;
  IsMajorVersion: boolean;
  IsAssetEnabled: boolean;
  Tipo_File_fileupload__c: string | null;
  isLinkedToRequest__c: boolean;
  Funding_Request_Collaborator__c: string | null;
  Tipologia_documento__c: string | null;
  firmatoRUP__c: boolean;
  Sent_to_Regis__c: boolean;
  FirmaControllabile__c: boolean;
  Asseverazione_primo_servizio__c: boolean;
  Tipologia_Firma__c: string | null;
  Dichiarazione_documento_firmato__c: boolean;
  Review__c: string | null;
  IgnoraVerificaFirma__c: boolean;
  Cancellato__c: boolean;
  Data_determina__c: DateString | null;
  Dichiarazione_entrambe_le_parti__c: boolean;
  Numero_determina__c: string | null;
  Audit__c: boolean;
};

type ParentReferences$ContentVersion = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  ContentBody: SObjectDefinition$ContentBody | null;
  ContentModifiedBy: SObjectDefinition$User | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  FirstPublishLocation: SObjectDefinition$Name | null;
  Funding_Request_Collaborator__r: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c | null;
  Review__r: SObjectDefinition$outfunds__Review__c | null;
};

type ChildRelationships$ContentVersion = {
  //
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  Histories: SObjectDefinition$ContentVersionHistory;
};

interface SObjectDefinition$ContentVersion extends SObjectDefinition<'ContentVersion'> {
    Name: 'ContentVersion';
    Fields: Fields$ContentVersion;
    ParentReferences: ParentReferences$ContentVersion;
    ChildRelationships: ChildRelationships$ContentVersion;
  }

type Fields$ContentVersionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContentVersionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContentVersionHistory = {
  //
  ContentVersion: SObjectDefinition$ContentVersion;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentVersionHistory = {
  //
};

interface SObjectDefinition$ContentVersionHistory extends SObjectDefinition<'ContentVersionHistory'> {
    Name: 'ContentVersionHistory';
    Fields: Fields$ContentVersionHistory;
    ParentReferences: ParentReferences$ContentVersionHistory;
    ChildRelationships: ChildRelationships$ContentVersionHistory;
  }

type Fields$ContentWorkspace = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  TagModel: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastModifiedDate: DateString;
  DefaultRecordTypeId: string | null;
  IsRestrictContentTypes: boolean;
  IsRestrictLinkedContentTypes: boolean;
  WorkspaceType: string | null;
  ShouldAddCreatorMembership: boolean;
  LastWorkspaceActivityDate: DateString | null;
  RootContentFolderId: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  WorkspaceImageId: string | null;
};

type ParentReferences$ContentWorkspace = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkspaceImage: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$ContentWorkspace = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContentFolderLinks: SObjectDefinition$ContentFolderLink;
  ContentWorkspaceMembers: SObjectDefinition$ContentWorkspaceMember;
};

interface SObjectDefinition$ContentWorkspace extends SObjectDefinition<'ContentWorkspace'> {
    Name: 'ContentWorkspace';
    Fields: Fields$ContentWorkspace;
    ParentReferences: ParentReferences$ContentWorkspace;
    ChildRelationships: ChildRelationships$ContentWorkspace;
  }

type Fields$ContentWorkspaceDoc = {
  //
  Id: string;
  ContentWorkspaceId: string;
  ContentDocumentId: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsOwner: boolean;
  IsDeleted: boolean;
};

type ParentReferences$ContentWorkspaceDoc = {
  //
  ContentWorkspace: SObjectDefinition$ContentWorkspace;
  ContentDocument: SObjectDefinition$ContentDocument;
};

type ChildRelationships$ContentWorkspaceDoc = {
  //
};

interface SObjectDefinition$ContentWorkspaceDoc extends SObjectDefinition<'ContentWorkspaceDoc'> {
    Name: 'ContentWorkspaceDoc';
    Fields: Fields$ContentWorkspaceDoc;
    ParentReferences: ParentReferences$ContentWorkspaceDoc;
    ChildRelationships: ChildRelationships$ContentWorkspaceDoc;
  }

type Fields$ContentWorkspaceMember = {
  //
  Id: string;
  ContentWorkspaceId: string;
  ContentWorkspacePermissionId: string | null;
  MemberId: string;
  MemberType: string | null;
  CreatedById: string;
  CreatedDate: DateString;
};

type ParentReferences$ContentWorkspaceMember = {
  //
  ContentWorkspace: SObjectDefinition$ContentWorkspace;
  ContentWorkspacePermission: SObjectDefinition$ContentWorkspacePermission | null;
  Member: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentWorkspaceMember = {
  //
};

interface SObjectDefinition$ContentWorkspaceMember extends SObjectDefinition<'ContentWorkspaceMember'> {
    Name: 'ContentWorkspaceMember';
    Fields: Fields$ContentWorkspaceMember;
    ParentReferences: ParentReferences$ContentWorkspaceMember;
    ChildRelationships: ChildRelationships$ContentWorkspaceMember;
  }

type Fields$ContentWorkspacePermission = {
  //
  Id: string;
  Name: string;
  Type: string | null;
  PermissionsManageWorkspace: boolean;
  PermissionsAddContent: boolean;
  PermissionsAddContentOBO: boolean;
  PermissionsArchiveContent: boolean;
  PermissionsDeleteContent: boolean;
  PermissionsFeatureContent: boolean;
  PermissionsViewComments: boolean;
  PermissionsAddComment: boolean;
  PermissionsModifyComments: boolean;
  PermissionsTagContent: boolean;
  PermissionsDeliverContent: boolean;
  PermissionsChatterSharing: boolean;
  PermissionsOrganizeFileAndFolder: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  LastModifiedById: string;
  Description: string | null;
};

type ParentReferences$ContentWorkspacePermission = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentWorkspacePermission = {
  //
};

interface SObjectDefinition$ContentWorkspacePermission extends SObjectDefinition<'ContentWorkspacePermission'> {
    Name: 'ContentWorkspacePermission';
    Fields: Fields$ContentWorkspacePermission;
    ParentReferences: ParentReferences$ContentWorkspacePermission;
    ChildRelationships: ChildRelationships$ContentWorkspacePermission;
  }

type Fields$Contract = {
  //
  Id: string;
  AccountId: string;
  Pricebook2Id: string | null;
  OwnerExpirationNotice: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ContractTerm: number | null;
  OwnerId: string;
  Status: string;
  CompanySignedId: string | null;
  CompanySignedDate: DateString | null;
  CustomerSignedId: string | null;
  CustomerSignedTitle: string | null;
  CustomerSignedDate: DateString | null;
  SpecialTerms: string | null;
  ActivatedById: string | null;
  ActivatedDate: DateString | null;
  StatusCode: string;
  Description: string | null;
  RecordTypeId: string | null;
  Name: string | null;
  IsDeleted: boolean;
  ContractNumber: string;
  LastApprovedDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Contratto_pluriennale__c: boolean;
};

type ParentReferences$Contract = {
  //
  Account: SObjectDefinition$Account;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  Owner: SObjectDefinition$User;
  CompanySigned: SObjectDefinition$User | null;
  CustomerSigned: SObjectDefinition$Contact | null;
  ActivatedBy: SObjectDefinition$User | null;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Contract = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Approvals: SObjectDefinition$Approval;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractContactRoles: SObjectDefinition$ContractContactRole;
  Feeds: SObjectDefinition$ContractFeed;
  Histories: SObjectDefinition$ContractHistory;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Orders: SObjectDefinition$Order;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Contract extends SObjectDefinition<'Contract'> {
    Name: 'Contract';
    Fields: Fields$Contract;
    ParentReferences: ParentReferences$Contract;
    ChildRelationships: ChildRelationships$Contract;
  }

type Fields$ContractChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  AccountId: string | null;
  Pricebook2Id: string | null;
  OwnerExpirationNotice: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ContractTerm: number | null;
  OwnerId: string | null;
  Status: string | null;
  CompanySignedId: string | null;
  CompanySignedDate: DateString | null;
  CustomerSignedId: string | null;
  CustomerSignedTitle: string | null;
  CustomerSignedDate: DateString | null;
  SpecialTerms: string | null;
  ActivatedById: string | null;
  ActivatedDate: DateString | null;
  StatusCode: string | null;
  Description: string | null;
  RecordTypeId: string | null;
  Name: string | null;
  ContractNumber: string;
  LastApprovedDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Contratto_pluriennale__c: boolean;
};

type ParentReferences$ContractChangeEvent = {
  //
};

type ChildRelationships$ContractChangeEvent = {
  //
};

interface SObjectDefinition$ContractChangeEvent extends SObjectDefinition<'ContractChangeEvent'> {
    Name: 'ContractChangeEvent';
    Fields: Fields$ContractChangeEvent;
    ParentReferences: ParentReferences$ContractChangeEvent;
    ChildRelationships: ChildRelationships$ContractChangeEvent;
  }

type Fields$ContractContactRole = {
  //
  Id: string;
  ContractId: string;
  ContactId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$ContractContactRole = {
  //
  Contract: SObjectDefinition$Contract;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractContactRole = {
  //
};

interface SObjectDefinition$ContractContactRole extends SObjectDefinition<'ContractContactRole'> {
    Name: 'ContractContactRole';
    Fields: Fields$ContractContactRole;
    ParentReferences: ParentReferences$ContractContactRole;
    ChildRelationships: ChildRelationships$ContractContactRole;
  }

type Fields$ContractFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ContractFeed = {
  //
  Parent: SObjectDefinition$Contract;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ContractFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ContractFeed extends SObjectDefinition<'ContractFeed'> {
    Name: 'ContractFeed';
    Fields: Fields$ContractFeed;
    ParentReferences: ParentReferences$ContractFeed;
    ChildRelationships: ChildRelationships$ContractFeed;
  }

type Fields$ContractHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContractId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContractHistory = {
  //
  Contract: SObjectDefinition$Contract;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractHistory = {
  //
};

interface SObjectDefinition$ContractHistory extends SObjectDefinition<'ContractHistory'> {
    Name: 'ContractHistory';
    Fields: Fields$ContractHistory;
    ParentReferences: ParentReferences$ContractHistory;
    ChildRelationships: ChildRelationships$ContractHistory;
  }

type Fields$ContractLineItem = {
  //
  Id: string;
  IsDeleted: boolean;
  LineItemNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ServiceContractId: string;
  Product2Id: string | null;
  AssetId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  PricebookEntryId: string;
  Quantity: number;
  UnitPrice: number;
  Discount: number | null;
  ListPrice: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  Status: string | null;
  ParentContractLineItemId: string | null;
  RootContractLineItemId: string | null;
};

type ParentReferences$ContractLineItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ServiceContract: SObjectDefinition$ServiceContract;
  Product2: SObjectDefinition$Product2 | null;
  Asset: SObjectDefinition$Asset | null;
  PricebookEntry: SObjectDefinition$PricebookEntry;
  ParentContractLineItem: SObjectDefinition$ContractLineItem | null;
  RootContractLineItem: SObjectDefinition$ContractLineItem | null;
};

type ChildRelationships$ContractLineItem = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ChildContractLineItems: SObjectDefinition$ContractLineItem;
  DescendantContractLineItems: SObjectDefinition$ContractLineItem;
  Histories: SObjectDefinition$ContractLineItemHistory;
  Emails: SObjectDefinition$EmailMessage;
  Entitlements: SObjectDefinition$Entitlement;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ContractLineItem extends SObjectDefinition<'ContractLineItem'> {
    Name: 'ContractLineItem';
    Fields: Fields$ContractLineItem;
    ParentReferences: ParentReferences$ContractLineItem;
    ChildRelationships: ChildRelationships$ContractLineItem;
  }

type Fields$ContractLineItemChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  LineItemNumber: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ServiceContractId: string | null;
  AssetId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  PricebookEntryId: string | null;
  Quantity: number | null;
  UnitPrice: number | null;
  Discount: number | null;
  ParentContractLineItemId: string | null;
  RootContractLineItemId: string | null;
};

type ParentReferences$ContractLineItemChangeEvent = {
  //
};

type ChildRelationships$ContractLineItemChangeEvent = {
  //
};

interface SObjectDefinition$ContractLineItemChangeEvent extends SObjectDefinition<'ContractLineItemChangeEvent'> {
    Name: 'ContractLineItemChangeEvent';
    Fields: Fields$ContractLineItemChangeEvent;
    ParentReferences: ParentReferences$ContractLineItemChangeEvent;
    ChildRelationships: ChildRelationships$ContractLineItemChangeEvent;
  }

type Fields$ContractLineItemHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContractLineItemId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContractLineItemHistory = {
  //
  ContractLineItem: SObjectDefinition$ContractLineItem;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractLineItemHistory = {
  //
};

interface SObjectDefinition$ContractLineItemHistory extends SObjectDefinition<'ContractLineItemHistory'> {
    Name: 'ContractLineItemHistory';
    Fields: Fields$ContractLineItemHistory;
    ParentReferences: ParentReferences$ContractLineItemHistory;
    ChildRelationships: ChildRelationships$ContractLineItemHistory;
  }

type Fields$ContractStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$ContractStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractStatus = {
  //
};

interface SObjectDefinition$ContractStatus extends SObjectDefinition<'ContractStatus'> {
    Name: 'ContractStatus';
    Fields: Fields$ContractStatus;
    ParentReferences: ParentReferences$ContractStatus;
    ChildRelationships: ChildRelationships$ContractStatus;
  }

type Fields$ConversationContextEntry = {
  //
  Id: string;
  IsDeleted: boolean;
  ConversationContextEntryName: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  CustomDetailContextKey: string | null;
  CustomDetailContextValue: string | null;
};

type ParentReferences$ConversationContextEntry = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$LiveChatTranscript;
};

type ChildRelationships$ConversationContextEntry = {
  //
};

interface SObjectDefinition$ConversationContextEntry extends SObjectDefinition<'ConversationContextEntry'> {
    Name: 'ConversationContextEntry';
    Fields: Fields$ConversationContextEntry;
    ParentReferences: ParentReferences$ConversationContextEntry;
    ChildRelationships: ChildRelationships$ConversationContextEntry;
  }

type Fields$ConversationEntry = {
  //
  Id: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  ConversationId: string;
  Seq: number;
  EntryTime: DateString;
  EntryType: string;
  ActorType: string;
  ActorId: string | null;
  ActorName: string | null;
  Message: string | null;
  MessageStatus: string | null;
  MessageStatusCode: string | null;
  MessageSendTime: DateString | null;
  MessageDeliverTime: DateString | null;
  MessageReadTime: DateString | null;
  MessageIdentifier: string | null;
  HasAttachments: boolean;
  EntryEndTime: DateString | null;
};

type ParentReferences$ConversationEntry = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Conversation: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name | null;
};

type ChildRelationships$ConversationEntry = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
};

interface SObjectDefinition$ConversationEntry extends SObjectDefinition<'ConversationEntry'> {
    Name: 'ConversationEntry';
    Fields: Fields$ConversationEntry;
    ParentReferences: ParentReferences$ConversationEntry;
    ChildRelationships: ChildRelationships$ConversationEntry;
  }

type Fields$Counter__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Master_milestone__c: string | null;
  Master_slot__c: string | null;
  Stato__c: string | null;
  Stato_Numerico__c: number | null;
};

type ParentReferences$Counter__ChangeEvent = {
  //
};

type ChildRelationships$Counter__ChangeEvent = {
  //
};

interface SObjectDefinition$Counter__ChangeEvent extends SObjectDefinition<'Counter__ChangeEvent'> {
    Name: 'Counter__ChangeEvent';
    Fields: Fields$Counter__ChangeEvent;
    ParentReferences: ParentReferences$Counter__ChangeEvent;
    ChildRelationships: ChildRelationships$Counter__ChangeEvent;
  }

type Fields$Counter__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Master_milestone__c: string;
  Master_slot__c: string;
  Stato__c: string | null;
  Stato_Numerico__c: number | null;
};

type ParentReferences$Counter__c = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Master_milestone__r: SObjectDefinition$Milestone_PNRR__c;
  Master_slot__r: SObjectDefinition$Slot_proroghe__c;
};

type ChildRelationships$Counter__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Counter__c extends SObjectDefinition<'Counter__c'> {
    Name: 'Counter__c';
    Fields: Fields$Counter__c;
    ParentReferences: ParentReferences$Counter__c;
    ChildRelationships: ChildRelationships$Counter__c;
  }

type Fields$CourseOffering = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  LocationId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  CourseNameId: string | null;
};

type ParentReferences$CourseOffering = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Location: SObjectDefinition$Location | null;
  CourseName: SObjectDefinition$TrnCourse | null;
};

type ChildRelationships$CourseOffering = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$CourseOfferingFeed;
  Histories: SObjectDefinition$CourseOfferingHistory;
  Shares: SObjectDefinition$CourseOfferingShare;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  TCPCourseOffering: SObjectDefinition$TrainingCourseParticipant;
};

interface SObjectDefinition$CourseOffering extends SObjectDefinition<'CourseOffering'> {
    Name: 'CourseOffering';
    Fields: Fields$CourseOffering;
    ParentReferences: ParentReferences$CourseOffering;
    ChildRelationships: ChildRelationships$CourseOffering;
  }

type Fields$CourseOfferingFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CourseOfferingFeed = {
  //
  Parent: SObjectDefinition$CourseOffering;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CourseOfferingFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CourseOfferingFeed extends SObjectDefinition<'CourseOfferingFeed'> {
    Name: 'CourseOfferingFeed';
    Fields: Fields$CourseOfferingFeed;
    ParentReferences: ParentReferences$CourseOfferingFeed;
    ChildRelationships: ChildRelationships$CourseOfferingFeed;
  }

type Fields$CourseOfferingHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CourseOfferingId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CourseOfferingHistory = {
  //
  CourseOffering: SObjectDefinition$CourseOffering;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CourseOfferingHistory = {
  //
};

interface SObjectDefinition$CourseOfferingHistory extends SObjectDefinition<'CourseOfferingHistory'> {
    Name: 'CourseOfferingHistory';
    Fields: Fields$CourseOfferingHistory;
    ParentReferences: ParentReferences$CourseOfferingHistory;
    ChildRelationships: ChildRelationships$CourseOfferingHistory;
  }

type Fields$CourseOfferingShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CourseOfferingShare = {
  //
  Parent: SObjectDefinition$CourseOffering;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CourseOfferingShare = {
  //
};

interface SObjectDefinition$CourseOfferingShare extends SObjectDefinition<'CourseOfferingShare'> {
    Name: 'CourseOfferingShare';
    Fields: Fields$CourseOfferingShare;
    ParentReferences: ParentReferences$CourseOfferingShare;
    ChildRelationships: ChildRelationships$CourseOfferingShare;
  }

type Fields$CustomBrand = {
  //
  Id: string;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$CustomBrand = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomBrand = {
  //
  CustomBrandAssets: SObjectDefinition$CustomBrandAsset;
};

interface SObjectDefinition$CustomBrand extends SObjectDefinition<'CustomBrand'> {
    Name: 'CustomBrand';
    Fields: Fields$CustomBrand;
    ParentReferences: ParentReferences$CustomBrand;
    ChildRelationships: ChildRelationships$CustomBrand;
  }

type Fields$CustomBrandAsset = {
  //
  Id: string;
  CustomBrandId: string;
  AssetCategory: string;
  TextAsset: string | null;
  AssetSourceId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$CustomBrandAsset = {
  //
  CustomBrand: SObjectDefinition$CustomBrand;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomBrandAsset = {
  //
};

interface SObjectDefinition$CustomBrandAsset extends SObjectDefinition<'CustomBrandAsset'> {
    Name: 'CustomBrandAsset';
    Fields: Fields$CustomBrandAsset;
    ParentReferences: ParentReferences$CustomBrandAsset;
    ChildRelationships: ChildRelationships$CustomBrandAsset;
  }

type Fields$CustomHelpMenuItem = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  MasterLabel: string;
  LinkUrl: string;
  SortOrder: number;
};

type ParentReferences$CustomHelpMenuItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$CustomHelpMenuSection;
};

type ChildRelationships$CustomHelpMenuItem = {
  //
};

interface SObjectDefinition$CustomHelpMenuItem extends SObjectDefinition<'CustomHelpMenuItem'> {
    Name: 'CustomHelpMenuItem';
    Fields: Fields$CustomHelpMenuItem;
    ParentReferences: ParentReferences$CustomHelpMenuItem;
    ChildRelationships: ChildRelationships$CustomHelpMenuItem;
  }

type Fields$CustomHelpMenuSection = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CustomHelpMenuSection = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomHelpMenuSection = {
  //
};

interface SObjectDefinition$CustomHelpMenuSection extends SObjectDefinition<'CustomHelpMenuSection'> {
    Name: 'CustomHelpMenuSection';
    Fields: Fields$CustomHelpMenuSection;
    ParentReferences: ParentReferences$CustomHelpMenuSection;
    ChildRelationships: ChildRelationships$CustomHelpMenuSection;
  }

type Fields$DGRequest__e = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  Pratica_Id__c: string;
};

type ParentReferences$DGRequest__e = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DGRequest__e = {
  //
};

interface SObjectDefinition$DGRequest__e extends SObjectDefinition<'DGRequest__e'> {
    Name: 'DGRequest__e';
    Fields: Fields$DGRequest__e;
    ParentReferences: ParentReferences$DGRequest__e;
    ChildRelationships: ChildRelationships$DGRequest__e;
  }

type Fields$Dashboard = {
  //
  Id: string;
  IsDeleted: boolean;
  FolderId: string;
  FolderName: string | null;
  Title: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  Description: string | null;
  LeftSize: string;
  MiddleSize: string | null;
  RightSize: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RunningUserId: string;
  TitleColor: number;
  TitleSize: number;
  TextColor: number;
  BackgroundStart: number;
  BackgroundEnd: number;
  BackgroundDirection: string;
  Type: string;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DashboardResultRefreshedDate: string | null;
  DashboardResultRunningUser: string | null;
  ColorPalette: string | null;
  ChartTheme: string | null;
};

type ParentReferences$Dashboard = {
  //
  Folder: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RunningUser: SObjectDefinition$User;
};

type ChildRelationships$Dashboard = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DashboardComponents: SObjectDefinition$DashboardComponent;
  Feeds: SObjectDefinition$DashboardFeed;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
};

interface SObjectDefinition$Dashboard extends SObjectDefinition<'Dashboard'> {
    Name: 'Dashboard';
    Fields: Fields$Dashboard;
    ParentReferences: ParentReferences$Dashboard;
    ChildRelationships: ChildRelationships$Dashboard;
  }

type Fields$DashboardComponent = {
  //
  Id: string;
  Name: string | null;
  DashboardId: string;
};

type ParentReferences$DashboardComponent = {
  //
  Dashboard: SObjectDefinition$Dashboard;
};

type ChildRelationships$DashboardComponent = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$DashboardComponentFeed;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
};

interface SObjectDefinition$DashboardComponent extends SObjectDefinition<'DashboardComponent'> {
    Name: 'DashboardComponent';
    Fields: Fields$DashboardComponent;
    ParentReferences: ParentReferences$DashboardComponent;
    ChildRelationships: ChildRelationships$DashboardComponent;
  }

type Fields$DashboardComponentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$DashboardComponentFeed = {
  //
  Parent: SObjectDefinition$DashboardComponent;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$DashboardComponentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$DashboardComponentFeed extends SObjectDefinition<'DashboardComponentFeed'> {
    Name: 'DashboardComponentFeed';
    Fields: Fields$DashboardComponentFeed;
    ParentReferences: ParentReferences$DashboardComponentFeed;
    ChildRelationships: ChildRelationships$DashboardComponentFeed;
  }

type Fields$DashboardFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$DashboardFeed = {
  //
  Parent: SObjectDefinition$Dashboard;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$DashboardFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$DashboardFeed extends SObjectDefinition<'DashboardFeed'> {
    Name: 'DashboardFeed';
    Fields: Fields$DashboardFeed;
    ParentReferences: ParentReferences$DashboardFeed;
    ChildRelationships: ChildRelationships$DashboardFeed;
  }

type Fields$DataIntegrationRecordPurchasePermission = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  ExternalObject: string | null;
  UserRecordPurchaseLimit: number | null;
};

type ParentReferences$DataIntegrationRecordPurchasePermission = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
};

type ChildRelationships$DataIntegrationRecordPurchasePermission = {
  //
};

interface SObjectDefinition$DataIntegrationRecordPurchasePermission extends SObjectDefinition<'DataIntegrationRecordPurchasePermission'> {
    Name: 'DataIntegrationRecordPurchasePermission';
    Fields: Fields$DataIntegrationRecordPurchasePermission;
    ParentReferences: ParentReferences$DataIntegrationRecordPurchasePermission;
    ChildRelationships: ChildRelationships$DataIntegrationRecordPurchasePermission;
  }

type Fields$DataType = {
  //
  Id: string;
  DurableId: string | null;
  DeveloperName: string | null;
  IsComplex: boolean;
  ContextServiceDataTypeId: string | null;
  ContextWsdlDataTypeId: string | null;
};

type ParentReferences$DataType = {
  //
};

type ChildRelationships$DataType = {
  //
};

interface SObjectDefinition$DataType extends SObjectDefinition<'DataType'> {
    Name: 'DataType';
    Fields: Fields$DataType;
    ParentReferences: ParentReferences$DataType;
    ChildRelationships: ChildRelationships$DataType;
  }

type Fields$DataUseLegalBasis = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Source: string | null;
  Description: string | null;
};

type ParentReferences$DataUseLegalBasis = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUseLegalBasis = {
  //
  Histories: SObjectDefinition$DataUseLegalBasisHistory;
  Shares: SObjectDefinition$DataUseLegalBasisShare;
  DataUsePurposes: SObjectDefinition$DataUsePurpose;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DataUseLegalBasis extends SObjectDefinition<'DataUseLegalBasis'> {
    Name: 'DataUseLegalBasis';
    Fields: Fields$DataUseLegalBasis;
    ParentReferences: ParentReferences$DataUseLegalBasis;
    ChildRelationships: ChildRelationships$DataUseLegalBasis;
  }

type Fields$DataUseLegalBasisHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  DataUseLegalBasisId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$DataUseLegalBasisHistory = {
  //
  DataUseLegalBasis: SObjectDefinition$DataUseLegalBasis;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUseLegalBasisHistory = {
  //
};

interface SObjectDefinition$DataUseLegalBasisHistory extends SObjectDefinition<'DataUseLegalBasisHistory'> {
    Name: 'DataUseLegalBasisHistory';
    Fields: Fields$DataUseLegalBasisHistory;
    ParentReferences: ParentReferences$DataUseLegalBasisHistory;
    ChildRelationships: ChildRelationships$DataUseLegalBasisHistory;
  }

type Fields$DataUseLegalBasisShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$DataUseLegalBasisShare = {
  //
  Parent: SObjectDefinition$DataUseLegalBasis;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUseLegalBasisShare = {
  //
};

interface SObjectDefinition$DataUseLegalBasisShare extends SObjectDefinition<'DataUseLegalBasisShare'> {
    Name: 'DataUseLegalBasisShare';
    Fields: Fields$DataUseLegalBasisShare;
    ParentReferences: ParentReferences$DataUseLegalBasisShare;
    ChildRelationships: ChildRelationships$DataUseLegalBasisShare;
  }

type Fields$DataUsePurpose = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LegalBasisId: string | null;
  Description: string | null;
  CanDataSubjectOptOut: boolean;
};

type ParentReferences$DataUsePurpose = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LegalBasis: SObjectDefinition$DataUseLegalBasis | null;
};

type ChildRelationships$DataUsePurpose = {
  //
  AuthorizationFormDataUses: SObjectDefinition$AuthorizationFormDataUse;
  CommSubscriptions: SObjectDefinition$CommSubscription;
  Histories: SObjectDefinition$DataUsePurposeHistory;
  Shares: SObjectDefinition$DataUsePurposeShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DataUsePurpose extends SObjectDefinition<'DataUsePurpose'> {
    Name: 'DataUsePurpose';
    Fields: Fields$DataUsePurpose;
    ParentReferences: ParentReferences$DataUsePurpose;
    ChildRelationships: ChildRelationships$DataUsePurpose;
  }

type Fields$DataUsePurposeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  DataUsePurposeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$DataUsePurposeHistory = {
  //
  DataUsePurpose: SObjectDefinition$DataUsePurpose;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUsePurposeHistory = {
  //
};

interface SObjectDefinition$DataUsePurposeHistory extends SObjectDefinition<'DataUsePurposeHistory'> {
    Name: 'DataUsePurposeHistory';
    Fields: Fields$DataUsePurposeHistory;
    ParentReferences: ParentReferences$DataUsePurposeHistory;
    ChildRelationships: ChildRelationships$DataUsePurposeHistory;
  }

type Fields$DataUsePurposeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$DataUsePurposeShare = {
  //
  Parent: SObjectDefinition$DataUsePurpose;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUsePurposeShare = {
  //
};

interface SObjectDefinition$DataUsePurposeShare extends SObjectDefinition<'DataUsePurposeShare'> {
    Name: 'DataUsePurposeShare';
    Fields: Fields$DataUsePurposeShare;
    ParentReferences: ParentReferences$DataUsePurposeShare;
    ChildRelationships: ChildRelationships$DataUsePurposeShare;
  }

type Fields$DatacloudAddress = {
  //
  Id: string;
  ExternalId: string | null;
  AddressLine1: string | null;
  AddressLine2: string | null;
  City: string | null;
  State: string | null;
  Country: string | null;
  PostalCode: string | null;
  Latitude: string | null;
  Longitude: string | null;
  GeoAccuracyCode: string | null;
  GeoAccuracyNum: string | null;
};

type ParentReferences$DatacloudAddress = {
  //
};

type ChildRelationships$DatacloudAddress = {
  //
};

interface SObjectDefinition$DatacloudAddress extends SObjectDefinition<'DatacloudAddress'> {
    Name: 'DatacloudAddress';
    Fields: Fields$DatacloudAddress;
    ParentReferences: ParentReferences$DatacloudAddress;
    ChildRelationships: ChildRelationships$DatacloudAddress;
  }

type Fields$DecisionTable = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SetupName: string;
  Description: string | null;
  LastSyncDate: DateString | null;
  SourceObject: string | null;
  Status: string;
};

type ParentReferences$DecisionTable = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DecisionTable = {
  //
  DecisionTableParameters: SObjectDefinition$DecisionTableParameter;
};

interface SObjectDefinition$DecisionTable extends SObjectDefinition<'DecisionTable'> {
    Name: 'DecisionTable';
    Fields: Fields$DecisionTable;
    ParentReferences: ParentReferences$DecisionTable;
    ChildRelationships: ChildRelationships$DecisionTable;
  }

type Fields$DecisionTableDatasetLink = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SetupName: string;
  DecisionTableId: string;
  Description: string | null;
  IsDefault: boolean;
  SourceObject: string | null;
};

type ParentReferences$DecisionTableDatasetLink = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DecisionTable: SObjectDefinition$DecisionTable;
};

type ChildRelationships$DecisionTableDatasetLink = {
  //
  DecisionTableDatasetParameters: SObjectDefinition$DecisionTblDatasetParameter;
};

interface SObjectDefinition$DecisionTableDatasetLink extends SObjectDefinition<'DecisionTableDatasetLink'> {
    Name: 'DecisionTableDatasetLink';
    Fields: Fields$DecisionTableDatasetLink;
    ParentReferences: ParentReferences$DecisionTableDatasetLink;
    ChildRelationships: ChildRelationships$DecisionTableDatasetLink;
  }

type Fields$DecisionTableParameter = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DecisionTableId: string;
  FieldName: string | null;
  Operator: string | null;
  Usage: string;
};

type ParentReferences$DecisionTableParameter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DecisionTable: SObjectDefinition$DecisionTable;
};

type ChildRelationships$DecisionTableParameter = {
  //
};

interface SObjectDefinition$DecisionTableParameter extends SObjectDefinition<'DecisionTableParameter'> {
    Name: 'DecisionTableParameter';
    Fields: Fields$DecisionTableParameter;
    ParentReferences: ParentReferences$DecisionTableParameter;
    ChildRelationships: ChildRelationships$DecisionTableParameter;
  }

type Fields$DecisionTblDatasetParameter = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DecisionTableDatasetLinkId: string;
  DecisionTableParameterId: string;
  DatasetFieldName: string;
};

type ParentReferences$DecisionTblDatasetParameter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DecisionTableDatasetLink: SObjectDefinition$DecisionTableDatasetLink;
  DecisionTableParameter: SObjectDefinition$DecisionTableParameter;
};

type ChildRelationships$DecisionTblDatasetParameter = {
  //
};

interface SObjectDefinition$DecisionTblDatasetParameter extends SObjectDefinition<'DecisionTblDatasetParameter'> {
    Name: 'DecisionTblDatasetParameter';
    Fields: Fields$DecisionTblDatasetParameter;
    ParentReferences: ParentReferences$DecisionTblDatasetParameter;
    ChildRelationships: ChildRelationships$DecisionTblDatasetParameter;
  }

type Fields$DeclinedEventRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$DeclinedEventRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DeclinedEventRelation = {
  //
};

interface SObjectDefinition$DeclinedEventRelation extends SObjectDefinition<'DeclinedEventRelation'> {
    Name: 'DeclinedEventRelation';
    Fields: Fields$DeclinedEventRelation;
    ParentReferences: ParentReferences$DeclinedEventRelation;
    ChildRelationships: ChildRelationships$DeclinedEventRelation;
  }

type Fields$DelegatedAccount = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ManagedById: string;
  TargetId: string;
  AccessManageUsers: boolean;
  ParentId: string | null;
};

type ParentReferences$DelegatedAccount = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ManagedBy: SObjectDefinition$User;
  Target: SObjectDefinition$Account;
  Parent: SObjectDefinition$Account | null;
};

type ChildRelationships$DelegatedAccount = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$DelegatedAccountFeed;
  Histories: SObjectDefinition$DelegatedAccountHistory;
  Shares: SObjectDefinition$DelegatedAccountShare;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$DelegatedAccount extends SObjectDefinition<'DelegatedAccount'> {
    Name: 'DelegatedAccount';
    Fields: Fields$DelegatedAccount;
    ParentReferences: ParentReferences$DelegatedAccount;
    ChildRelationships: ChildRelationships$DelegatedAccount;
  }

type Fields$DelegatedAccountFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$DelegatedAccountFeed = {
  //
  Parent: SObjectDefinition$DelegatedAccount;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$DelegatedAccountFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$DelegatedAccountFeed extends SObjectDefinition<'DelegatedAccountFeed'> {
    Name: 'DelegatedAccountFeed';
    Fields: Fields$DelegatedAccountFeed;
    ParentReferences: ParentReferences$DelegatedAccountFeed;
    ChildRelationships: ChildRelationships$DelegatedAccountFeed;
  }

type Fields$DelegatedAccountHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  DelegatedAccountId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$DelegatedAccountHistory = {
  //
  DelegatedAccount: SObjectDefinition$DelegatedAccount;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DelegatedAccountHistory = {
  //
};

interface SObjectDefinition$DelegatedAccountHistory extends SObjectDefinition<'DelegatedAccountHistory'> {
    Name: 'DelegatedAccountHistory';
    Fields: Fields$DelegatedAccountHistory;
    ParentReferences: ParentReferences$DelegatedAccountHistory;
    ChildRelationships: ChildRelationships$DelegatedAccountHistory;
  }

type Fields$DelegatedAccountShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$DelegatedAccountShare = {
  //
  Parent: SObjectDefinition$DelegatedAccount;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DelegatedAccountShare = {
  //
};

interface SObjectDefinition$DelegatedAccountShare extends SObjectDefinition<'DelegatedAccountShare'> {
    Name: 'DelegatedAccountShare';
    Fields: Fields$DelegatedAccountShare;
    ParentReferences: ParentReferences$DelegatedAccountShare;
    ChildRelationships: ChildRelationships$DelegatedAccountShare;
  }

type Fields$DeleteEvent = {
  //
  Id: string;
  Record: string | null;
  RecordName: string | null;
  DeletedById: string;
  DeletedDate: DateString | null;
  SobjectName: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$DeleteEvent = {
  //
  DeletedBy: SObjectDefinition$User;
};

type ChildRelationships$DeleteEvent = {
  //
};

interface SObjectDefinition$DeleteEvent extends SObjectDefinition<'DeleteEvent'> {
    Name: 'DeleteEvent';
    Fields: Fields$DeleteEvent;
    ParentReferences: ParentReferences$DeleteEvent;
    ChildRelationships: ChildRelationships$DeleteEvent;
  }

type Fields$Dettaglio_Cronoprogramma__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Cluster__c: string | null;
  Durata__c: number | null;
  Tipologia__c: string | null;
  Avviso__c: string | null;
};

type ParentReferences$Dettaglio_Cronoprogramma__ChangeEvent = {
  //
};

type ChildRelationships$Dettaglio_Cronoprogramma__ChangeEvent = {
  //
};

interface SObjectDefinition$Dettaglio_Cronoprogramma__ChangeEvent extends SObjectDefinition<'Dettaglio_Cronoprogramma__ChangeEvent'> {
    Name: 'Dettaglio_Cronoprogramma__ChangeEvent';
    Fields: Fields$Dettaglio_Cronoprogramma__ChangeEvent;
    ParentReferences: ParentReferences$Dettaglio_Cronoprogramma__ChangeEvent;
    ChildRelationships: ChildRelationships$Dettaglio_Cronoprogramma__ChangeEvent;
  }

type Fields$Dettaglio_Cronoprogramma__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Dettaglio_Cronoprogramma__Share = {
  //
  Parent: SObjectDefinition$Dettaglio_Cronoprogramma__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Dettaglio_Cronoprogramma__Share = {
  //
};

interface SObjectDefinition$Dettaglio_Cronoprogramma__Share extends SObjectDefinition<'Dettaglio_Cronoprogramma__Share'> {
    Name: 'Dettaglio_Cronoprogramma__Share';
    Fields: Fields$Dettaglio_Cronoprogramma__Share;
    ParentReferences: ParentReferences$Dettaglio_Cronoprogramma__Share;
    ChildRelationships: ChildRelationships$Dettaglio_Cronoprogramma__Share;
  }

type Fields$Dettaglio_Cronoprogramma__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Cluster__c: string | null;
  Durata__c: number | null;
  Tipologia__c: string | null;
  Avviso__c: string | null;
};

type ParentReferences$Dettaglio_Cronoprogramma__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Cluster__r: SObjectDefinition$Cluster__c | null;
  Avviso__r: SObjectDefinition$outfunds__Funding_Program__c | null;
};

type ChildRelationships$Dettaglio_Cronoprogramma__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Shares: SObjectDefinition$Dettaglio_Cronoprogramma__Share;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Dettaglio_Cronoprogramma__c extends SObjectDefinition<'Dettaglio_Cronoprogramma__c'> {
    Name: 'Dettaglio_Cronoprogramma__c';
    Fields: Fields$Dettaglio_Cronoprogramma__c;
    ParentReferences: ParentReferences$Dettaglio_Cronoprogramma__c;
    ChildRelationships: ChildRelationships$Dettaglio_Cronoprogramma__c;
  }

type Fields$Dettaglio_Errore__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$Dettaglio_Errore__ChangeEvent = {
  //
};

type ChildRelationships$Dettaglio_Errore__ChangeEvent = {
  //
};

interface SObjectDefinition$Dettaglio_Errore__ChangeEvent extends SObjectDefinition<'Dettaglio_Errore__ChangeEvent'> {
    Name: 'Dettaglio_Errore__ChangeEvent';
    Fields: Fields$Dettaglio_Errore__ChangeEvent;
    ParentReferences: ParentReferences$Dettaglio_Errore__ChangeEvent;
    ChildRelationships: ChildRelationships$Dettaglio_Errore__ChangeEvent;
  }

type Fields$Dettaglio_Errore__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Dettaglio_Errore__History = {
  //
  Parent: SObjectDefinition$Dettaglio_Errore__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Dettaglio_Errore__History = {
  //
};

interface SObjectDefinition$Dettaglio_Errore__History extends SObjectDefinition<'Dettaglio_Errore__History'> {
    Name: 'Dettaglio_Errore__History';
    Fields: Fields$Dettaglio_Errore__History;
    ParentReferences: ParentReferences$Dettaglio_Errore__History;
    ChildRelationships: ChildRelationships$Dettaglio_Errore__History;
  }

type Fields$Dettaglio_Errore__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Dettaglio_Errore__Share = {
  //
  Parent: SObjectDefinition$Dettaglio_Errore__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Dettaglio_Errore__Share = {
  //
};

interface SObjectDefinition$Dettaglio_Errore__Share extends SObjectDefinition<'Dettaglio_Errore__Share'> {
    Name: 'Dettaglio_Errore__Share';
    Fields: Fields$Dettaglio_Errore__Share;
    ParentReferences: ParentReferences$Dettaglio_Errore__Share;
    ChildRelationships: ChildRelationships$Dettaglio_Errore__Share;
  }

type Fields$Dettaglio_Errore__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
};

type ParentReferences$Dettaglio_Errore__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Dettaglio_Errore__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Histories: SObjectDefinition$Dettaglio_Errore__History;
  Shares: SObjectDefinition$Dettaglio_Errore__Share;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Dettaglio_Errore__c extends SObjectDefinition<'Dettaglio_Errore__c'> {
    Name: 'Dettaglio_Errore__c';
    Fields: Fields$Dettaglio_Errore__c;
    ParentReferences: ParentReferences$Dettaglio_Errore__c;
    ChildRelationships: ChildRelationships$Dettaglio_Errore__c;
  }

type Fields$DialerCallUsage = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  VoiceCallId: string | null;
  DurationInSeconds: number;
  FromCountry: string;
  ToCountry: string;
  VendorType: string;
  CallType: string;
  CallStartDateTime: DateString;
};

type ParentReferences$DialerCallUsage = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  VoiceCall: SObjectDefinition$VoiceCall | null;
};

type ChildRelationships$DialerCallUsage = {
  //
  Shares: SObjectDefinition$DialerCallUsageShare;
};

interface SObjectDefinition$DialerCallUsage extends SObjectDefinition<'DialerCallUsage'> {
    Name: 'DialerCallUsage';
    Fields: Fields$DialerCallUsage;
    ParentReferences: ParentReferences$DialerCallUsage;
    ChildRelationships: ChildRelationships$DialerCallUsage;
  }

type Fields$DialerCallUsageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$DialerCallUsageShare = {
  //
  Parent: SObjectDefinition$DialerCallUsage;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DialerCallUsageShare = {
  //
};

interface SObjectDefinition$DialerCallUsageShare extends SObjectDefinition<'DialerCallUsageShare'> {
    Name: 'DialerCallUsageShare';
    Fields: Fields$DialerCallUsageShare;
    ParentReferences: ParentReferences$DialerCallUsageShare;
    ChildRelationships: ChildRelationships$DialerCallUsageShare;
  }

type Fields$DigitalSignature = {
  //
  Id: string;
  IsDeleted: boolean;
  DigitalSignatureNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  DocumentName: string;
  DocumentContentType: string;
  DocumentLength: number | null;
  DocumentBody: BlobString;
  SignedBy: string | null;
  Place: string | null;
  SignedDate: DateString | null;
  SignatureType: string | null;
};

type ParentReferences$DigitalSignature = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name;
};

type ChildRelationships$DigitalSignature = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DigitalSignature extends SObjectDefinition<'DigitalSignature'> {
    Name: 'DigitalSignature';
    Fields: Fields$DigitalSignature;
    ParentReferences: ParentReferences$DigitalSignature;
    ChildRelationships: ChildRelationships$DigitalSignature;
  }

type Fields$Document = {
  //
  Id: string;
  FolderId: string;
  IsDeleted: boolean;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  ContentType: string | null;
  Type: string | null;
  IsPublic: boolean;
  BodyLength: number;
  Body: BlobString | null;
  Url: string | null;
  Description: string | null;
  Keywords: string | null;
  IsInternalUseOnly: boolean;
  AuthorId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsBodySearchable: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Document = {
  //
  Folder: SObjectDefinition$Name;
  Author: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Document = {
  //
};

interface SObjectDefinition$Document extends SObjectDefinition<'Document'> {
    Name: 'Document';
    Fields: Fields$Document;
    ParentReferences: ParentReferences$Document;
    ChildRelationships: ChildRelationships$Document;
  }

type Fields$DocumentAttachmentMap = {
  //
  Id: string;
  ParentId: string;
  DocumentId: string;
  DocumentSequence: number;
  CreatedDate: DateString;
  CreatedById: string;
};

type ParentReferences$DocumentAttachmentMap = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DocumentAttachmentMap = {
  //
};

interface SObjectDefinition$DocumentAttachmentMap extends SObjectDefinition<'DocumentAttachmentMap'> {
    Name: 'DocumentAttachmentMap';
    Fields: Fields$DocumentAttachmentMap;
    ParentReferences: ParentReferences$DocumentAttachmentMap;
    ChildRelationships: ChildRelationships$DocumentAttachmentMap;
  }

type Fields$DuplicateRecordItem = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DuplicateRecordSetId: string;
  RecordId: string;
};

type ParentReferences$DuplicateRecordItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DuplicateRecordSet: SObjectDefinition$DuplicateRecordSet;
  Record: SObjectDefinition$Name;
};

type ChildRelationships$DuplicateRecordItem = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DuplicateRecordItem extends SObjectDefinition<'DuplicateRecordItem'> {
    Name: 'DuplicateRecordItem';
    Fields: Fields$DuplicateRecordItem;
    ParentReferences: ParentReferences$DuplicateRecordItem;
    ChildRelationships: ChildRelationships$DuplicateRecordItem;
  }

type Fields$DuplicateRecordSet = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RecordCount: number | null;
};

type ParentReferences$DuplicateRecordSet = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DuplicateRecordSet = {
  //
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DuplicateRecordSet extends SObjectDefinition<'DuplicateRecordSet'> {
    Name: 'DuplicateRecordSet';
    Fields: Fields$DuplicateRecordSet;
    ParentReferences: ParentReferences$DuplicateRecordSet;
    ChildRelationships: ChildRelationships$DuplicateRecordSet;
  }

type Fields$EmailMessage = {
  //
  Id: string;
  ParentId: string | null;
  ActivityId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TextBody: string | null;
  HtmlBody: string | null;
  Headers: string | null;
  Subject: string | null;
  FromName: string | null;
  FromAddress: string | null;
  ValidatedFromAddress: string | null;
  ToAddress: string | null;
  CcAddress: string | null;
  BccAddress: string | null;
  Incoming: boolean;
  HasAttachment: boolean;
  Status: string;
  MessageDate: DateString | null;
  IsDeleted: boolean;
  ReplyToEmailMessageId: string | null;
  IsPrivateDraft: boolean;
  IsExternallyVisible: boolean;
  MessageIdentifier: string | null;
  ThreadIdentifier: string | null;
  IsClientManaged: boolean;
  RelatedToId: string | null;
  IsTracked: boolean;
  IsOpened: boolean;
  FirstOpenedDate: DateString | null;
  LastOpenedDate: DateString | null;
  IsBounced: boolean;
  EmailTemplateId: string | null;
};

type ParentReferences$EmailMessage = {
  //
  Parent: SObjectDefinition$Case | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ReplyToEmailMessage: SObjectDefinition$EmailMessage | null;
  RelatedTo: SObjectDefinition$Name | null;
  EmailTemplate: SObjectDefinition$EmailTemplate | null;
};

type ChildRelationships$EmailMessage = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$EmailMessage extends SObjectDefinition<'EmailMessage'> {
    Name: 'EmailMessage';
    Fields: Fields$EmailMessage;
    ParentReferences: ParentReferences$EmailMessage;
    ChildRelationships: ChildRelationships$EmailMessage;
  }

type Fields$EmailMessageChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  ParentId: string | null;
  ActivityId: string | null;
  CreatedById: string | null;
  CreatedDate: DateString | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  TextBody: string | null;
  HtmlBody: string | null;
  Headers: string | null;
  Subject: string | null;
  FromName: string | null;
  FromAddress: string | null;
  ToAddress: string | null;
  CcAddress: string | null;
  BccAddress: string | null;
  Incoming: boolean;
  HasAttachment: boolean;
  Status: string | null;
  MessageDate: DateString | null;
  ReplyToEmailMessageId: string | null;
  IsPrivateDraft: boolean;
  IsExternallyVisible: boolean;
  MessageIdentifier: string | null;
  ThreadIdentifier: string | null;
  IsClientManaged: boolean;
  RelatedToId: string | null;
  IsTracked: boolean;
  FirstOpenedDate: DateString | null;
  LastOpenedDate: DateString | null;
  IsBounced: boolean;
  EmailTemplateId: string | null;
};

type ParentReferences$EmailMessageChangeEvent = {
  //
};

type ChildRelationships$EmailMessageChangeEvent = {
  //
};

interface SObjectDefinition$EmailMessageChangeEvent extends SObjectDefinition<'EmailMessageChangeEvent'> {
    Name: 'EmailMessageChangeEvent';
    Fields: Fields$EmailMessageChangeEvent;
    ParentReferences: ParentReferences$EmailMessageChangeEvent;
    ChildRelationships: ChildRelationships$EmailMessageChangeEvent;
  }

type Fields$EmailMessageRelation = {
  //
  Id: string;
  EmailMessageId: string;
  RelationId: string | null;
  RelationType: string;
  RelationAddress: string | null;
  RelationObjectType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$EmailMessageRelation = {
  //
  EmailMessage: SObjectDefinition$EmailMessage;
  Relation: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailMessageRelation = {
  //
};

interface SObjectDefinition$EmailMessageRelation extends SObjectDefinition<'EmailMessageRelation'> {
    Name: 'EmailMessageRelation';
    Fields: Fields$EmailMessageRelation;
    ParentReferences: ParentReferences$EmailMessageRelation;
    ChildRelationships: ChildRelationships$EmailMessageRelation;
  }

type Fields$EmailStatus = {
  //
  Id: string;
  TaskId: string;
  WhoId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  TimesOpened: number;
  FirstOpenDate: DateString | null;
  LastOpenDate: DateString | null;
  EmailTemplateName: string | null;
};

type ParentReferences$EmailStatus = {
  //
  Task: SObjectDefinition$Task;
  Who: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailStatus = {
  //
};

interface SObjectDefinition$EmailStatus extends SObjectDefinition<'EmailStatus'> {
    Name: 'EmailStatus';
    Fields: Fields$EmailStatus;
    ParentReferences: ParentReferences$EmailStatus;
    ChildRelationships: ChildRelationships$EmailStatus;
  }

type Fields$EmailTemplate = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  OwnerId: string;
  FolderId: string;
  FolderName: string | null;
  BrandTemplateId: string | null;
  EnhancedLetterheadId: string | null;
  TemplateStyle: string;
  IsActive: boolean;
  TemplateType: string;
  Encoding: string | null;
  Description: string | null;
  Subject: string | null;
  HtmlValue: string | null;
  Body: string | null;
  TimesUsed: number | null;
  LastUsedDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApiVersion: number | null;
  Markup: string | null;
  UiType: string | null;
  RelatedEntityType: string | null;
  IsBuilderContent: boolean;
};

type ParentReferences$EmailTemplate = {
  //
  Owner: SObjectDefinition$User;
  Folder: SObjectDefinition$Name;
  EnhancedLetterhead: SObjectDefinition$EnhancedLetterhead | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailTemplate = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
};

interface SObjectDefinition$EmailTemplate extends SObjectDefinition<'EmailTemplate'> {
    Name: 'EmailTemplate';
    Fields: Fields$EmailTemplate;
    ParentReferences: ParentReferences$EmailTemplate;
    ChildRelationships: ChildRelationships$EmailTemplate;
  }

type Fields$EmailTemplateChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  DeveloperName: string | null;
  NamespacePrefix: string | null;
  OwnerId: string | null;
  FolderId: string | null;
  BrandTemplateId: string | null;
  EnhancedLetterheadId: string | null;
  TemplateStyle: string | null;
  IsActive: boolean;
  TemplateType: string | null;
  Encoding: string | null;
  Description: string | null;
  Subject: string | null;
  HtmlValue: string | null;
  Body: string | null;
  TimesUsed: number | null;
  LastUsedDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ApiVersion: number | null;
  Markup: string | null;
  UiType: string | null;
  RelatedEntityType: string | null;
};

type ParentReferences$EmailTemplateChangeEvent = {
  //
};

type ChildRelationships$EmailTemplateChangeEvent = {
  //
};

interface SObjectDefinition$EmailTemplateChangeEvent extends SObjectDefinition<'EmailTemplateChangeEvent'> {
    Name: 'EmailTemplateChangeEvent';
    Fields: Fields$EmailTemplateChangeEvent;
    ParentReferences: ParentReferences$EmailTemplateChangeEvent;
    ChildRelationships: ChildRelationships$EmailTemplateChangeEvent;
  }

type Fields$EmbeddedServiceDetail = {
  //
  Id: string;
  DurableId: string | null;
  Site: string | null;
  PrimaryColor: string | null;
  SecondaryColor: string | null;
  ContrastPrimaryColor: string | null;
  ContrastInvertedColor: string | null;
  NavBarColor: string | null;
  NavBarTextColor: string | null;
  SecondaryNavBarColor: string | null;
  Font: string | null;
  IsLiveAgentEnabled: boolean;
  IsFieldServiceEnabled: boolean;
  Width: number | null;
  Height: number | null;
  IsPrechatEnabled: boolean;
  CustomPrechatComponent: string | null;
  AvatarImg: string | null;
  SmallCompanyLogoImg: string | null;
  PrechatBackgroundImg: string | null;
  WaitingStateBackgroundImg: string | null;
  FontSize: string | null;
  OfflineCaseBackgroundImg: string | null;
  IsOfflineCaseEnabled: boolean;
  IsQueuePositionEnabled: boolean;
  ShouldShowNewAppointment: boolean;
  ShouldShowExistingAppointment: boolean;
  FieldServiceHomeImg: string | null;
  FieldServiceLogoImg: string | null;
  FieldServiceConfirmCardImg: string | null;
  ShouldHideAuthDialog: boolean;
  CustomMinimizedComponent: string | null;
};

type ParentReferences$EmbeddedServiceDetail = {
  //
};

type ChildRelationships$EmbeddedServiceDetail = {
  //
};

interface SObjectDefinition$EmbeddedServiceDetail extends SObjectDefinition<'EmbeddedServiceDetail'> {
    Name: 'EmbeddedServiceDetail';
    Fields: Fields$EmbeddedServiceDetail;
    ParentReferences: ParentReferences$EmbeddedServiceDetail;
    ChildRelationships: ChildRelationships$EmbeddedServiceDetail;
  }

type Fields$EmbeddedServiceLabel = {
  //
  Id: string;
  DurableId: string | null;
  EmbeddedServiceConfigDeveloperName: string | null;
  LabelKey: string | null;
  CustomLabelName: string | null;
};

type ParentReferences$EmbeddedServiceLabel = {
  //
};

type ChildRelationships$EmbeddedServiceLabel = {
  //
};

interface SObjectDefinition$EmbeddedServiceLabel extends SObjectDefinition<'EmbeddedServiceLabel'> {
    Name: 'EmbeddedServiceLabel';
    Fields: Fields$EmbeddedServiceLabel;
    ParentReferences: ParentReferences$EmbeddedServiceLabel;
    ChildRelationships: ChildRelationships$EmbeddedServiceLabel;
  }

type Fields$EngagementChannelType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ContactPointType: string | null;
};

type ParentReferences$EngagementChannelType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EngagementChannelType = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionChannelTypes: SObjectDefinition$CommSubscriptionChannelType;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$EngagementChannelTypeFeed;
  Histories: SObjectDefinition$EngagementChannelTypeHistory;
  Shares: SObjectDefinition$EngagementChannelTypeShare;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$EngagementChannelType extends SObjectDefinition<'EngagementChannelType'> {
    Name: 'EngagementChannelType';
    Fields: Fields$EngagementChannelType;
    ParentReferences: ParentReferences$EngagementChannelType;
    ChildRelationships: ChildRelationships$EngagementChannelType;
  }

type Fields$EngagementChannelTypeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EngagementChannelTypeFeed = {
  //
  Parent: SObjectDefinition$EngagementChannelType;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EngagementChannelTypeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EngagementChannelTypeFeed extends SObjectDefinition<'EngagementChannelTypeFeed'> {
    Name: 'EngagementChannelTypeFeed';
    Fields: Fields$EngagementChannelTypeFeed;
    ParentReferences: ParentReferences$EngagementChannelTypeFeed;
    ChildRelationships: ChildRelationships$EngagementChannelTypeFeed;
  }

type Fields$EngagementChannelTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  EngagementChannelTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$EngagementChannelTypeHistory = {
  //
  EngagementChannelType: SObjectDefinition$EngagementChannelType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EngagementChannelTypeHistory = {
  //
};

interface SObjectDefinition$EngagementChannelTypeHistory extends SObjectDefinition<'EngagementChannelTypeHistory'> {
    Name: 'EngagementChannelTypeHistory';
    Fields: Fields$EngagementChannelTypeHistory;
    ParentReferences: ParentReferences$EngagementChannelTypeHistory;
    ChildRelationships: ChildRelationships$EngagementChannelTypeHistory;
  }

type Fields$EngagementChannelTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$EngagementChannelTypeShare = {
  //
  Parent: SObjectDefinition$EngagementChannelType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EngagementChannelTypeShare = {
  //
};

interface SObjectDefinition$EngagementChannelTypeShare extends SObjectDefinition<'EngagementChannelTypeShare'> {
    Name: 'EngagementChannelTypeShare';
    Fields: Fields$EngagementChannelTypeShare;
    ParentReferences: ParentReferences$EngagementChannelTypeShare;
    ChildRelationships: ChildRelationships$EngagementChannelTypeShare;
  }

type Fields$EnhancedLetterhead = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  LetterheadHeader: string | null;
  LetterheadFooter: string | null;
};

type ParentReferences$EnhancedLetterhead = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EnhancedLetterhead = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$EnhancedLetterheadFeed;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$EnhancedLetterhead extends SObjectDefinition<'EnhancedLetterhead'> {
    Name: 'EnhancedLetterhead';
    Fields: Fields$EnhancedLetterhead;
    ParentReferences: ParentReferences$EnhancedLetterhead;
    ChildRelationships: ChildRelationships$EnhancedLetterhead;
  }

type Fields$EnhancedLetterheadFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EnhancedLetterheadFeed = {
  //
  Parent: SObjectDefinition$EnhancedLetterhead;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EnhancedLetterheadFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EnhancedLetterheadFeed extends SObjectDefinition<'EnhancedLetterheadFeed'> {
    Name: 'EnhancedLetterheadFeed';
    Fields: Fields$EnhancedLetterheadFeed;
    ParentReferences: ParentReferences$EnhancedLetterheadFeed;
    ChildRelationships: ChildRelationships$EnhancedLetterheadFeed;
  }

type Fields$Entitlement = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string;
  Type: string | null;
  ServiceContractId: string | null;
  ContractLineItemId: string | null;
  AssetId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  SlaProcessId: string | null;
  BusinessHoursId: string | null;
  IsPerIncident: boolean;
  CasesPerEntitlement: number | null;
  RemainingCases: number | null;
  Status: string | null;
  LocationId: string | null;
};

type ParentReferences$Entitlement = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account;
  ServiceContract: SObjectDefinition$ServiceContract | null;
  ContractLineItem: SObjectDefinition$ContractLineItem | null;
  Asset: SObjectDefinition$Asset | null;
  SlaProcess: SObjectDefinition$SlaProcess | null;
  BusinessHours: SObjectDefinition$BusinessHours | null;
  Location: SObjectDefinition$Location | null;
};

type ChildRelationships$Entitlement = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  EntitlementContacts: SObjectDefinition$EntitlementContact;
  Feeds: SObjectDefinition$EntitlementFeed;
  Histories: SObjectDefinition$EntitlementHistory;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$Entitlement extends SObjectDefinition<'Entitlement'> {
    Name: 'Entitlement';
    Fields: Fields$Entitlement;
    ParentReferences: ParentReferences$Entitlement;
    ChildRelationships: ChildRelationships$Entitlement;
  }

type Fields$EntitlementChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  AccountId: string | null;
  Type: string | null;
  ServiceContractId: string | null;
  ContractLineItemId: string | null;
  AssetId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  SlaProcessId: string | null;
  BusinessHoursId: string | null;
  IsPerIncident: boolean;
  CasesPerEntitlement: number | null;
  RemainingCases: number | null;
  LocationId: string | null;
};

type ParentReferences$EntitlementChangeEvent = {
  //
};

type ChildRelationships$EntitlementChangeEvent = {
  //
};

interface SObjectDefinition$EntitlementChangeEvent extends SObjectDefinition<'EntitlementChangeEvent'> {
    Name: 'EntitlementChangeEvent';
    Fields: Fields$EntitlementChangeEvent;
    ParentReferences: ParentReferences$EntitlementChangeEvent;
    ChildRelationships: ChildRelationships$EntitlementChangeEvent;
  }

type Fields$EntitlementContact = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  EntitlementId: string;
  ContactId: string;
};

type ParentReferences$EntitlementContact = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Entitlement: SObjectDefinition$Entitlement;
  Contact: SObjectDefinition$Contact;
};

type ChildRelationships$EntitlementContact = {
  //
};

interface SObjectDefinition$EntitlementContact extends SObjectDefinition<'EntitlementContact'> {
    Name: 'EntitlementContact';
    Fields: Fields$EntitlementContact;
    ParentReferences: ParentReferences$EntitlementContact;
    ChildRelationships: ChildRelationships$EntitlementContact;
  }

type Fields$EntitlementFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EntitlementFeed = {
  //
  Parent: SObjectDefinition$Entitlement;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EntitlementFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EntitlementFeed extends SObjectDefinition<'EntitlementFeed'> {
    Name: 'EntitlementFeed';
    Fields: Fields$EntitlementFeed;
    ParentReferences: ParentReferences$EntitlementFeed;
    ChildRelationships: ChildRelationships$EntitlementFeed;
  }

type Fields$EntitlementHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  EntitlementId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$EntitlementHistory = {
  //
  Entitlement: SObjectDefinition$Entitlement;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EntitlementHistory = {
  //
};

interface SObjectDefinition$EntitlementHistory extends SObjectDefinition<'EntitlementHistory'> {
    Name: 'EntitlementHistory';
    Fields: Fields$EntitlementHistory;
    ParentReferences: ParentReferences$EntitlementHistory;
    ChildRelationships: ChildRelationships$EntitlementHistory;
  }

type Fields$EntitlementTemplate = {
  //
  Id: string;
  Name: string;
  BusinessHoursId: string | null;
  Type: string | null;
  SlaProcessId: string | null;
  IsPerIncident: boolean;
  CasesPerEntitlement: number | null;
  Term: number | null;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  NamespacePrefix: string | null;
};

type ParentReferences$EntitlementTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EntitlementTemplate = {
  //
};

interface SObjectDefinition$EntitlementTemplate extends SObjectDefinition<'EntitlementTemplate'> {
    Name: 'EntitlementTemplate';
    Fields: Fields$EntitlementTemplate;
    ParentReferences: ParentReferences$EntitlementTemplate;
    ChildRelationships: ChildRelationships$EntitlementTemplate;
  }

type Fields$EntityDefinition = {
  //
  Id: string;
  DurableId: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  QualifiedApiName: string;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  MasterLabel: string;
  Label: string | null;
  PluralLabel: string | null;
  DefaultCompactLayoutId: string | null;
  IsCustomizable: boolean;
  IsApexTriggerable: boolean;
  IsWorkflowEnabled: boolean;
  IsProcessEnabled: boolean;
  IsCompactLayoutable: boolean;
  DeploymentStatus: string | null;
  KeyPrefix: string | null;
  IsCustomSetting: boolean;
  IsDeprecatedAndHidden: boolean;
  IsReplicateable: boolean;
  IsRetrieveable: boolean;
  IsSearchLayoutable: boolean;
  IsSearchable: boolean;
  IsTriggerable: boolean;
  IsIdEnabled: boolean;
  IsEverCreatable: boolean;
  IsEverUpdatable: boolean;
  IsEverDeletable: boolean;
  IsFeedEnabled: boolean;
  IsQueryable: boolean;
  IsMruEnabled: boolean;
  DetailUrl: string | null;
  EditUrl: string | null;
  NewUrl: string | null;
  EditDefinitionUrl: string | null;
  HelpSettingPageName: string | null;
  HelpSettingPageUrl: string | null;
  RunningUserEntityAccessId: string | null;
  PublisherId: string | null;
  IsLayoutable: boolean;
  RecordTypesSupported: any | null;
  InternalSharingModel: string;
  ExternalSharingModel: string;
  HasSubtypes: boolean;
  IsSubtype: boolean;
  IsAutoActivityCaptureEnabled: boolean;
  IsInterface: boolean;
  ImplementsInterfaces: string | null;
  ImplementedBy: string | null;
  ExtendsInterfaces: string | null;
  ExtendedBy: string | null;
  DefaultImplementation: string | null;
};

type ParentReferences$EntityDefinition = {
  //
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EntityDefinition = {
  //
  Particles: SObjectDefinition$EntityParticle;
  Fields: SObjectDefinition$FieldDefinition;
  OwnerChangeOptions: SObjectDefinition$OwnerChangeOptionInfo;
};

interface SObjectDefinition$EntityDefinition extends SObjectDefinition<'EntityDefinition'> {
    Name: 'EntityDefinition';
    Fields: Fields$EntityDefinition;
    ParentReferences: ParentReferences$EntityDefinition;
    ChildRelationships: ChildRelationships$EntityDefinition;
  }

type Fields$EntityMilestone = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentEntityId: string;
  StartDate: DateString | null;
  TargetDate: DateString | null;
  CompletionDate: DateString | null;
  SlaProcessId: string | null;
  MilestoneTypeId: string | null;
  IsCompleted: boolean;
  IsViolated: boolean;
  TargetResponseInMins: number | null;
  TargetResponseInHrs: number | null;
  TargetResponseInDays: number | null;
  TimeRemainingInMins: string | null;
  TimeRemainingInHrs: string | null;
  TimeRemainingInDays: number | null;
  ElapsedTimeInMins: number | null;
  ElapsedTimeInHrs: number | null;
  ElapsedTimeInDays: number | null;
  TimeSinceTargetInMins: string | null;
  TimeSinceTargetInHrs: string | null;
  TimeSinceTargetInDays: number | null;
  BusinessHoursId: string | null;
};

type ParentReferences$EntityMilestone = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentEntity: SObjectDefinition$WorkOrder;
  SlaProcess: SObjectDefinition$SlaProcess | null;
  MilestoneType: SObjectDefinition$MilestoneType | null;
  BusinessHours: SObjectDefinition$BusinessHours | null;
};

type ChildRelationships$EntityMilestone = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$EntityMilestoneFeed;
  Histories: SObjectDefinition$EntityMilestoneHistory;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$EntityMilestone extends SObjectDefinition<'EntityMilestone'> {
    Name: 'EntityMilestone';
    Fields: Fields$EntityMilestone;
    ParentReferences: ParentReferences$EntityMilestone;
    ChildRelationships: ChildRelationships$EntityMilestone;
  }

type Fields$EntityMilestoneFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EntityMilestoneFeed = {
  //
  Parent: SObjectDefinition$EntityMilestone;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EntityMilestoneFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EntityMilestoneFeed extends SObjectDefinition<'EntityMilestoneFeed'> {
    Name: 'EntityMilestoneFeed';
    Fields: Fields$EntityMilestoneFeed;
    ParentReferences: ParentReferences$EntityMilestoneFeed;
    ChildRelationships: ChildRelationships$EntityMilestoneFeed;
  }

type Fields$EntityMilestoneHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  EntityMilestoneId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$EntityMilestoneHistory = {
  //
  EntityMilestone: SObjectDefinition$EntityMilestone;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EntityMilestoneHistory = {
  //
};

interface SObjectDefinition$EntityMilestoneHistory extends SObjectDefinition<'EntityMilestoneHistory'> {
    Name: 'EntityMilestoneHistory';
    Fields: Fields$EntityMilestoneHistory;
    ParentReferences: ParentReferences$EntityMilestoneHistory;
    ChildRelationships: ChildRelationships$EntityMilestoneHistory;
  }

type Fields$EntityParticle = {
  //
  Id: string;
  DurableId: string | null;
  QualifiedApiName: string;
  EntityDefinitionId: string | null;
  FieldDefinitionId: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  MasterLabel: string;
  Label: string | null;
  Length: number | null;
  DataType: string | null;
  ServiceDataTypeId: string | null;
  ValueTypeId: string | null;
  ExtraTypeInfo: string | null;
  IsAutonumber: boolean;
  ByteLength: number | null;
  IsCaseSensitive: boolean;
  IsUnique: boolean;
  IsCreatable: boolean;
  IsUpdatable: boolean;
  IsDefaultedOnCreate: boolean;
  IsWriteRequiresMasterRead: boolean;
  IsCalculated: boolean;
  IsHighScaleNumber: boolean;
  IsHtmlFormatted: boolean;
  IsNameField: boolean;
  IsNillable: boolean;
  IsPermissionable: boolean;
  IsEncrypted: boolean;
  Digits: number | null;
  InlineHelpText: string | null;
  RelationshipName: string | null;
  ReferenceTargetField: string | null;
  Name: string | null;
  Mask: string | null;
  MaskType: string | null;
  IsWorkflowFilterable: boolean;
  IsCompactLayoutable: boolean;
  Precision: number | null;
  Scale: number | null;
  IsFieldHistoryTracked: boolean;
  IsApiFilterable: boolean;
  IsApiSortable: boolean;
  IsApiGroupable: boolean;
  IsListVisible: boolean;
  IsLayoutable: boolean;
  IsDependentPicklist: boolean;
  IsDeprecatedAndHidden: boolean;
  IsDisplayLocationInDecimal: boolean;
  DefaultValueFormula: string | null;
  IsIdLookup: boolean;
  IsNamePointing: boolean;
  RelationshipOrder: number | null;
  ReferenceTo: any | null;
  IsComponent: boolean;
  IsCompound: boolean;
};

type ParentReferences$EntityParticle = {
  //
};

type ChildRelationships$EntityParticle = {
  //
  PicklistValues: SObjectDefinition$PicklistValueInfo;
};

interface SObjectDefinition$EntityParticle extends SObjectDefinition<'EntityParticle'> {
    Name: 'EntityParticle';
    Fields: Fields$EntityParticle;
    ParentReferences: ParentReferences$EntityParticle;
    ChildRelationships: ChildRelationships$EntityParticle;
  }

type Fields$EntitySubscription = {
  //
  Id: string;
  ParentId: string;
  SubscriberId: string;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  NetworkId: string | null;
};

type ParentReferences$EntitySubscription = {
  //
  Parent: SObjectDefinition$Name;
  Subscriber: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
};

type ChildRelationships$EntitySubscription = {
  //
};

interface SObjectDefinition$EntitySubscription extends SObjectDefinition<'EntitySubscription'> {
    Name: 'EntitySubscription';
    Fields: Fields$EntitySubscription;
    ParentReferences: ParentReferences$EntitySubscription;
    ChildRelationships: ChildRelationships$EntitySubscription;
  }

type Fields$Event = {
  //
  Id: string;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  Location: string | null;
  IsAllDayEvent: boolean;
  ActivityDateTime: DateString | null;
  ActivityDate: DateString | null;
  DurationInMinutes: number | null;
  StartDateTime: DateString | null;
  EndDateTime: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  AccountId: string | null;
  OwnerId: string;
  Type: string | null;
  IsPrivate: boolean;
  ShowAs: string | null;
  IsDeleted: boolean;
  IsChild: boolean;
  IsGroupEvent: boolean;
  GroupEventType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsArchived: boolean;
  IsVisibleInSelfService: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateTime: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EventSubtype: string | null;
  IsRecurrence2Exclusion: boolean;
  Recurrence2PatternText: string | null;
  Recurrence2PatternVersion: string | null;
  IsRecurrence2: boolean;
  IsRecurrence2Exception: boolean;
  Recurrence2PatternStartDate: DateString | null;
  Recurrence2PatternTimeZone: string | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$Event = {
  //
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Account: SObjectDefinition$Account | null;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Requirement__r: SObjectDefinition$outfunds__Requirement__c | null;
  Piano_di_migrazione__r: SObjectDefinition$Case | null;
  Checklist__r: SObjectDefinition$Checklist__c | null;
  EnteLookup__r: SObjectDefinition$Account | null;
  Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Tag_colleghi__r: SObjectDefinition$User | null;
  Counter__r: SObjectDefinition$Counter__c | null;
  Servizio__r: SObjectDefinition$Servizio_Richiesta__c | null;
  Registro_eventi_ente__r: SObjectDefinition$Registro_eventi_ente__c | null;
};

type ChildRelationships$Event = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  RecurringEvents: SObjectDefinition$Event;
  Feeds: SObjectDefinition$EventFeed;
  EventRelations: SObjectDefinition$EventRelation;
  EventWhoRelations: SObjectDefinition$EventWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
};

interface SObjectDefinition$Event extends SObjectDefinition<'Event'> {
    Name: 'Event';
    Fields: Fields$Event;
    ParentReferences: ParentReferences$Event;
    ChildRelationships: ChildRelationships$Event;
  }

type Fields$EventBusSubscriber = {
  //
  Id: string;
  ExternalId: string | null;
  Name: string | null;
  Type: string | null;
  Topic: string | null;
  Position: number | null;
  Tip: number | null;
  Retries: number | null;
  LastError: string | null;
  Status: string | null;
};

type ParentReferences$EventBusSubscriber = {
  //
};

type ChildRelationships$EventBusSubscriber = {
  //
};

interface SObjectDefinition$EventBusSubscriber extends SObjectDefinition<'EventBusSubscriber'> {
    Name: 'EventBusSubscriber';
    Fields: Fields$EventBusSubscriber;
    ParentReferences: ParentReferences$EventBusSubscriber;
    ChildRelationships: ChildRelationships$EventBusSubscriber;
  }

type Fields$EventChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  Location: string | null;
  IsAllDayEvent: boolean;
  ActivityDateTime: DateString | null;
  ActivityDate: DateString | null;
  DurationInMinutes: number | null;
  Description: string | null;
  AccountId: string | null;
  OwnerId: string | null;
  Type: string | null;
  IsPrivate: boolean;
  ShowAs: string | null;
  IsChild: boolean;
  IsGroupEvent: boolean;
  GroupEventType: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  IsVisibleInSelfService: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateTime: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  IsRecurrence2Exclusion: boolean;
  Recurrence2PatternText: string | null;
  Recurrence2PatternVersion: string | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$EventChangeEvent = {
  //
};

type ChildRelationships$EventChangeEvent = {
  //
};

interface SObjectDefinition$EventChangeEvent extends SObjectDefinition<'EventChangeEvent'> {
    Name: 'EventChangeEvent';
    Fields: Fields$EventChangeEvent;
    ParentReferences: ParentReferences$EventChangeEvent;
    ChildRelationships: ChildRelationships$EventChangeEvent;
  }

type Fields$EventFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EventFeed = {
  //
  Parent: SObjectDefinition$Event;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EventFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EventFeed extends SObjectDefinition<'EventFeed'> {
    Name: 'EventFeed';
    Fields: Fields$EventFeed;
    ParentReferences: ParentReferences$EventFeed;
    ChildRelationships: ChildRelationships$EventFeed;
  }

type Fields$EventLogFile = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  EventType: string;
  LogDate: DateString;
  LogFileLength: number;
  LogFileContentType: string;
  ApiVersion: number;
  Sequence: number;
  Interval: string | null;
  LogFileFieldNames: string | null;
  LogFileFieldTypes: string | null;
  LogFile: BlobString;
};

type ParentReferences$EventLogFile = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EventLogFile = {
  //
};

interface SObjectDefinition$EventLogFile extends SObjectDefinition<'EventLogFile'> {
    Name: 'EventLogFile';
    Fields: Fields$EventLogFile;
    ParentReferences: ParentReferences$EventLogFile;
    ChildRelationships: ChildRelationships$EventLogFile;
  }

type Fields$EventRelation = {
  //
  Id: string;
  RelationId: string;
  EventId: string;
  IsWhat: boolean;
  IsParent: boolean;
  IsInvitee: boolean;
  AccountId: string | null;
  Status: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$EventRelation = {
  //
  Relation: SObjectDefinition$Name;
  Event: SObjectDefinition$Event;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EventRelation = {
  //
};

interface SObjectDefinition$EventRelation extends SObjectDefinition<'EventRelation'> {
    Name: 'EventRelation';
    Fields: Fields$EventRelation;
    ParentReferences: ParentReferences$EventRelation;
    ChildRelationships: ChildRelationships$EventRelation;
  }

type Fields$EventRelationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RelationId: string | null;
  EventId: string | null;
  IsWhat: boolean;
  IsParent: boolean;
  IsInvitee: boolean;
  AccountId: string | null;
  Status: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$EventRelationChangeEvent = {
  //
};

type ChildRelationships$EventRelationChangeEvent = {
  //
};

interface SObjectDefinition$EventRelationChangeEvent extends SObjectDefinition<'EventRelationChangeEvent'> {
    Name: 'EventRelationChangeEvent';
    Fields: Fields$EventRelationChangeEvent;
    ParentReferences: ParentReferences$EventRelationChangeEvent;
    ChildRelationships: ChildRelationships$EventRelationChangeEvent;
  }

type Fields$EventWhoRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$EventWhoRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EventWhoRelation = {
  //
};

interface SObjectDefinition$EventWhoRelation extends SObjectDefinition<'EventWhoRelation'> {
    Name: 'EventWhoRelation';
    Fields: Fields$EventWhoRelation;
    ParentReferences: ParentReferences$EventWhoRelation;
    ChildRelationships: ChildRelationships$EventWhoRelation;
  }

type Fields$Examination = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  Status: string | null;
};

type ParentReferences$Examination = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Examination = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Feeds: SObjectDefinition$ExaminationFeed;
  Histories: SObjectDefinition$ExaminationHistory;
  Shares: SObjectDefinition$ExaminationShare;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Examination extends SObjectDefinition<'Examination'> {
    Name: 'Examination';
    Fields: Fields$Examination;
    ParentReferences: ParentReferences$Examination;
    ChildRelationships: ChildRelationships$Examination;
  }

type Fields$ExaminationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ExaminationFeed = {
  //
  Parent: SObjectDefinition$Examination;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ExaminationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ExaminationFeed extends SObjectDefinition<'ExaminationFeed'> {
    Name: 'ExaminationFeed';
    Fields: Fields$ExaminationFeed;
    ParentReferences: ParentReferences$ExaminationFeed;
    ChildRelationships: ChildRelationships$ExaminationFeed;
  }

type Fields$ExaminationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ExaminationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ExaminationHistory = {
  //
  Examination: SObjectDefinition$Examination;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ExaminationHistory = {
  //
};

interface SObjectDefinition$ExaminationHistory extends SObjectDefinition<'ExaminationHistory'> {
    Name: 'ExaminationHistory';
    Fields: Fields$ExaminationHistory;
    ParentReferences: ParentReferences$ExaminationHistory;
    ChildRelationships: ChildRelationships$ExaminationHistory;
  }

type Fields$ExaminationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ExaminationShare = {
  //
  Parent: SObjectDefinition$Examination;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ExaminationShare = {
  //
};

interface SObjectDefinition$ExaminationShare extends SObjectDefinition<'ExaminationShare'> {
    Name: 'ExaminationShare';
    Fields: Fields$ExaminationShare;
    ParentReferences: ParentReferences$ExaminationShare;
    ChildRelationships: ChildRelationships$ExaminationShare;
  }

type Fields$ExpressionFilter = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FilterConditionLogic: string | null;
  ContextId: string;
  FilterDescription: string | null;
};

type ParentReferences$ExpressionFilter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Context: SObjectDefinition$MacroInstruction;
};

type ChildRelationships$ExpressionFilter = {
  //
};

interface SObjectDefinition$ExpressionFilter extends SObjectDefinition<'ExpressionFilter'> {
    Name: 'ExpressionFilter';
    Fields: Fields$ExpressionFilter;
    ParentReferences: ParentReferences$ExpressionFilter;
    ChildRelationships: ChildRelationships$ExpressionFilter;
  }

type Fields$ExpressionFilterCriteria = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FilterTarget: string | null;
  FilterTargetValue: string | null;
  Operation: string;
  SortOrder: number | null;
  ExpressionFilterId: string;
};

type ParentReferences$ExpressionFilterCriteria = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ExpressionFilter: SObjectDefinition$ExpressionFilter;
};

type ChildRelationships$ExpressionFilterCriteria = {
  //
};

interface SObjectDefinition$ExpressionFilterCriteria extends SObjectDefinition<'ExpressionFilterCriteria'> {
    Name: 'ExpressionFilterCriteria';
    Fields: Fields$ExpressionFilterCriteria;
    ParentReferences: ParentReferences$ExpressionFilterCriteria;
    ChildRelationships: ChildRelationships$ExpressionFilterCriteria;
  }

type Fields$ExternalEvent = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalId: string | null;
  Title: string | null;
  Location: string | null;
  Notes: string | null;
  Time: string | null;
};

type ParentReferences$ExternalEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ExternalEvent = {
  //
  ConferenceNumbers: SObjectDefinition$ConferenceNumber;
};

interface SObjectDefinition$ExternalEvent extends SObjectDefinition<'ExternalEvent'> {
    Name: 'ExternalEvent';
    Fields: Fields$ExternalEvent;
    ParentReferences: ParentReferences$ExternalEvent;
    ChildRelationships: ChildRelationships$ExternalEvent;
  }

type Fields$ExternalEventMapping = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalId: string | null;
  EventId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  IsRecurring: boolean;
};

type ParentReferences$ExternalEventMapping = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Event: SObjectDefinition$Event | null;
};

type ChildRelationships$ExternalEventMapping = {
  //
  Shares: SObjectDefinition$ExternalEventMappingShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ExternalEventMapping extends SObjectDefinition<'ExternalEventMapping'> {
    Name: 'ExternalEventMapping';
    Fields: Fields$ExternalEventMapping;
    ParentReferences: ParentReferences$ExternalEventMapping;
    ChildRelationships: ChildRelationships$ExternalEventMapping;
  }

type Fields$ExternalEventMappingShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ExternalEventMappingShare = {
  //
  Parent: SObjectDefinition$ExternalEventMapping;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ExternalEventMappingShare = {
  //
};

interface SObjectDefinition$ExternalEventMappingShare extends SObjectDefinition<'ExternalEventMappingShare'> {
    Name: 'ExternalEventMappingShare';
    Fields: Fields$ExternalEventMappingShare;
    ParentReferences: ParentReferences$ExternalEventMappingShare;
    ChildRelationships: ChildRelationships$ExternalEventMappingShare;
  }

type Fields$ExternalSocialAccount = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalAccountId: string;
  Username: string | null;
  Provider: string;
  ProviderUserId: string;
  ExternalPictureURL: string | null;
  IsActive: boolean;
  SocialPropertyId: string | null;
  IsAuthenticated: boolean;
  TopicId: string | null;
  DataSourceId: string | null;
  RuleId: string | null;
  IsDataSourceActive: boolean;
  UniqueName: string | null;
  DefaultResponseAccountId: string | null;
  ProfileUrl: string | null;
  AuthorizedBy: string | null;
  IsCaseCreationEnabled: boolean;
};

type ParentReferences$ExternalSocialAccount = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DefaultResponseAccount: SObjectDefinition$ExternalSocialAccount | null;
};

type ChildRelationships$ExternalSocialAccount = {
  //
};

interface SObjectDefinition$ExternalSocialAccount extends SObjectDefinition<'ExternalSocialAccount'> {
    Name: 'ExternalSocialAccount';
    Fields: Fields$ExternalSocialAccount;
    ParentReferences: ParentReferences$ExternalSocialAccount;
    ChildRelationships: ChildRelationships$ExternalSocialAccount;
  }

type Fields$FeedAttachment = {
  //
  Id: string;
  FeedEntityId: string;
  Type: string;
  RecordId: string | null;
  Title: string | null;
  Value: string | null;
  IsDeleted: boolean;
};

type ParentReferences$FeedAttachment = {
  //
};

type ChildRelationships$FeedAttachment = {
  //
};

interface SObjectDefinition$FeedAttachment extends SObjectDefinition<'FeedAttachment'> {
    Name: 'FeedAttachment';
    Fields: Fields$FeedAttachment;
    ParentReferences: ParentReferences$FeedAttachment;
    ChildRelationships: ChildRelationships$FeedAttachment;
  }

type Fields$FeedComment = {
  //
  Id: string;
  FeedItemId: string;
  ParentId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  Revision: number | null;
  LastEditById: string | null;
  LastEditDate: DateString | null;
  CommentBody: string;
  IsDeleted: boolean;
  InsertedById: string;
  CommentType: string | null;
  RelatedRecordId: string | null;
  IsRichText: boolean;
  IsVerified: boolean;
  HasEntityLinks: boolean;
  Status: string | null;
  ThreadParentId: string | null;
  ThreadLevel: number | null;
  ThreadChildrenCount: number | null;
  ThreadLastUpdatedDate: DateString | null;
};

type ParentReferences$FeedComment = {
  //
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
  ThreadParent: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$FeedComment = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedThreadedComments: SObjectDefinition$FeedComment;
  FeedRevisions: SObjectDefinition$FeedRevision;
};

interface SObjectDefinition$FeedComment extends SObjectDefinition<'FeedComment'> {
    Name: 'FeedComment';
    Fields: Fields$FeedComment;
    ParentReferences: ParentReferences$FeedComment;
    ChildRelationships: ChildRelationships$FeedComment;
  }

type Fields$FeedItem = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  Revision: number | null;
  LastEditById: string | null;
  LastEditDate: DateString | null;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
  HasContent: boolean;
  HasLink: boolean;
  HasFeedEntity: boolean;
  HasVerifiedComment: boolean;
  IsClosed: boolean;
  Status: string | null;
};

type ParentReferences$FeedItem = {
  //
  Parent: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$FeedItem = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedRevisions: SObjectDefinition$FeedRevision;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  FeedItemThanks: SObjectDefinition$WorkThanks;
};

interface SObjectDefinition$FeedItem extends SObjectDefinition<'FeedItem'> {
    Name: 'FeedItem';
    Fields: Fields$FeedItem;
    ParentReferences: ParentReferences$FeedItem;
    ChildRelationships: ChildRelationships$FeedItem;
  }

type Fields$FeedLike = {
  //
  Id: string;
  FeedItemId: string | null;
  FeedEntityId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  InsertedById: string;
};

type ParentReferences$FeedLike = {
  //
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedLike = {
  //
};

interface SObjectDefinition$FeedLike extends SObjectDefinition<'FeedLike'> {
    Name: 'FeedLike';
    Fields: Fields$FeedLike;
    ParentReferences: ParentReferences$FeedLike;
    ChildRelationships: ChildRelationships$FeedLike;
  }

type Fields$FeedRevision = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  FeedEntityId: string;
  OriginNetworkId: string | null;
  Revision: number | null;
  Action: string | null;
  EditedAttribute: string | null;
  Value: string | null;
  IsValueRichText: boolean;
};

type ParentReferences$FeedRevision = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedRevision = {
  //
};

interface SObjectDefinition$FeedRevision extends SObjectDefinition<'FeedRevision'> {
    Name: 'FeedRevision';
    Fields: Fields$FeedRevision;
    ParentReferences: ParentReferences$FeedRevision;
    ChildRelationships: ChildRelationships$FeedRevision;
  }

type Fields$FeedSignal = {
  //
  Id: string;
  FeedItemId: string | null;
  FeedEntityId: string | null;
  SignalValue: number | null;
  SignalType: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  InsertedById: string;
};

type ParentReferences$FeedSignal = {
  //
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedSignal = {
  //
};

interface SObjectDefinition$FeedSignal extends SObjectDefinition<'FeedSignal'> {
    Name: 'FeedSignal';
    Fields: Fields$FeedSignal;
    ParentReferences: ParentReferences$FeedSignal;
    ChildRelationships: ChildRelationships$FeedSignal;
  }

type Fields$FeedTrackedChange = {
  //
  Id: string;
  FeedItemId: string;
  FieldName: string;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$FeedTrackedChange = {
  //
};

type ChildRelationships$FeedTrackedChange = {
  //
};

interface SObjectDefinition$FeedTrackedChange extends SObjectDefinition<'FeedTrackedChange'> {
    Name: 'FeedTrackedChange';
    Fields: Fields$FeedTrackedChange;
    ParentReferences: ParentReferences$FeedTrackedChange;
    ChildRelationships: ChildRelationships$FeedTrackedChange;
  }

type Fields$FieldDefinition = {
  //
  Id: string;
  DurableId: string | null;
  QualifiedApiName: string;
  EntityDefinitionId: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  MasterLabel: string;
  Label: string | null;
  Length: number | null;
  DataType: string | null;
  ServiceDataTypeId: string | null;
  ValueTypeId: string | null;
  ExtraTypeInfo: string | null;
  IsCalculated: boolean;
  IsHighScaleNumber: boolean;
  IsHtmlFormatted: boolean;
  IsNameField: boolean;
  IsNillable: boolean;
  IsWorkflowFilterable: boolean;
  IsCompactLayoutable: boolean;
  Precision: number | null;
  Scale: number | null;
  IsFieldHistoryTracked: boolean;
  IsIndexed: boolean;
  IsApiFilterable: boolean;
  IsApiSortable: boolean;
  IsListFilterable: boolean;
  IsListSortable: boolean;
  IsApiGroupable: boolean;
  IsListVisible: boolean;
  ControllingFieldDefinitionId: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  PublisherId: string | null;
  RunningUserFieldAccessId: string | null;
  RelationshipName: string | null;
  ReferenceTo: any | null;
  ReferenceTargetField: string | null;
  IsCompound: boolean;
  IsSearchPrefilterable: boolean;
  IsPolymorphicForeignKey: boolean;
  IsAiPredictionField: boolean;
  BusinessOwnerId: string | null;
  BusinessStatus: string | null;
  SecurityClassification: string | null;
  ComplianceGroup: string | null;
  Description: string | null;
};

type ParentReferences$FieldDefinition = {
  //
  LastModifiedBy: SObjectDefinition$User;
  BusinessOwner: SObjectDefinition$Name | null;
};

type ChildRelationships$FieldDefinition = {
  //
};

interface SObjectDefinition$FieldDefinition extends SObjectDefinition<'FieldDefinition'> {
    Name: 'FieldDefinition';
    Fields: Fields$FieldDefinition;
    ParentReferences: ParentReferences$FieldDefinition;
    ChildRelationships: ChildRelationships$FieldDefinition;
  }

type Fields$FinestraTemporale__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Bando__c: string | null;
  Ammissione_sottomessa__c: boolean;
  DataFine__c: DateString | null;
  DataInizio__c: DateString | null;
  Data_fine__c: boolean;
  InProgress__c: boolean;
  Numero__c: number | null;
  Data_Decreto__c: DateString | null;
  Data_Generazione_Decreto__c: DateString | null;
  Data_scadenza_CUP__c: DateString | null;
  Esito_UBRAC__c: DateString | null;
  Fondi_Aggiornati__c: boolean;
  Fondi_Disponibili_Decreto_Altro__c: number | null;
  Fondi_Disponibili_Decreto_Sud__c: number | null;
  Fondi_Disponibili_Decreto__c: number | null;
  GeneraDecretoEnabled__c: boolean;
  Invio_UBRAC__c: DateString | null;
  Oggetto_Decreto__c: string | null;
  Protocollo_n__c: number | null;
  Stato_Decreto__c: string | null;
  Total_program_Amount_Decreto__c: number | null;
  Name_new__c: string | null;
  Fondi_allocati_Altro__c: number | null;
  Fondi_allocati_Sud__c: number | null;
  Fondi_allocati__c: number | null;
  Processata__c: boolean;
  Ammissione_con_Riserva__c: boolean;
  Disabilitata_Altro__c: boolean;
  Disabilitata_Sud__c: boolean;
  Disabilitata__c: boolean;
  Nome_Decreto__c: string | null;
  Disabilitata_Padre_1__c: boolean;
  Disabilitata_Padre_2__c: boolean;
  Fondi_allocati_Padre_1__c: number | null;
  Fondi_allocati_Padre_2__c: number | null;
  Fondi_disponibili_decreto_Padre_1__c: number | null;
  Fondi_disponibili_decreto_Padre_2__c: number | null;
};

type ParentReferences$FinestraTemporale__ChangeEvent = {
  //
};

type ChildRelationships$FinestraTemporale__ChangeEvent = {
  //
};

interface SObjectDefinition$FinestraTemporale__ChangeEvent extends SObjectDefinition<'FinestraTemporale__ChangeEvent'> {
    Name: 'FinestraTemporale__ChangeEvent';
    Fields: Fields$FinestraTemporale__ChangeEvent;
    ParentReferences: ParentReferences$FinestraTemporale__ChangeEvent;
    ChildRelationships: ChildRelationships$FinestraTemporale__ChangeEvent;
  }

type Fields$FinestraTemporale__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$FinestraTemporale__History = {
  //
  Parent: SObjectDefinition$FinestraTemporale__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$FinestraTemporale__History = {
  //
};

interface SObjectDefinition$FinestraTemporale__History extends SObjectDefinition<'FinestraTemporale__History'> {
    Name: 'FinestraTemporale__History';
    Fields: Fields$FinestraTemporale__History;
    ParentReferences: ParentReferences$FinestraTemporale__History;
    ChildRelationships: ChildRelationships$FinestraTemporale__History;
  }

type Fields$FinestraTemporale__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Bando__c: string;
  Ammissione_sottomessa__c: boolean;
  DataFine__c: DateString | null;
  DataInizio__c: DateString | null;
  Data_fine__c: boolean;
  InProgress__c: boolean;
  Numero__c: number | null;
  Data_Decreto__c: DateString | null;
  Data_Generazione_Decreto__c: DateString | null;
  Data_scadenza_CUP__c: DateString | null;
  Esito_UBRAC__c: DateString | null;
  Fondi_Aggiornati__c: boolean;
  Fondi_Disponibili_Decreto_Altro__c: number | null;
  Fondi_Disponibili_Decreto_Sud__c: number | null;
  Fondi_Disponibili_Decreto__c: number | null;
  GeneraDecretoEnabled__c: boolean;
  Invio_UBRAC__c: DateString | null;
  Oggetto_Decreto__c: string | null;
  Protocollo_n__c: number | null;
  Stato_Decreto__c: string | null;
  Total_program_Amount_Decreto__c: number | null;
  Name_new__c: string | null;
  Fondi_allocati_Altro__c: number | null;
  Fondi_allocati_Sud__c: number | null;
  Fondi_allocati__c: number | null;
  Processata__c: boolean;
  Ammissione_con_Riserva__c: boolean;
  Disabilitata_Altro__c: boolean;
  Disabilitata_Sud__c: boolean;
  Disabilitata__c: boolean;
  Nome_Decreto__c: string | null;
  Disabilitata_Padre_1__c: boolean;
  Disabilitata_Padre_2__c: boolean;
  Fondi_allocati_Padre_1__c: number | null;
  Fondi_allocati_Padre_2__c: number | null;
  Fondi_disponibili_decreto_Padre_1__c: number | null;
  Fondi_disponibili_decreto_Padre_2__c: number | null;
};

type ParentReferences$FinestraTemporale__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Bando__r: SObjectDefinition$outfunds__Funding_Program__c;
};

type ChildRelationships$FinestraTemporale__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$FinestraTemporale__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$FinestraTemporale__c extends SObjectDefinition<'FinestraTemporale__c'> {
    Name: 'FinestraTemporale__c';
    Fields: Fields$FinestraTemporale__c;
    ParentReferences: ParentReferences$FinestraTemporale__c;
    ChildRelationships: ChildRelationships$FinestraTemporale__c;
  }

type Fields$FiscalYearSettings = {
  //
  Id: string;
  PeriodId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Name: string;
  IsStandardYear: boolean;
  YearType: string | null;
  QuarterLabelScheme: string | null;
  PeriodLabelScheme: string | null;
  WeekLabelScheme: string | null;
  QuarterPrefix: string | null;
  PeriodPrefix: string | null;
  WeekStartDay: number | null;
  Description: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$FiscalYearSettings = {
  //
};

type ChildRelationships$FiscalYearSettings = {
  //
  Periods: SObjectDefinition$Period;
};

interface SObjectDefinition$FiscalYearSettings extends SObjectDefinition<'FiscalYearSettings'> {
    Name: 'FiscalYearSettings';
    Fields: Fields$FiscalYearSettings;
    ParentReferences: ParentReferences$FiscalYearSettings;
    ChildRelationships: ChildRelationships$FiscalYearSettings;
  }

type Fields$FlowDefinitionView = {
  //
  Id: string;
  DurableId: string | null;
  ApiName: string | null;
  Label: string | null;
  Description: string | null;
  ProcessType: string | null;
  TriggerType: string | null;
  NamespacePrefix: string | null;
  ActiveVersionId: string | null;
  LatestVersionId: string | null;
  LastModifiedBy: string | null;
  IsActive: boolean;
  IsOutOfDate: boolean;
  LastModifiedDate: DateString;
  IsTemplate: boolean;
  IsSwingFlow: boolean;
  Builder: string | null;
  ManageableState: string | null;
  InstalledPackageName: string | null;
  TriggerOrder: number | null;
};

type ParentReferences$FlowDefinitionView = {
  //
};

type ChildRelationships$FlowDefinitionView = {
  //
  Versions: SObjectDefinition$FlowVersionView;
};

interface SObjectDefinition$FlowDefinitionView extends SObjectDefinition<'FlowDefinitionView'> {
    Name: 'FlowDefinitionView';
    Fields: Fields$FlowDefinitionView;
    ParentReferences: ParentReferences$FlowDefinitionView;
    ChildRelationships: ChildRelationships$FlowDefinitionView;
  }

type Fields$FlowExecutionErrorEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  EventIdentifier: string;
  UserId: string | null;
  Username: string | null;
  EventDate: DateString;
  InterviewStartDate: DateString;
  FlowExecutionStartDate: DateString | null;
  FlowExecutionEndDate: DateString | null;
  InterviewGuid: string;
  InterviewBatchId: string | null;
  InterviewRequestId: string | null;
  FlowNamespace: string | null;
  FlowApiName: string;
  FlowVersionId: string;
  StageQualifiedApiName: string | null;
  ProcessType: string | null;
  EventType: string;
  RelatedRecordId: string | null;
  FlowVersionNumber: number | null;
  ContextRecordId: string | null;
  ContextObject: string | null;
  InterviewStartedById: string;
  ErrorId: string | null;
  ExtendedErrorCode: string | null;
  ErrorMessage: string | null;
  ElementApiName: string | null;
  ElementType: string | null;
};

type ParentReferences$FlowExecutionErrorEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  User: SObjectDefinition$User | null;
  ContextRecord: SObjectDefinition$Name | null;
  InterviewStartedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowExecutionErrorEvent = {
  //
};

interface SObjectDefinition$FlowExecutionErrorEvent extends SObjectDefinition<'FlowExecutionErrorEvent'> {
    Name: 'FlowExecutionErrorEvent';
    Fields: Fields$FlowExecutionErrorEvent;
    ParentReferences: ParentReferences$FlowExecutionErrorEvent;
    ChildRelationships: ChildRelationships$FlowExecutionErrorEvent;
  }

type Fields$FlowInterview = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CurrentElement: string | null;
  InterviewLabel: string | null;
  PauseLabel: string | null;
  Guid: string | null;
  WasPausedFromScreen: boolean;
};

type ParentReferences$FlowInterview = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterview = {
  //
  Shares: SObjectDefinition$FlowInterviewShare;
  RecordRelations: SObjectDefinition$FlowRecordRelation;
  StageRelations: SObjectDefinition$FlowStageRelation;
  RecordActions: SObjectDefinition$RecordAction;
  WorkSteps: SObjectDefinition$WorkStep;
};

interface SObjectDefinition$FlowInterview extends SObjectDefinition<'FlowInterview'> {
    Name: 'FlowInterview';
    Fields: Fields$FlowInterview;
    ParentReferences: ParentReferences$FlowInterview;
    ChildRelationships: ChildRelationships$FlowInterview;
  }

type Fields$FlowInterviewLog = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FlowDeveloperName: string | null;
  FlowInterviewGuid: string;
  FlowVersionNumber: number | null;
  InterviewStartTimestamp: DateString;
  InterviewEndTimestamp: DateString | null;
  InterviewDurationInMinutes: number | null;
  InterviewStatus: string;
  FlowNamespace: string | null;
  FlowLabel: string | null;
};

type ParentReferences$FlowInterviewLog = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterviewLog = {
  //
  FlowInterviewLogs: SObjectDefinition$FlowInterviewLogEntry;
  Shares: SObjectDefinition$FlowInterviewLogShare;
};

interface SObjectDefinition$FlowInterviewLog extends SObjectDefinition<'FlowInterviewLog'> {
    Name: 'FlowInterviewLog';
    Fields: Fields$FlowInterviewLog;
    ParentReferences: ParentReferences$FlowInterviewLog;
    ChildRelationships: ChildRelationships$FlowInterviewLog;
  }

type Fields$FlowInterviewLogEntry = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FlowInterviewLogId: string;
  LogEntryType: string;
  ElementApiName: string | null;
  LogEntryTimestamp: DateString;
  DurationSinceStartInMinutes: number | null;
  ElementDurationInMinutes: number | null;
  ElementLabel: string | null;
};

type ParentReferences$FlowInterviewLogEntry = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  FlowInterviewLog: SObjectDefinition$FlowInterviewLog;
};

type ChildRelationships$FlowInterviewLogEntry = {
  //
};

interface SObjectDefinition$FlowInterviewLogEntry extends SObjectDefinition<'FlowInterviewLogEntry'> {
    Name: 'FlowInterviewLogEntry';
    Fields: Fields$FlowInterviewLogEntry;
    ParentReferences: ParentReferences$FlowInterviewLogEntry;
    ChildRelationships: ChildRelationships$FlowInterviewLogEntry;
  }

type Fields$FlowInterviewLogShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$FlowInterviewLogShare = {
  //
  Parent: SObjectDefinition$FlowInterviewLog;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterviewLogShare = {
  //
};

interface SObjectDefinition$FlowInterviewLogShare extends SObjectDefinition<'FlowInterviewLogShare'> {
    Name: 'FlowInterviewLogShare';
    Fields: Fields$FlowInterviewLogShare;
    ParentReferences: ParentReferences$FlowInterviewLogShare;
    ChildRelationships: ChildRelationships$FlowInterviewLogShare;
  }

type Fields$FlowInterviewShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$FlowInterviewShare = {
  //
  Parent: SObjectDefinition$FlowInterview;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterviewShare = {
  //
};

interface SObjectDefinition$FlowInterviewShare extends SObjectDefinition<'FlowInterviewShare'> {
    Name: 'FlowInterviewShare';
    Fields: Fields$FlowInterviewShare;
    ParentReferences: ParentReferences$FlowInterviewShare;
    ChildRelationships: ChildRelationships$FlowInterviewShare;
  }

type Fields$FlowRecordRelation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  RelatedRecordId: string;
};

type ParentReferences$FlowRecordRelation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$FlowInterview;
  RelatedRecord: SObjectDefinition$Name;
};

type ChildRelationships$FlowRecordRelation = {
  //
};

interface SObjectDefinition$FlowRecordRelation extends SObjectDefinition<'FlowRecordRelation'> {
    Name: 'FlowRecordRelation';
    Fields: Fields$FlowRecordRelation;
    ParentReferences: ParentReferences$FlowRecordRelation;
    ChildRelationships: ChildRelationships$FlowRecordRelation;
  }

type Fields$FlowStageRelation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  StageOrder: number;
  StageType: string | null;
  StageLabel: string | null;
  FlexIndex: string | null;
};

type ParentReferences$FlowStageRelation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$FlowInterview;
};

type ChildRelationships$FlowStageRelation = {
  //
};

interface SObjectDefinition$FlowStageRelation extends SObjectDefinition<'FlowStageRelation'> {
    Name: 'FlowStageRelation';
    Fields: Fields$FlowStageRelation;
    ParentReferences: ParentReferences$FlowStageRelation;
    ChildRelationships: ChildRelationships$FlowStageRelation;
  }

type Fields$FlowVariableView = {
  //
  Id: string;
  DurableId: string | null;
  FlowVersionViewId: string | null;
  ApiName: string | null;
  Description: string | null;
  DataType: string | null;
  IsInput: boolean;
  IsOutput: boolean;
  IsCollection: boolean;
  ObjectType: string | null;
};

type ParentReferences$FlowVariableView = {
  //
};

type ChildRelationships$FlowVariableView = {
  //
};

interface SObjectDefinition$FlowVariableView extends SObjectDefinition<'FlowVariableView'> {
    Name: 'FlowVariableView';
    Fields: Fields$FlowVariableView;
    ParentReferences: ParentReferences$FlowVariableView;
    ChildRelationships: ChildRelationships$FlowVariableView;
  }

type Fields$FlowVersionView = {
  //
  Id: string;
  DurableId: string | null;
  FlowDefinitionViewId: string | null;
  Label: string | null;
  Description: string | null;
  Status: string | null;
  VersionNumber: number | null;
  ProcessType: string | null;
  IsTemplate: boolean;
  RunInMode: string | null;
  LastModifiedDate: DateString;
  IsSwingFlow: boolean;
  ApiVersion: number | null;
  ApiVersionRuntime: number | null;
};

type ParentReferences$FlowVersionView = {
  //
};

type ChildRelationships$FlowVersionView = {
  //
  Variables: SObjectDefinition$FlowVariableView;
};

interface SObjectDefinition$FlowVersionView extends SObjectDefinition<'FlowVersionView'> {
    Name: 'FlowVersionView';
    Fields: Fields$FlowVersionView;
    ParentReferences: ParentReferences$FlowVersionView;
    ChildRelationships: ChildRelationships$FlowVersionView;
  }

type Fields$Folder = {
  //
  Id: string;
  ParentId: string | null;
  Name: string;
  DeveloperName: string | null;
  AccessType: string;
  IsReadonly: boolean;
  Type: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Folder = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Folder = {
  //
  SubFolders: SObjectDefinition$Folder;
};

interface SObjectDefinition$Folder extends SObjectDefinition<'Folder'> {
    Name: 'Folder';
    Fields: Fields$Folder;
    ParentReferences: ParentReferences$Folder;
    ChildRelationships: ChildRelationships$Folder;
  }

type Fields$FolderedContentDocument = {
  //
  Id: string;
  IsFolder: boolean;
  ContentDocumentId: string;
  ParentContentFolderId: string | null;
  IsDeleted: boolean;
  Title: string;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$FolderedContentDocument = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  ParentContentFolder: SObjectDefinition$ContentFolder | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FolderedContentDocument = {
  //
};

interface SObjectDefinition$FolderedContentDocument extends SObjectDefinition<'FolderedContentDocument'> {
    Name: 'FolderedContentDocument';
    Fields: Fields$FolderedContentDocument;
    ParentReferences: ParentReferences$FolderedContentDocument;
    ChildRelationships: ChildRelationships$FolderedContentDocument;
  }

type Fields$ForecastingAdjustment = {
  //
  Id: string;
  ForecastingItemId: string;
  PeriodId: string | null;
  StartDate: DateString;
  ProductFamily: string | null;
  ForecastingItemCategory: string;
  ForecastCategoryName: string | null;
  AdjustedAmount: number;
  AdjustedQuantity: number;
  OwnerId: string;
  IsQuantity: boolean;
  IsAmount: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  AdjustmentNote: string | null;
};

type ParentReferences$ForecastingAdjustment = {
  //
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingAdjustment = {
  //
};

interface SObjectDefinition$ForecastingAdjustment extends SObjectDefinition<'ForecastingAdjustment'> {
    Name: 'ForecastingAdjustment';
    Fields: Fields$ForecastingAdjustment;
    ParentReferences: ParentReferences$ForecastingAdjustment;
    ChildRelationships: ChildRelationships$ForecastingAdjustment;
  }

type Fields$ForecastingCategoryMapping = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SourceCategory: string;
  ForecastingItemCategory: string;
};

type ParentReferences$ForecastingCategoryMapping = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingCategoryMapping = {
  //
};

interface SObjectDefinition$ForecastingCategoryMapping extends SObjectDefinition<'ForecastingCategoryMapping'> {
    Name: 'ForecastingCategoryMapping';
    Fields: Fields$ForecastingCategoryMapping;
    ParentReferences: ParentReferences$ForecastingCategoryMapping;
    ChildRelationships: ChildRelationships$ForecastingCategoryMapping;
  }

type Fields$ForecastingDisplayedFamily = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProductFamily: string;
  DisplayPosition: number | null;
};

type ParentReferences$ForecastingDisplayedFamily = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingDisplayedFamily = {
  //
};

interface SObjectDefinition$ForecastingDisplayedFamily extends SObjectDefinition<'ForecastingDisplayedFamily'> {
    Name: 'ForecastingDisplayedFamily';
    Fields: Fields$ForecastingDisplayedFamily;
    ParentReferences: ParentReferences$ForecastingDisplayedFamily;
    ChildRelationships: ChildRelationships$ForecastingDisplayedFamily;
  }

type Fields$ForecastingFact = {
  //
  Id: string;
  OwnerId: string;
  PeriodId: string | null;
  ForecastCategoryName: string;
  OpportunityId: string;
  ForecastedObjectId: string | null;
  ForecastingItemId: string | null;
  SystemModstamp: DateString;
  ForecastingTypeId: string | null;
};

type ParentReferences$ForecastingFact = {
  //
  Owner: SObjectDefinition$User;
  ForecastingItem: SObjectDefinition$ForecastingItem | null;
  ForecastingType: SObjectDefinition$ForecastingType | null;
};

type ChildRelationships$ForecastingFact = {
  //
};

interface SObjectDefinition$ForecastingFact extends SObjectDefinition<'ForecastingFact'> {
    Name: 'ForecastingFact';
    Fields: Fields$ForecastingFact;
    ParentReferences: ParentReferences$ForecastingFact;
    ChildRelationships: ChildRelationships$ForecastingFact;
  }

type Fields$ForecastingItem = {
  //
  Id: string;
  OwnerId: string;
  PeriodId: string | null;
  ForecastingItemCategory: string;
  ForecastCategoryName: string | null;
  ParentForecastingItemId: string | null;
  ProductFamily: string | null;
  OwnerOnlyAmount: number | null;
  AmountWithoutAdjustments: number | null;
  AmountWithoutManagerAdjustment: number | null;
  ForecastAmount: number | null;
  AmountWithoutOwnerAdjustment: number | null;
  OwnerOnlyQuantity: number | null;
  QuantityWithoutAdjustments: number | null;
  QuantityWithoutManagerAdjustment: number | null;
  ForecastQuantity: number | null;
  QuantityWithoutOwnerAdjustment: number | null;
  IsQuantity: boolean;
  IsAmount: boolean;
  HasAdjustment: boolean;
  HasOwnerAdjustment: boolean;
  IsUpToDate: boolean;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  SubordinateOverrides: number;
};

type ParentReferences$ForecastingItem = {
  //
  Owner: SObjectDefinition$User;
  Period: SObjectDefinition$Period | null;
  ParentForecastingItem: SObjectDefinition$ForecastingItem | null;
  ForecastingType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingItem = {
  //
  ForecastingFacts: SObjectDefinition$ForecastingFact;
};

interface SObjectDefinition$ForecastingItem extends SObjectDefinition<'ForecastingItem'> {
    Name: 'ForecastingItem';
    Fields: Fields$ForecastingItem;
    ParentReferences: ParentReferences$ForecastingItem;
    ChildRelationships: ChildRelationships$ForecastingItem;
  }

type Fields$ForecastingOwnerAdjustment = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingItemId: string;
  OwnerAdjustedAmount: number | null;
  OwnerAdjustedQuantity: number | null;
  OwnerAdjustmentNote: string | null;
  PeriodId: string | null;
  ForecastOwnerId: string | null;
  StartDate: DateString | null;
  ProductFamily: string | null;
  ForecastingItemCategory: string;
  ForecastCategoryName: string | null;
  IsQuantity: boolean;
  IsAmount: boolean;
  ForecastingTypeId: string | null;
};

type ParentReferences$ForecastingOwnerAdjustment = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingItem: SObjectDefinition$ForecastingItem;
  Period: SObjectDefinition$Period | null;
  ForecastOwner: SObjectDefinition$User | null;
  ForecastingType: SObjectDefinition$ForecastingType | null;
};

type ChildRelationships$ForecastingOwnerAdjustment = {
  //
};

interface SObjectDefinition$ForecastingOwnerAdjustment extends SObjectDefinition<'ForecastingOwnerAdjustment'> {
    Name: 'ForecastingOwnerAdjustment';
    Fields: Fields$ForecastingOwnerAdjustment;
    ParentReferences: ParentReferences$ForecastingOwnerAdjustment;
    ChildRelationships: ChildRelationships$ForecastingOwnerAdjustment;
  }

type Fields$ForecastingQuota = {
  //
  Id: string;
  PeriodId: string | null;
  StartDate: DateString;
  ProductFamily: string | null;
  QuotaAmount: number;
  QuotaQuantity: number;
  QuotaOwnerId: string;
  IsQuantity: boolean;
  IsAmount: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
};

type ParentReferences$ForecastingQuota = {
  //
  QuotaOwner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingQuota = {
  //
};

interface SObjectDefinition$ForecastingQuota extends SObjectDefinition<'ForecastingQuota'> {
    Name: 'ForecastingQuota';
    Fields: Fields$ForecastingQuota;
    ParentReferences: ParentReferences$ForecastingQuota;
    ChildRelationships: ChildRelationships$ForecastingQuota;
  }

type Fields$ForecastingShare = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserOrGroupId: string;
  SharedForecastManagerRoleId: string;
  AccessLevel: string;
  RoleType: string;
};

type ParentReferences$ForecastingShare = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserOrGroup: SObjectDefinition$User;
  SharedForecastManagerRole: SObjectDefinition$UserRole;
};

type ChildRelationships$ForecastingShare = {
  //
};

interface SObjectDefinition$ForecastingShare extends SObjectDefinition<'ForecastingShare'> {
    Name: 'ForecastingShare';
    Fields: Fields$ForecastingShare;
    ParentReferences: ParentReferences$ForecastingShare;
    ChildRelationships: ChildRelationships$ForecastingShare;
  }

type Fields$ForecastingSourceDefinition = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SourceObject: string | null;
  MeasureField: string | null;
  DateField: string | null;
  UserField: string | null;
  Territory2Field: string | null;
  CategoryField: string | null;
  FamilyField: string | null;
};

type ParentReferences$ForecastingSourceDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingSourceDefinition = {
  //
};

interface SObjectDefinition$ForecastingSourceDefinition extends SObjectDefinition<'ForecastingSourceDefinition'> {
    Name: 'ForecastingSourceDefinition';
    Fields: Fields$ForecastingSourceDefinition;
    ParentReferences: ParentReferences$ForecastingSourceDefinition;
    ChildRelationships: ChildRelationships$ForecastingSourceDefinition;
  }

type Fields$ForecastingType = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsActive: boolean;
  IsQuantity: boolean;
  IsAmount: boolean;
  CanDisplayQuotas: boolean;
  HasProductFamily: boolean;
  RoleType: string;
  DateType: string | null;
  IsPlatformType: boolean;
};

type ParentReferences$ForecastingType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingType = {
  //
};

interface SObjectDefinition$ForecastingType extends SObjectDefinition<'ForecastingType'> {
    Name: 'ForecastingType';
    Fields: Fields$ForecastingType;
    ParentReferences: ParentReferences$ForecastingType;
    ChildRelationships: ChildRelationships$ForecastingType;
  }

type Fields$ForecastingTypeSource = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  ForecastingSourceDefinitionId: string;
  SourceGroup: number;
};

type ParentReferences$ForecastingTypeSource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingType: SObjectDefinition$ForecastingType;
  ForecastingSourceDefinition: SObjectDefinition$ForecastingSourceDefinition;
};

type ChildRelationships$ForecastingTypeSource = {
  //
};

interface SObjectDefinition$ForecastingTypeSource extends SObjectDefinition<'ForecastingTypeSource'> {
    Name: 'ForecastingTypeSource';
    Fields: Fields$ForecastingTypeSource;
    ParentReferences: ParentReferences$ForecastingTypeSource;
    ChildRelationships: ChildRelationships$ForecastingTypeSource;
  }

type Fields$ForecastingTypeToCategory = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  ForecastingItemCategory: string;
  DisplayPosition: number | null;
  IsAdjustable: boolean;
  IsOwnerAdjustable: boolean;
};

type ParentReferences$ForecastingTypeToCategory = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingTypeToCategory = {
  //
};

interface SObjectDefinition$ForecastingTypeToCategory extends SObjectDefinition<'ForecastingTypeToCategory'> {
    Name: 'ForecastingTypeToCategory';
    Fields: Fields$ForecastingTypeToCategory;
    ParentReferences: ParentReferences$ForecastingTypeToCategory;
    ChildRelationships: ChildRelationships$ForecastingTypeToCategory;
  }

type Fields$ForecastingUserPreference = {
  //
  Id: string;
  ExternalId: string | null;
  ForecastingStartPeriod: number | null;
  ForecastingPeriodDuration: number | null;
  ForecastingPeriodType: string | null;
  ForecastingDisplayedTypeId: string;
  ForecastingViewCurrency: string | null;
  IsHideForecastingGuidedTour: boolean;
  IsShowForecastingQuotaAttainment: boolean;
  IsHideForecastingQuotaColumn: boolean;
  IsForecastingShowQuantity: boolean;
  IsForecastingHideZeroRows: boolean;
};

type ParentReferences$ForecastingUserPreference = {
  //
  ForecastingDisplayedType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingUserPreference = {
  //
};

interface SObjectDefinition$ForecastingUserPreference extends SObjectDefinition<'ForecastingUserPreference'> {
    Name: 'ForecastingUserPreference';
    Fields: Fields$ForecastingUserPreference;
    ParentReferences: ParentReferences$ForecastingUserPreference;
    ChildRelationships: ChildRelationships$ForecastingUserPreference;
  }

type Fields$FormulaFunction = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  Label: string | null;
  CategoryId: string | null;
  Description: string | null;
  ExampleString: string | null;
};

type ParentReferences$FormulaFunction = {
  //
};

type ChildRelationships$FormulaFunction = {
  //
  Types: SObjectDefinition$FormulaFunctionAllowedType;
};

interface SObjectDefinition$FormulaFunction extends SObjectDefinition<'FormulaFunction'> {
    Name: 'FormulaFunction';
    Fields: Fields$FormulaFunction;
    ParentReferences: ParentReferences$FormulaFunction;
    ChildRelationships: ChildRelationships$FormulaFunction;
  }

type Fields$FormulaFunctionAllowedType = {
  //
  Id: string;
  DurableId: string | null;
  FunctionId: string | null;
  Type: string | null;
};

type ParentReferences$FormulaFunctionAllowedType = {
  //
};

type ChildRelationships$FormulaFunctionAllowedType = {
  //
};

interface SObjectDefinition$FormulaFunctionAllowedType extends SObjectDefinition<'FormulaFunctionAllowedType'> {
    Name: 'FormulaFunctionAllowedType';
    Fields: Fields$FormulaFunctionAllowedType;
    ParentReferences: ParentReferences$FormulaFunctionAllowedType;
    ChildRelationships: ChildRelationships$FormulaFunctionAllowedType;
  }

type Fields$FormulaFunctionCategory = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  Label: string | null;
};

type ParentReferences$FormulaFunctionCategory = {
  //
};

type ChildRelationships$FormulaFunctionCategory = {
  //
  Functions: SObjectDefinition$FormulaFunction;
};

interface SObjectDefinition$FormulaFunctionCategory extends SObjectDefinition<'FormulaFunctionCategory'> {
    Name: 'FormulaFunctionCategory';
    Fields: Fields$FormulaFunctionCategory;
    ParentReferences: ParentReferences$FormulaFunctionCategory;
    ChildRelationships: ChildRelationships$FormulaFunctionCategory;
  }

type Fields$Group = {
  //
  Id: string;
  Name: string;
  DeveloperName: string | null;
  RelatedId: string | null;
  Type: string;
  Email: string | null;
  QueueRoutingConfigId: string | null;
  OwnerId: string;
  DoesSendEmailToMembers: boolean;
  DoesIncludeBosses: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Group = {
  //
  Related: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Group = {
  //
  GroupMembers: SObjectDefinition$GroupMember;
  QueueSobjects: SObjectDefinition$QueueSobject;
  DelegatedUsers: SObjectDefinition$User;
};

interface SObjectDefinition$Group extends SObjectDefinition<'Group'> {
    Name: 'Group';
    Fields: Fields$Group;
    ParentReferences: ParentReferences$Group;
    ChildRelationships: ChildRelationships$Group;
  }

type Fields$GroupMember = {
  //
  Id: string;
  GroupId: string;
  UserOrGroupId: string;
  SystemModstamp: DateString;
};

type ParentReferences$GroupMember = {
  //
  Group: SObjectDefinition$Group;
  UserOrGroup: SObjectDefinition$Name;
};

type ChildRelationships$GroupMember = {
  //
};

interface SObjectDefinition$GroupMember extends SObjectDefinition<'GroupMember'> {
    Name: 'GroupMember';
    Fields: Fields$GroupMember;
    ParentReferences: ParentReferences$GroupMember;
    ChildRelationships: ChildRelationships$GroupMember;
  }

type Fields$Holiday = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  IsAllDay: boolean;
  ActivityDate: DateString | null;
  StartTimeInMinutes: number | null;
  EndTimeInMinutes: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsRecurrence: boolean;
  RecurrenceStartDate: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
};

type ParentReferences$Holiday = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Holiday = {
  //
};

interface SObjectDefinition$Holiday extends SObjectDefinition<'Holiday'> {
    Name: 'Holiday';
    Fields: Fields$Holiday;
    ParentReferences: ParentReferences$Holiday;
    ChildRelationships: ChildRelationships$Holiday;
  }

type Fields$IPA_Elenco_Pec__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Cod_amm__c: string | null;
  External_Key__c: string | null;
  Mail__c: string | null;
  Data_cancellazione_pec__c: DateString | null;
  Non_Presente_su_Ipa__c: boolean;
};

type ParentReferences$IPA_Elenco_Pec__ChangeEvent = {
  //
};

type ChildRelationships$IPA_Elenco_Pec__ChangeEvent = {
  //
};

interface SObjectDefinition$IPA_Elenco_Pec__ChangeEvent extends SObjectDefinition<'IPA_Elenco_Pec__ChangeEvent'> {
    Name: 'IPA_Elenco_Pec__ChangeEvent';
    Fields: Fields$IPA_Elenco_Pec__ChangeEvent;
    ParentReferences: ParentReferences$IPA_Elenco_Pec__ChangeEvent;
    ChildRelationships: ChildRelationships$IPA_Elenco_Pec__ChangeEvent;
  }

type Fields$IPA_Elenco_Pec__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$IPA_Elenco_Pec__Share = {
  //
  Parent: SObjectDefinition$IPA_Elenco_Pec__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IPA_Elenco_Pec__Share = {
  //
};

interface SObjectDefinition$IPA_Elenco_Pec__Share extends SObjectDefinition<'IPA_Elenco_Pec__Share'> {
    Name: 'IPA_Elenco_Pec__Share';
    Fields: Fields$IPA_Elenco_Pec__Share;
    ParentReferences: ParentReferences$IPA_Elenco_Pec__Share;
    ChildRelationships: ChildRelationships$IPA_Elenco_Pec__Share;
  }

type Fields$IPA_Elenco_Pec__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Cod_amm__c: string | null;
  External_Key__c: string | null;
  Mail__c: string | null;
  Data_cancellazione_pec__c: DateString | null;
  Non_Presente_su_Ipa__c: boolean;
};

type ParentReferences$IPA_Elenco_Pec__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IPA_Elenco_Pec__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$IPA_Elenco_Pec__Share;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$IPA_Elenco_Pec__c extends SObjectDefinition<'IPA_Elenco_Pec__c'> {
    Name: 'IPA_Elenco_Pec__c';
    Fields: Fields$IPA_Elenco_Pec__c;
    ParentReferences: ParentReferences$IPA_Elenco_Pec__c;
    ChildRelationships: ChildRelationships$IPA_Elenco_Pec__c;
  }

type Fields$IconDefinition = {
  //
  Id: string;
  DurableId: string | null;
  TabDefinitionId: string | null;
  Url: string | null;
  ContentType: string | null;
  Theme: string | null;
  Height: number | null;
  Width: number | null;
};

type ParentReferences$IconDefinition = {
  //
};

type ChildRelationships$IconDefinition = {
  //
};

interface SObjectDefinition$IconDefinition extends SObjectDefinition<'IconDefinition'> {
    Name: 'IconDefinition';
    Fields: Fields$IconDefinition;
    ParentReferences: ParentReferences$IconDefinition;
    ChildRelationships: ChildRelationships$IconDefinition;
  }

type Fields$Idea = {
  //
  Id: string;
  IsDeleted: boolean;
  Title: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CommunityId: string;
  Body: string | null;
  NumComments: number | null;
  VoteScore: number | null;
  VoteTotal: number | null;
  Categories: string | null;
  Status: string | null;
  LastCommentDate: DateString | null;
  LastCommentId: string | null;
  ParentIdeaId: string | null;
  IsHtml: boolean;
  IsMerged: boolean;
  CreatorFullPhotoUrl: string | null;
  CreatorSmallPhotoUrl: string | null;
  CreatorName: string | null;
};

type ParentReferences$Idea = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Community: SObjectDefinition$Community;
  LastComment: SObjectDefinition$IdeaComment | null;
  ParentIdea: SObjectDefinition$Idea | null;
};

type ChildRelationships$Idea = {
  //
  Comments: SObjectDefinition$IdeaComment;
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$Idea extends SObjectDefinition<'Idea'> {
    Name: 'Idea';
    Fields: Fields$Idea;
    ParentReferences: ParentReferences$Idea;
    ChildRelationships: ChildRelationships$Idea;
  }

type Fields$IdeaComment = {
  //
  Id: string;
  IdeaId: string;
  CommunityId: string | null;
  CommentBody: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  IsHtml: boolean;
  CreatorFullPhotoUrl: string | null;
  CreatorSmallPhotoUrl: string | null;
  CreatorName: string | null;
  UpVotes: number | null;
};

type ParentReferences$IdeaComment = {
  //
  Idea: SObjectDefinition$Idea;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$IdeaComment = {
  //
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$IdeaComment extends SObjectDefinition<'IdeaComment'> {
    Name: 'IdeaComment';
    Fields: Fields$IdeaComment;
    ParentReferences: ParentReferences$IdeaComment;
    ChildRelationships: ChildRelationships$IdeaComment;
  }

type Fields$IframeWhiteListUrl = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Url: string | null;
  Context: string;
};

type ParentReferences$IframeWhiteListUrl = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IframeWhiteListUrl = {
  //
};

interface SObjectDefinition$IframeWhiteListUrl extends SObjectDefinition<'IframeWhiteListUrl'> {
    Name: 'IframeWhiteListUrl';
    Fields: Fields$IframeWhiteListUrl;
    ParentReferences: ParentReferences$IframeWhiteListUrl;
    ChildRelationships: ChildRelationships$IframeWhiteListUrl;
  }

type Fields$Image = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ImageViewType: string | null;
  IsActive: boolean;
  ImageClass: string | null;
  ImageClassObjectType: string | null;
  ContentDocumentId: string | null;
  CapturedAngle: string | null;
  Title: string | null;
  AlternateText: string | null;
  Url: string | null;
};

type ParentReferences$Image = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument | null;
};

type ChildRelationships$Image = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$ImageShare;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Image extends SObjectDefinition<'Image'> {
    Name: 'Image';
    Fields: Fields$Image;
    ParentReferences: ParentReferences$Image;
    ChildRelationships: ChildRelationships$Image;
  }

type Fields$ImageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ImageShare = {
  //
  Parent: SObjectDefinition$Image;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ImageShare = {
  //
};

interface SObjectDefinition$ImageShare extends SObjectDefinition<'ImageShare'> {
    Name: 'ImageShare';
    Fields: Fields$ImageShare;
    ParentReferences: ParentReferences$ImageShare;
    ChildRelationships: ChildRelationships$ImageShare;
  }

type Fields$Individual = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  LastName: string;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  HasOptedOutTracking: boolean;
  HasOptedOutProfiling: boolean;
  HasOptedOutProcessing: boolean;
  HasOptedOutSolicit: boolean;
  ShouldForget: boolean;
  SendIndividualData: boolean;
  CanStorePiiElsewhere: boolean;
  HasOptedOutGeoTracking: boolean;
  BirthDate: DateString | null;
  DeathDate: DateString | null;
  ConvictionsCount: number | null;
  ChildrenCount: number | null;
  MilitaryService: string | null;
  IsHomeOwner: boolean;
  Occupation: string | null;
  Website: string | null;
  IndividualsAge: string | null;
  LastViewedDate: DateString | null;
  MasterRecordId: string | null;
  ConsumerCreditScore: number | null;
  ConsumerCreditScoreProviderName: string | null;
  InfluencerRating: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Individual = {
  //
  Owner: SObjectDefinition$User;
  MasterRecord: SObjectDefinition$Individual | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Individual = {
  //
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Contacts: SObjectDefinition$Contact;
  ContactPointAddresses: SObjectDefinition$ContactPointAddress;
  ContactPointEmails: SObjectDefinition$ContactPointEmail;
  ContactPointPhones: SObjectDefinition$ContactPointPhone;
  Individuals: SObjectDefinition$ContactPointTypeConsent;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Histories: SObjectDefinition$IndividualHistory;
  Shares: SObjectDefinition$IndividualShare;
  Leads: SObjectDefinition$Lead;
  PartyConsents: SObjectDefinition$PartyConsent;
};

interface SObjectDefinition$Individual extends SObjectDefinition<'Individual'> {
    Name: 'Individual';
    Fields: Fields$Individual;
    ParentReferences: ParentReferences$Individual;
    ChildRelationships: ChildRelationships$Individual;
  }

type Fields$IndividualApplication = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string | null;
  ApplicationCaseId: string | null;
  Description: string | null;
  AppliedDate: DateString | null;
  ApprovedDate: DateString | null;
  PaymentDate: DateString | null;
  RequirementsCompleteDate: DateString | null;
  AmountPaid: number | null;
  LicensePermitNameId: string | null;
  BusinessTypeId: string | null;
  LicenseTypeId: string | null;
  Category: string;
  ApplicationCategory: string | null;
  Status: string | null;
  ApplicationType: string | null;
  WasReturned: boolean;
  SavedApplicationRefId: string | null;
};

type ParentReferences$IndividualApplication = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account | null;
  ApplicationCase: SObjectDefinition$Case | null;
  LicensePermitName: SObjectDefinition$BusinessLicense | null;
  BusinessType: SObjectDefinition$BusinessType | null;
  LicenseType: SObjectDefinition$RegulatoryAuthorizationType | null;
  SavedApplicationRef: SObjectDefinition$PreliminaryApplicationRef | null;
};

type ChildRelationships$IndividualApplication = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthRegApplication: SObjectDefinition$AuthApplicationAsset;
  RegAuthApplication: SObjectDefinition$AuthApplicationPlace;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Feeds: SObjectDefinition$IndividualApplicationFeed;
  Histories: SObjectDefinition$IndividualApplicationHistory;
  Shares: SObjectDefinition$IndividualApplicationShare;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$IndividualApplication extends SObjectDefinition<'IndividualApplication'> {
    Name: 'IndividualApplication';
    Fields: Fields$IndividualApplication;
    ParentReferences: ParentReferences$IndividualApplication;
    ChildRelationships: ChildRelationships$IndividualApplication;
  }

type Fields$IndividualApplicationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$IndividualApplicationFeed = {
  //
  Parent: SObjectDefinition$IndividualApplication;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$IndividualApplicationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$IndividualApplicationFeed extends SObjectDefinition<'IndividualApplicationFeed'> {
    Name: 'IndividualApplicationFeed';
    Fields: Fields$IndividualApplicationFeed;
    ParentReferences: ParentReferences$IndividualApplicationFeed;
    ChildRelationships: ChildRelationships$IndividualApplicationFeed;
  }

type Fields$IndividualApplicationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  IndividualApplicationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$IndividualApplicationHistory = {
  //
  IndividualApplication: SObjectDefinition$IndividualApplication;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$IndividualApplicationHistory = {
  //
};

interface SObjectDefinition$IndividualApplicationHistory extends SObjectDefinition<'IndividualApplicationHistory'> {
    Name: 'IndividualApplicationHistory';
    Fields: Fields$IndividualApplicationHistory;
    ParentReferences: ParentReferences$IndividualApplicationHistory;
    ChildRelationships: ChildRelationships$IndividualApplicationHistory;
  }

type Fields$IndividualApplicationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$IndividualApplicationShare = {
  //
  Parent: SObjectDefinition$IndividualApplication;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IndividualApplicationShare = {
  //
};

interface SObjectDefinition$IndividualApplicationShare extends SObjectDefinition<'IndividualApplicationShare'> {
    Name: 'IndividualApplicationShare';
    Fields: Fields$IndividualApplicationShare;
    ParentReferences: ParentReferences$IndividualApplicationShare;
    ChildRelationships: ChildRelationships$IndividualApplicationShare;
  }

type Fields$IndividualChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  HasOptedOutTracking: boolean;
  HasOptedOutProfiling: boolean;
  HasOptedOutProcessing: boolean;
  HasOptedOutSolicit: boolean;
  ShouldForget: boolean;
  SendIndividualData: boolean;
  CanStorePiiElsewhere: boolean;
  HasOptedOutGeoTracking: boolean;
  BirthDate: DateString | null;
  DeathDate: DateString | null;
  ConvictionsCount: number | null;
  ChildrenCount: number | null;
  MilitaryService: string | null;
  IsHomeOwner: boolean;
  Occupation: string | null;
  Website: string | null;
  IndividualsAge: string | null;
  ConsumerCreditScore: number | null;
  ConsumerCreditScoreProviderName: string | null;
  InfluencerRating: number | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$IndividualChangeEvent = {
  //
};

type ChildRelationships$IndividualChangeEvent = {
  //
};

interface SObjectDefinition$IndividualChangeEvent extends SObjectDefinition<'IndividualChangeEvent'> {
    Name: 'IndividualChangeEvent';
    Fields: Fields$IndividualChangeEvent;
    ParentReferences: ParentReferences$IndividualChangeEvent;
    ChildRelationships: ChildRelationships$IndividualChangeEvent;
  }

type Fields$IndividualHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  IndividualId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$IndividualHistory = {
  //
  Individual: SObjectDefinition$Individual;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$IndividualHistory = {
  //
};

interface SObjectDefinition$IndividualHistory extends SObjectDefinition<'IndividualHistory'> {
    Name: 'IndividualHistory';
    Fields: Fields$IndividualHistory;
    ParentReferences: ParentReferences$IndividualHistory;
    ChildRelationships: ChildRelationships$IndividualHistory;
  }

type Fields$IndividualShare = {
  //
  Id: string;
  IndividualId: string;
  UserOrGroupId: string;
  IndividualAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$IndividualShare = {
  //
  Individual: SObjectDefinition$Individual;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IndividualShare = {
  //
};

interface SObjectDefinition$IndividualShare extends SObjectDefinition<'IndividualShare'> {
    Name: 'IndividualShare';
    Fields: Fields$IndividualShare;
    ParentReferences: ParentReferences$IndividualShare;
    ChildRelationships: ChildRelationships$IndividualShare;
  }

type Fields$InspectionType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
};

type ParentReferences$InspectionType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$InspectionType = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Feeds: SObjectDefinition$InspectionTypeFeed;
  Histories: SObjectDefinition$InspectionTypeHistory;
  Shares: SObjectDefinition$InspectionTypeShare;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$InspectionType extends SObjectDefinition<'InspectionType'> {
    Name: 'InspectionType';
    Fields: Fields$InspectionType;
    ParentReferences: ParentReferences$InspectionType;
    ChildRelationships: ChildRelationships$InspectionType;
  }

type Fields$InspectionTypeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$InspectionTypeFeed = {
  //
  Parent: SObjectDefinition$InspectionType;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$InspectionTypeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$InspectionTypeFeed extends SObjectDefinition<'InspectionTypeFeed'> {
    Name: 'InspectionTypeFeed';
    Fields: Fields$InspectionTypeFeed;
    ParentReferences: ParentReferences$InspectionTypeFeed;
    ChildRelationships: ChildRelationships$InspectionTypeFeed;
  }

type Fields$InspectionTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  InspectionTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$InspectionTypeHistory = {
  //
  InspectionType: SObjectDefinition$InspectionType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$InspectionTypeHistory = {
  //
};

interface SObjectDefinition$InspectionTypeHistory extends SObjectDefinition<'InspectionTypeHistory'> {
    Name: 'InspectionTypeHistory';
    Fields: Fields$InspectionTypeHistory;
    ParentReferences: ParentReferences$InspectionTypeHistory;
    ChildRelationships: ChildRelationships$InspectionTypeHistory;
  }

type Fields$InspectionTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$InspectionTypeShare = {
  //
  Parent: SObjectDefinition$InspectionType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$InspectionTypeShare = {
  //
};

interface SObjectDefinition$InspectionTypeShare extends SObjectDefinition<'InspectionTypeShare'> {
    Name: 'InspectionTypeShare';
    Fields: Fields$InspectionTypeShare;
    ParentReferences: ParentReferences$InspectionTypeShare;
    ChildRelationships: ChildRelationships$InspectionTypeShare;
  }

type Fields$InstalledMobileApp = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Status: string;
  UserId: string;
  ConnectedApplicationId: string;
  Version: string | null;
};

type ParentReferences$InstalledMobileApp = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  ConnectedApplication: SObjectDefinition$ConnectedApplication;
};

type ChildRelationships$InstalledMobileApp = {
  //
};

interface SObjectDefinition$InstalledMobileApp extends SObjectDefinition<'InstalledMobileApp'> {
    Name: 'InstalledMobileApp';
    Fields: Fields$InstalledMobileApp;
    ParentReferences: ParentReferences$InstalledMobileApp;
    ChildRelationships: ChildRelationships$InstalledMobileApp;
  }

type Fields$JournalType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ProcessType: string;
  Description: string | null;
};

type ParentReferences$JournalType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$JournalType = {
  //
  Histories: SObjectDefinition$JournalTypeHistory;
  Shares: SObjectDefinition$JournalTypeShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  JournalType: SObjectDefinition$TransactionJournal;
};

interface SObjectDefinition$JournalType extends SObjectDefinition<'JournalType'> {
    Name: 'JournalType';
    Fields: Fields$JournalType;
    ParentReferences: ParentReferences$JournalType;
    ChildRelationships: ChildRelationships$JournalType;
  }

type Fields$JournalTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  JournalTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$JournalTypeHistory = {
  //
  JournalType: SObjectDefinition$JournalType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$JournalTypeHistory = {
  //
};

interface SObjectDefinition$JournalTypeHistory extends SObjectDefinition<'JournalTypeHistory'> {
    Name: 'JournalTypeHistory';
    Fields: Fields$JournalTypeHistory;
    ParentReferences: ParentReferences$JournalTypeHistory;
    ChildRelationships: ChildRelationships$JournalTypeHistory;
  }

type Fields$JournalTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$JournalTypeShare = {
  //
  Parent: SObjectDefinition$JournalType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$JournalTypeShare = {
  //
};

interface SObjectDefinition$JournalTypeShare extends SObjectDefinition<'JournalTypeShare'> {
    Name: 'JournalTypeShare';
    Fields: Fields$JournalTypeShare;
    ParentReferences: ParentReferences$JournalTypeShare;
    ChildRelationships: ChildRelationships$JournalTypeShare;
  }

type Fields$Junction_Server_Case__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Case__c: string | null;
  Servizio_Richiesta__c: string | null;
  containsCaseCol__c: boolean;
  emptyCell__c: boolean;
  fieldNAN__c: boolean;
  mv_identificativo_mv__c: string | null;
  mv_n_vcpu__c: string | null;
  mv_ragione_sociale__c: string | null;
  mv_storage__c: string | null;
  mv_vram__c: string | null;
  sf_identificativo_dc__c: string | null;
  sf_marca__c: string | null;
  sf_modello__c: string | null;
  sf_serial_number__c: string | null;
  tipologia__c: string | null;
  Nome_Servizio_Piano_di_Migrazione__c: string | null;
};

type ParentReferences$Junction_Server_Case__ChangeEvent = {
  //
};

type ChildRelationships$Junction_Server_Case__ChangeEvent = {
  //
};

interface SObjectDefinition$Junction_Server_Case__ChangeEvent extends SObjectDefinition<'Junction_Server_Case__ChangeEvent'> {
    Name: 'Junction_Server_Case__ChangeEvent';
    Fields: Fields$Junction_Server_Case__ChangeEvent;
    ParentReferences: ParentReferences$Junction_Server_Case__ChangeEvent;
    ChildRelationships: ChildRelationships$Junction_Server_Case__ChangeEvent;
  }

type Fields$Junction_Server_Case__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Junction_Server_Case__Share = {
  //
  Parent: SObjectDefinition$Junction_Server_Case__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Junction_Server_Case__Share = {
  //
};

interface SObjectDefinition$Junction_Server_Case__Share extends SObjectDefinition<'Junction_Server_Case__Share'> {
    Name: 'Junction_Server_Case__Share';
    Fields: Fields$Junction_Server_Case__Share;
    ParentReferences: ParentReferences$Junction_Server_Case__Share;
    ChildRelationships: ChildRelationships$Junction_Server_Case__Share;
  }

type Fields$Junction_Server_Case__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Case__c: string | null;
  Servizio_Richiesta__c: string | null;
  containsCaseCol__c: boolean;
  emptyCell__c: boolean;
  fieldNAN__c: boolean;
  mv_identificativo_mv__c: string | null;
  mv_n_vcpu__c: string | null;
  mv_ragione_sociale__c: string | null;
  mv_storage__c: string | null;
  mv_vram__c: string | null;
  sf_identificativo_dc__c: string | null;
  sf_marca__c: string | null;
  sf_modello__c: string | null;
  sf_serial_number__c: string | null;
  tipologia__c: string | null;
  Nome_Servizio_Piano_di_Migrazione__c: string | null;
};

type ParentReferences$Junction_Server_Case__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Case__r: SObjectDefinition$Case | null;
  Servizio_Richiesta__r: SObjectDefinition$Servizio_Richiesta__c | null;
};

type ChildRelationships$Junction_Server_Case__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$Junction_Server_Case__Share;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Junction_Server_Case__c extends SObjectDefinition<'Junction_Server_Case__c'> {
    Name: 'Junction_Server_Case__c';
    Fields: Fields$Junction_Server_Case__c;
    ParentReferences: ParentReferences$Junction_Server_Case__c;
    ChildRelationships: ChildRelationships$Junction_Server_Case__c;
  }

type Fields$KnowledgeArticle = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ArticleNumber: string;
  ArchivedDate: DateString | null;
  ArchivedById: string | null;
  FirstPublishedDate: DateString | null;
  LastPublishedDate: DateString | null;
  CaseAssociationCount: number;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  MigratedToFromArticle: string | null;
  TotalViewCount: number | null;
};

type ParentReferences$KnowledgeArticle = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$KnowledgeArticle = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CaseArticles: SObjectDefinition$CaseArticle;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  VersionHistories: SObjectDefinition$KnowledgeArticleVersionHistory;
  ViewStats: SObjectDefinition$KnowledgeArticleViewStat;
  VoteStats: SObjectDefinition$KnowledgeArticleVoteStat;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$KnowledgeArticle extends SObjectDefinition<'KnowledgeArticle'> {
    Name: 'KnowledgeArticle';
    Fields: Fields$KnowledgeArticle;
    ParentReferences: ParentReferences$KnowledgeArticle;
    ChildRelationships: ChildRelationships$KnowledgeArticle;
  }

type Fields$KnowledgeArticleVersion = {
  //
  Id: string;
  KnowledgeArticleId: string;
  OwnerId: string;
  IsDeleted: boolean;
  ValidationStatus: string;
  PublishStatus: string;
  VersionNumber: number;
  IsLatestVersion: boolean;
  IsVisibleInApp: boolean;
  IsVisibleInPkb: boolean;
  IsVisibleInCsp: boolean;
  IsVisibleInPrm: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Language: string;
  Title: string;
  UrlName: string;
  ArchivedDate: DateString | null;
  ArchivedById: string | null;
  Summary: string | null;
  ArticleNumber: string;
  FirstPublishedDate: DateString | null;
  LastPublishedDate: DateString | null;
  ArticleArchivedById: string | null;
  ArticleArchivedDate: DateString | null;
  ArticleCaseAttachCount: number | null;
  ArticleCreatedById: string | null;
  ArticleCreatedDate: DateString | null;
  ArticleTotalViewCount: number | null;
  SourceId: string | null;
  AssignedToId: string | null;
  AssignedById: string | null;
  AssignmentDate: DateString | null;
  AssignmentDueDate: DateString | null;
  AssignmentNote: string | null;
  MigratedToFromArticleVersion: string | null;
};

type ParentReferences$KnowledgeArticleVersion = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ArchivedBy: SObjectDefinition$User | null;
  ArticleArchivedBy: SObjectDefinition$User | null;
  ArticleCreatedBy: SObjectDefinition$User | null;
  AssignedTo: SObjectDefinition$Name | null;
  AssignedBy: SObjectDefinition$User | null;
};

type ChildRelationships$KnowledgeArticleVersion = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CaseArticles: SObjectDefinition$CaseArticle;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$KnowledgeArticleVersion extends SObjectDefinition<'KnowledgeArticleVersion'> {
    Name: 'KnowledgeArticleVersion';
    Fields: Fields$KnowledgeArticleVersion;
    ParentReferences: ParentReferences$KnowledgeArticleVersion;
    ChildRelationships: ChildRelationships$KnowledgeArticleVersion;
  }

type Fields$KnowledgeArticleVersionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Language: string;
  VersionNumber: number;
  ParentSobjectType: string;
  CreatedById: string;
  CreatedDate: DateString;
  EventType: string;
  FieldName: string | null;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
  VersionId: string | null;
};

type ParentReferences$KnowledgeArticleVersionHistory = {
  //
  Parent: SObjectDefinition$KnowledgeArticle;
  CreatedBy: SObjectDefinition$User;
  Version: SObjectDefinition$Knowledge__kav | null;
};

type ChildRelationships$KnowledgeArticleVersionHistory = {
  //
};

interface SObjectDefinition$KnowledgeArticleVersionHistory extends SObjectDefinition<'KnowledgeArticleVersionHistory'> {
    Name: 'KnowledgeArticleVersionHistory';
    Fields: Fields$KnowledgeArticleVersionHistory;
    ParentReferences: ParentReferences$KnowledgeArticleVersionHistory;
    ChildRelationships: ChildRelationships$KnowledgeArticleVersionHistory;
  }

type Fields$KnowledgeArticleViewStat = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  NormalizedScore: number | null;
  Channel: string;
  ViewCount: number;
};

type ParentReferences$KnowledgeArticleViewStat = {
  //
  Parent: SObjectDefinition$KnowledgeArticle;
};

type ChildRelationships$KnowledgeArticleViewStat = {
  //
};

interface SObjectDefinition$KnowledgeArticleViewStat extends SObjectDefinition<'KnowledgeArticleViewStat'> {
    Name: 'KnowledgeArticleViewStat';
    Fields: Fields$KnowledgeArticleViewStat;
    ParentReferences: ParentReferences$KnowledgeArticleViewStat;
    ChildRelationships: ChildRelationships$KnowledgeArticleViewStat;
  }

type Fields$KnowledgeArticleVoteStat = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  NormalizedScore: number | null;
  Channel: string;
};

type ParentReferences$KnowledgeArticleVoteStat = {
  //
  Parent: SObjectDefinition$KnowledgeArticle;
};

type ChildRelationships$KnowledgeArticleVoteStat = {
  //
};

interface SObjectDefinition$KnowledgeArticleVoteStat extends SObjectDefinition<'KnowledgeArticleVoteStat'> {
    Name: 'KnowledgeArticleVoteStat';
    Fields: Fields$KnowledgeArticleVoteStat;
    ParentReferences: ParentReferences$KnowledgeArticleVoteStat;
    ChildRelationships: ChildRelationships$KnowledgeArticleVoteStat;
  }

type Fields$Knowledge__DataCategorySelection = {
  //
  Id: string;
  ParentId: string;
  DataCategoryGroupName: string;
  DataCategoryName: string;
  CreatedDate: DateString;
  CreatedById: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
};

type ParentReferences$Knowledge__DataCategorySelection = {
  //
  Parent: SObjectDefinition$Knowledge__kav;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Knowledge__DataCategorySelection = {
  //
};

interface SObjectDefinition$Knowledge__DataCategorySelection extends SObjectDefinition<'Knowledge__DataCategorySelection'> {
    Name: 'Knowledge__DataCategorySelection';
    Fields: Fields$Knowledge__DataCategorySelection;
    ParentReferences: ParentReferences$Knowledge__DataCategorySelection;
    ChildRelationships: ChildRelationships$Knowledge__DataCategorySelection;
  }

type Fields$Knowledge__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$Knowledge__Feed = {
  //
  Parent: SObjectDefinition$Knowledge__ka;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$Knowledge__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$Knowledge__Feed extends SObjectDefinition<'Knowledge__Feed'> {
    Name: 'Knowledge__Feed';
    Fields: Fields$Knowledge__Feed;
    ParentReferences: ParentReferences$Knowledge__Feed;
    ChildRelationships: ChildRelationships$Knowledge__Feed;
  }

type Fields$Knowledge__ViewStat = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  NormalizedScore: number | null;
  Channel: string;
  ViewCount: number;
};

type ParentReferences$Knowledge__ViewStat = {
  //
  Parent: SObjectDefinition$Knowledge__ka;
};

type ChildRelationships$Knowledge__ViewStat = {
  //
};

interface SObjectDefinition$Knowledge__ViewStat extends SObjectDefinition<'Knowledge__ViewStat'> {
    Name: 'Knowledge__ViewStat';
    Fields: Fields$Knowledge__ViewStat;
    ParentReferences: ParentReferences$Knowledge__ViewStat;
    ChildRelationships: ChildRelationships$Knowledge__ViewStat;
  }

type Fields$Knowledge__VoteStat = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  NormalizedScore: number | null;
  Channel: string;
};

type ParentReferences$Knowledge__VoteStat = {
  //
  Parent: SObjectDefinition$Knowledge__ka;
};

type ChildRelationships$Knowledge__VoteStat = {
  //
};

interface SObjectDefinition$Knowledge__VoteStat extends SObjectDefinition<'Knowledge__VoteStat'> {
    Name: 'Knowledge__VoteStat';
    Fields: Fields$Knowledge__VoteStat;
    ParentReferences: ParentReferences$Knowledge__VoteStat;
    ChildRelationships: ChildRelationships$Knowledge__VoteStat;
  }

type Fields$Knowledge__ka = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ArticleNumber: string;
  ArchivedDate: DateString | null;
  ArchivedById: string | null;
  FirstPublishedDate: DateString | null;
  LastPublishedDate: DateString | null;
  CaseAssociationCount: number;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  MigratedToFromArticle: string | null;
  TotalViewCount: number | null;
};

type ParentReferences$Knowledge__ka = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Knowledge__ka = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CaseArticles: SObjectDefinition$CaseArticle;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Feeds: SObjectDefinition$Knowledge__Feed;
  ViewStats: SObjectDefinition$Knowledge__ViewStat;
  VoteStats: SObjectDefinition$Knowledge__VoteStat;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$Knowledge__ka extends SObjectDefinition<'Knowledge__ka'> {
    Name: 'Knowledge__ka';
    Fields: Fields$Knowledge__ka;
    ParentReferences: ParentReferences$Knowledge__ka;
    ChildRelationships: ChildRelationships$Knowledge__ka;
  }

type Fields$Knowledge__kav = {
  //
  Id: string;
  KnowledgeArticleId: string;
  OwnerId: string;
  IsDeleted: boolean;
  ValidationStatus: string;
  PublishStatus: string;
  VersionNumber: number;
  IsLatestVersion: boolean;
  IsVisibleInApp: boolean;
  IsVisibleInPkb: boolean;
  IsVisibleInCsp: boolean;
  IsVisibleInPrm: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Language: string;
  Title: string;
  UrlName: string;
  ArchivedDate: DateString | null;
  ArchivedById: string | null;
  Summary: string | null;
  ArticleNumber: string;
  FirstPublishedDate: DateString | null;
  LastPublishedDate: DateString | null;
  ArticleArchivedById: string | null;
  ArticleArchivedDate: DateString | null;
  ArticleCaseAttachCount: number | null;
  ArticleCreatedById: string | null;
  ArticleCreatedDate: DateString | null;
  ArticleTotalViewCount: number | null;
  SourceId: string | null;
  RecordTypeId: string | null;
  AssignedToId: string | null;
  AssignedById: string | null;
  AssignmentDate: DateString | null;
  AssignmentDueDate: DateString | null;
  AssignmentNote: string | null;
  MigratedToFromArticleVersion: string | null;
  Question__c: string | null;
  Answer__c: string | null;
  Procedure_Purpose__c: string | null;
  Procedure_Warnings__c: string | null;
  Procedure_Steps__c: string | null;
  Procedure_Audience__c: string | null;
};

type ParentReferences$Knowledge__kav = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ArchivedBy: SObjectDefinition$User | null;
  ArticleArchivedBy: SObjectDefinition$User | null;
  ArticleCreatedBy: SObjectDefinition$User | null;
  RecordType: SObjectDefinition$RecordType | null;
  AssignedTo: SObjectDefinition$Name | null;
  AssignedBy: SObjectDefinition$User | null;
};

type ChildRelationships$Knowledge__kav = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CaseArticles: SObjectDefinition$CaseArticle;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DataCategorySelections: SObjectDefinition$Knowledge__DataCategorySelection;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Knowledge__kav extends SObjectDefinition<'Knowledge__kav'> {
    Name: 'Knowledge__kav';
    Fields: Fields$Knowledge__kav;
    ParentReferences: ParentReferences$Knowledge__kav;
    ChildRelationships: ChildRelationships$Knowledge__kav;
  }

type Fields$KnowledgeableUser = {
  //
  Id: string;
  NetworkId: string | null;
  UserId: string;
  TopicId: string;
  RawRank: number | null;
  SystemModstamp: DateString;
};

type ParentReferences$KnowledgeableUser = {
  //
};

type ChildRelationships$KnowledgeableUser = {
  //
};

interface SObjectDefinition$KnowledgeableUser extends SObjectDefinition<'KnowledgeableUser'> {
    Name: 'KnowledgeableUser';
    Fields: Fields$KnowledgeableUser;
    ParentReferences: ParentReferences$KnowledgeableUser;
    ChildRelationships: ChildRelationships$KnowledgeableUser;
  }

type Fields$Lead = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  LastName: string;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  Title: string | null;
  Company: string;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Phone: string | null;
  MobilePhone: string | null;
  Email: string | null;
  Website: string | null;
  PhotoUrl: string | null;
  LeadSource: string | null;
  Status: string;
  Industry: string | null;
  Rating: string | null;
  NumberOfEmployees: number | null;
  OwnerId: string;
  IsConverted: boolean;
  ConvertedDate: DateString | null;
  ConvertedAccountId: string | null;
  ConvertedContactId: string | null;
  ConvertedOpportunityId: string | null;
  IsUnreadByOwner: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  IndividualId: string | null;
};

type ParentReferences$Lead = {
  //
  MasterRecord: SObjectDefinition$Lead | null;
  Owner: SObjectDefinition$Name;
  ConvertedAccount: SObjectDefinition$Account | null;
  ConvertedContact: SObjectDefinition$Contact | null;
  ConvertedOpportunity: SObjectDefinition$Opportunity | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Individual: SObjectDefinition$Individual | null;
};

type ChildRelationships$Lead = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  CampaignMembers: SObjectDefinition$CampaignMember;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  EmailStatuses: SObjectDefinition$EmailStatus;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  EventWhoRelations: SObjectDefinition$EventWhoRelation;
  Feeds: SObjectDefinition$LeadFeed;
  Histories: SObjectDefinition$LeadHistory;
  Shares: SObjectDefinition$LeadShare;
  ListEmailIndividualRecipients: SObjectDefinition$ListEmailIndividualRecipient;
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Personas: SObjectDefinition$SocialPersona;
  Posts: SObjectDefinition$SocialPost;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TaskWhoRelations: SObjectDefinition$TaskWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
  PersonRecord: SObjectDefinition$UserEmailPreferredPerson;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Lead extends SObjectDefinition<'Lead'> {
    Name: 'Lead';
    Fields: Fields$Lead;
    ParentReferences: ParentReferences$Lead;
    ChildRelationships: ChildRelationships$Lead;
  }

type Fields$LeadChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  Title: string | null;
  Company: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Phone: string | null;
  MobilePhone: string | null;
  Email: string | null;
  Website: string | null;
  LeadSource: string | null;
  Status: string | null;
  Industry: string | null;
  Rating: string | null;
  NumberOfEmployees: number | null;
  OwnerId: string | null;
  IsConverted: boolean;
  ConvertedDate: DateString | null;
  ConvertedAccountId: string | null;
  ConvertedContactId: string | null;
  ConvertedOpportunityId: string | null;
  IsUnreadByOwner: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  IndividualId: string | null;
};

type ParentReferences$LeadChangeEvent = {
  //
};

type ChildRelationships$LeadChangeEvent = {
  //
};

interface SObjectDefinition$LeadChangeEvent extends SObjectDefinition<'LeadChangeEvent'> {
    Name: 'LeadChangeEvent';
    Fields: Fields$LeadChangeEvent;
    ParentReferences: ParentReferences$LeadChangeEvent;
    ChildRelationships: ChildRelationships$LeadChangeEvent;
  }

type Fields$LeadFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$LeadFeed = {
  //
  Parent: SObjectDefinition$Lead;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$LeadFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$LeadFeed extends SObjectDefinition<'LeadFeed'> {
    Name: 'LeadFeed';
    Fields: Fields$LeadFeed;
    ParentReferences: ParentReferences$LeadFeed;
    ChildRelationships: ChildRelationships$LeadFeed;
  }

type Fields$LeadHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LeadId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LeadHistory = {
  //
  Lead: SObjectDefinition$Lead;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LeadHistory = {
  //
};

interface SObjectDefinition$LeadHistory extends SObjectDefinition<'LeadHistory'> {
    Name: 'LeadHistory';
    Fields: Fields$LeadHistory;
    ParentReferences: ParentReferences$LeadHistory;
    ChildRelationships: ChildRelationships$LeadHistory;
  }

type Fields$LeadShare = {
  //
  Id: string;
  LeadId: string;
  UserOrGroupId: string;
  LeadAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LeadShare = {
  //
  Lead: SObjectDefinition$Lead;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LeadShare = {
  //
};

interface SObjectDefinition$LeadShare extends SObjectDefinition<'LeadShare'> {
    Name: 'LeadShare';
    Fields: Fields$LeadShare;
    ParentReferences: ParentReferences$LeadShare;
    ChildRelationships: ChildRelationships$LeadShare;
  }

type Fields$LeadStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsConverted: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$LeadStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LeadStatus = {
  //
};

interface SObjectDefinition$LeadStatus extends SObjectDefinition<'LeadStatus'> {
    Name: 'LeadStatus';
    Fields: Fields$LeadStatus;
    ParentReferences: ParentReferences$LeadStatus;
    ChildRelationships: ChildRelationships$LeadStatus;
  }

type Fields$LightningExitByPageMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  PageName: string | null;
  SystemModstamp: DateString;
  RecordCount: number | null;
};

type ParentReferences$LightningExitByPageMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningExitByPageMetrics = {
  //
};

interface SObjectDefinition$LightningExitByPageMetrics extends SObjectDefinition<'LightningExitByPageMetrics'> {
    Name: 'LightningExitByPageMetrics';
    Fields: Fields$LightningExitByPageMetrics;
    ParentReferences: ParentReferences$LightningExitByPageMetrics;
    ChildRelationships: ChildRelationships$LightningExitByPageMetrics;
  }

type Fields$LightningExperienceTheme = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DefaultBrandingSetId: string | null;
  ShouldOverrideLoadingImage: boolean;
  Description: string | null;
};

type ParentReferences$LightningExperienceTheme = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DefaultBrandingSet: SObjectDefinition$BrandingSet | null;
};

type ChildRelationships$LightningExperienceTheme = {
  //
};

interface SObjectDefinition$LightningExperienceTheme extends SObjectDefinition<'LightningExperienceTheme'> {
    Name: 'LightningExperienceTheme';
    Fields: Fields$LightningExperienceTheme;
    ParentReferences: ParentReferences$LightningExperienceTheme;
    ChildRelationships: ChildRelationships$LightningExperienceTheme;
  }

type Fields$LightningOnboardingConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string | null;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CustomQuestion: string | null;
  CollaborationGroupId: string | null;
  FeedbackFormDaysFrequency: number | null;
  SendFeedbackToSalesforce: boolean;
  IsCustom: boolean;
  PromptDelayTime: number | null;
};

type ParentReferences$LightningOnboardingConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CollaborationGroup: SObjectDefinition$CollaborationGroup | null;
};

type ChildRelationships$LightningOnboardingConfig = {
  //
};

interface SObjectDefinition$LightningOnboardingConfig extends SObjectDefinition<'LightningOnboardingConfig'> {
    Name: 'LightningOnboardingConfig';
    Fields: Fields$LightningOnboardingConfig;
    ParentReferences: ParentReferences$LightningOnboardingConfig;
    ChildRelationships: ChildRelationships$LightningOnboardingConfig;
  }

type Fields$LightningToggleMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  Action: string | null;
  SystemModstamp: DateString;
  RecordCount: number | null;
};

type ParentReferences$LightningToggleMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningToggleMetrics = {
  //
};

interface SObjectDefinition$LightningToggleMetrics extends SObjectDefinition<'LightningToggleMetrics'> {
    Name: 'LightningToggleMetrics';
    Fields: Fields$LightningToggleMetrics;
    ParentReferences: ParentReferences$LightningToggleMetrics;
    ChildRelationships: ChildRelationships$LightningToggleMetrics;
  }

type Fields$LightningUsageByAppTypeMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  AppExperience: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$LightningUsageByAppTypeMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningUsageByAppTypeMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByAppTypeMetrics extends SObjectDefinition<'LightningUsageByAppTypeMetrics'> {
    Name: 'LightningUsageByAppTypeMetrics';
    Fields: Fields$LightningUsageByAppTypeMetrics;
    ParentReferences: ParentReferences$LightningUsageByAppTypeMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByAppTypeMetrics;
  }

type Fields$LightningUsageByBrowserMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  PageName: string;
  Browser: string | null;
  SystemModstamp: DateString;
  RecordCountEPT: number | null;
  TotalCount: number | null;
  SumEPT: number | null;
  EptBinUnder3: number | null;
  EptBin3To5: number | null;
  EptBin5To8: number | null;
  EptBin8To10: number | null;
  EptBinOver10: number | null;
};

type ParentReferences$LightningUsageByBrowserMetrics = {
  //
};

type ChildRelationships$LightningUsageByBrowserMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByBrowserMetrics extends SObjectDefinition<'LightningUsageByBrowserMetrics'> {
    Name: 'LightningUsageByBrowserMetrics';
    Fields: Fields$LightningUsageByBrowserMetrics;
    ParentReferences: ParentReferences$LightningUsageByBrowserMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByBrowserMetrics;
  }

type Fields$LightningUsageByFlexiPageMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  FlexiPageType: string;
  FlexiPageNameOrId: string | null;
  SystemModstamp: DateString;
  RecordCountEPT: number | null;
  TotalCount: number | null;
  MedianEPT: number | null;
  SumEPT: number | null;
  EptBinUnder3: number | null;
  EptBin3To5: number | null;
  EptBin5To8: number | null;
  EptBin8To10: number | null;
  EptBinOver10: number | null;
  CoresBinUnder2: number | null;
  CoresBin2To4: number | null;
  CoresBin4To8: number | null;
  CoresBinOver8: number | null;
  DownlinkBinUnder3: number | null;
  DownlinkBin3To5: number | null;
  DownlinkBin5To8: number | null;
  DownlinkBin8To10: number | null;
  DownlinkBinOver10: number | null;
  RttBinUnder50: number | null;
  RttBin50To150: number | null;
  RttBinOver150: number | null;
};

type ParentReferences$LightningUsageByFlexiPageMetrics = {
  //
};

type ChildRelationships$LightningUsageByFlexiPageMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByFlexiPageMetrics extends SObjectDefinition<'LightningUsageByFlexiPageMetrics'> {
    Name: 'LightningUsageByFlexiPageMetrics';
    Fields: Fields$LightningUsageByFlexiPageMetrics;
    ParentReferences: ParentReferences$LightningUsageByFlexiPageMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByFlexiPageMetrics;
  }

type Fields$LightningUsageByPageMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  PageName: string | null;
  SystemModstamp: DateString;
  RecordCountEPT: number | null;
  TotalCount: number | null;
  SumEPT: number | null;
  EptBinUnder3: number | null;
  EptBin3To5: number | null;
  EptBin5To8: number | null;
  EptBin8To10: number | null;
  EptBinOver10: number | null;
  CoresBinUnder2: number | null;
  CoresBin2To4: number | null;
  CoresBin4To8: number | null;
  CoresBinOver8: number | null;
  DownlinkBinUnder3: number | null;
  DownlinkBin3To5: number | null;
  DownlinkBin5To8: number | null;
  DownlinkBin8To10: number | null;
  DownlinkBinOver10: number | null;
  RttBinUnder50: number | null;
  RttBin50To150: number | null;
  RttBinOver150: number | null;
};

type ParentReferences$LightningUsageByPageMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningUsageByPageMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByPageMetrics extends SObjectDefinition<'LightningUsageByPageMetrics'> {
    Name: 'LightningUsageByPageMetrics';
    Fields: Fields$LightningUsageByPageMetrics;
    ParentReferences: ParentReferences$LightningUsageByPageMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByPageMetrics;
  }

type Fields$LinkedArticle = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  KnowledgeArticleVersionId: string | null;
  LinkedEntityId: string | null;
  KnowledgeArticleId: string | null;
  Type: string | null;
};

type ParentReferences$LinkedArticle = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  KnowledgeArticleVersion: SObjectDefinition$Knowledge__kav | null;
  LinkedEntity: SObjectDefinition$Name | null;
  KnowledgeArticle: SObjectDefinition$Knowledge__ka | null;
};

type ChildRelationships$LinkedArticle = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Feeds: SObjectDefinition$LinkedArticleFeed;
  Histories: SObjectDefinition$LinkedArticleHistory;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$LinkedArticle extends SObjectDefinition<'LinkedArticle'> {
    Name: 'LinkedArticle';
    Fields: Fields$LinkedArticle;
    ParentReferences: ParentReferences$LinkedArticle;
    ChildRelationships: ChildRelationships$LinkedArticle;
  }

type Fields$LinkedArticleFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$LinkedArticleFeed = {
  //
  Parent: SObjectDefinition$LinkedArticle;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$LinkedArticleFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$LinkedArticleFeed extends SObjectDefinition<'LinkedArticleFeed'> {
    Name: 'LinkedArticleFeed';
    Fields: Fields$LinkedArticleFeed;
    ParentReferences: ParentReferences$LinkedArticleFeed;
    ChildRelationships: ChildRelationships$LinkedArticleFeed;
  }

type Fields$LinkedArticleHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LinkedArticleId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LinkedArticleHistory = {
  //
  LinkedArticle: SObjectDefinition$LinkedArticle;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LinkedArticleHistory = {
  //
};

interface SObjectDefinition$LinkedArticleHistory extends SObjectDefinition<'LinkedArticleHistory'> {
    Name: 'LinkedArticleHistory';
    Fields: Fields$LinkedArticleHistory;
    ParentReferences: ParentReferences$LinkedArticleHistory;
    ChildRelationships: ChildRelationships$LinkedArticleHistory;
  }

type Fields$ListEmail = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Subject: string | null;
  HtmlBody: string | null;
  TextBody: string | null;
  FromName: string | null;
  FromAddress: string;
  Status: string;
  HasAttachment: boolean;
  ScheduledDate: DateString | null;
  TotalSent: number | null;
  CampaignId: string | null;
  IsTracked: boolean;
};

type ParentReferences$ListEmail = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Campaign: SObjectDefinition$Campaign | null;
};

type ChildRelationships$ListEmail = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$ListEmailShare;
  OpenActivities: SObjectDefinition$OpenActivity;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ListEmail extends SObjectDefinition<'ListEmail'> {
    Name: 'ListEmail';
    Fields: Fields$ListEmail;
    ParentReferences: ParentReferences$ListEmail;
    ChildRelationships: ChildRelationships$ListEmail;
  }

type Fields$ListEmailChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Subject: string | null;
  HtmlBody: string | null;
  TextBody: string | null;
  FromName: string | null;
  FromAddress: string | null;
  Status: string | null;
  HasAttachment: boolean;
  ScheduledDate: DateString | null;
  TotalSent: number | null;
  CampaignId: string | null;
  IsTracked: boolean;
};

type ParentReferences$ListEmailChangeEvent = {
  //
};

type ChildRelationships$ListEmailChangeEvent = {
  //
};

interface SObjectDefinition$ListEmailChangeEvent extends SObjectDefinition<'ListEmailChangeEvent'> {
    Name: 'ListEmailChangeEvent';
    Fields: Fields$ListEmailChangeEvent;
    ParentReferences: ParentReferences$ListEmailChangeEvent;
    ChildRelationships: ChildRelationships$ListEmailChangeEvent;
  }

type Fields$ListEmailIndividualRecipient = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ListEmailId: string;
  RecipientId: string;
};

type ParentReferences$ListEmailIndividualRecipient = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ListEmail: SObjectDefinition$ListEmail;
  Recipient: SObjectDefinition$Name;
};

type ChildRelationships$ListEmailIndividualRecipient = {
  //
};

interface SObjectDefinition$ListEmailIndividualRecipient extends SObjectDefinition<'ListEmailIndividualRecipient'> {
    Name: 'ListEmailIndividualRecipient';
    Fields: Fields$ListEmailIndividualRecipient;
    ParentReferences: ParentReferences$ListEmailIndividualRecipient;
    ChildRelationships: ChildRelationships$ListEmailIndividualRecipient;
  }

type Fields$ListEmailRecipientSource = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ListEmailId: string;
  SourceListId: string;
  SourceType: string;
};

type ParentReferences$ListEmailRecipientSource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ListEmail: SObjectDefinition$ListEmail;
  SourceList: SObjectDefinition$Name;
};

type ChildRelationships$ListEmailRecipientSource = {
  //
};

interface SObjectDefinition$ListEmailRecipientSource extends SObjectDefinition<'ListEmailRecipientSource'> {
    Name: 'ListEmailRecipientSource';
    Fields: Fields$ListEmailRecipientSource;
    ParentReferences: ParentReferences$ListEmailRecipientSource;
    ChildRelationships: ChildRelationships$ListEmailRecipientSource;
  }

type Fields$ListEmailShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ListEmailShare = {
  //
  Parent: SObjectDefinition$ListEmail;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ListEmailShare = {
  //
};

interface SObjectDefinition$ListEmailShare extends SObjectDefinition<'ListEmailShare'> {
    Name: 'ListEmailShare';
    Fields: Fields$ListEmailShare;
    ParentReferences: ParentReferences$ListEmailShare;
    ChildRelationships: ChildRelationships$ListEmailShare;
  }

type Fields$ListView = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  SobjectType: string | null;
  IsSoqlCompatible: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$ListView = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ListView = {
  //
  ListEmailRecipientSources: SObjectDefinition$ListEmailRecipientSource;
};

interface SObjectDefinition$ListView extends SObjectDefinition<'ListView'> {
    Name: 'ListView';
    Fields: Fields$ListView;
    ParentReferences: ParentReferences$ListView;
    ChildRelationships: ChildRelationships$ListView;
  }

type Fields$ListViewChart = {
  //
  Id: string;
  IsDeleted: boolean;
  SobjectType: string;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OwnerId: string;
  ChartType: string;
  GroupingField: string | null;
  AggregateField: string | null;
  AggregateType: string;
};

type ParentReferences$ListViewChart = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
};

type ChildRelationships$ListViewChart = {
  //
};

interface SObjectDefinition$ListViewChart extends SObjectDefinition<'ListViewChart'> {
    Name: 'ListViewChart';
    Fields: Fields$ListViewChart;
    ParentReferences: ParentReferences$ListViewChart;
    ChildRelationships: ChildRelationships$ListViewChart;
  }

type Fields$ListViewChartInstance = {
  //
  Id: string;
  ExternalId: string | null;
  ListViewChartId: string;
  Label: string;
  DeveloperName: string;
  SourceEntity: string;
  ListViewContextId: string;
  ChartType: string;
  IsLastViewed: boolean;
  DataQuery: string | null;
  DataQueryWithoutUserFilters: string | null;
  IsEditable: boolean;
  IsDeletable: boolean;
  GroupingField: string;
  AggregateField: string;
  AggregateType: string;
};

type ParentReferences$ListViewChartInstance = {
  //
  ListViewChart: SObjectDefinition$ListViewChart;
  ListViewContext: SObjectDefinition$ListView;
};

type ChildRelationships$ListViewChartInstance = {
  //
};

interface SObjectDefinition$ListViewChartInstance extends SObjectDefinition<'ListViewChartInstance'> {
    Name: 'ListViewChartInstance';
    Fields: Fields$ListViewChartInstance;
    ParentReferences: ParentReferences$ListViewChartInstance;
    ChildRelationships: ChildRelationships$ListViewChartInstance;
  }

type Fields$LiveAgentSession = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AgentId: string;
  LoginTime: DateString;
  LogoutTime: DateString;
  TimeInOnlineStatus: number | null;
  TimeInAwayStatus: number | null;
  TimeInChats: number | null;
  TimeIdle: number | null;
  TimeAtCapacity: number | null;
  ChatReqAssigned: number | null;
  ChatReqEngaged: number | null;
  ChatReqDeclined: number | null;
  ChatReqTimedOut: number | null;
  NumFlagRaised: number | null;
  NumFlagLoweredAgent: number | null;
  NumFlagLoweredSupervisor: number | null;
};

type ParentReferences$LiveAgentSession = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Agent: SObjectDefinition$User;
};

type ChildRelationships$LiveAgentSession = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$LiveAgentSessionHistory;
  Shares: SObjectDefinition$LiveAgentSessionShare;
  OpenActivities: SObjectDefinition$OpenActivity;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$LiveAgentSession extends SObjectDefinition<'LiveAgentSession'> {
    Name: 'LiveAgentSession';
    Fields: Fields$LiveAgentSession;
    ParentReferences: ParentReferences$LiveAgentSession;
    ChildRelationships: ChildRelationships$LiveAgentSession;
  }

type Fields$LiveAgentSessionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LiveAgentSessionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LiveAgentSessionHistory = {
  //
  LiveAgentSession: SObjectDefinition$LiveAgentSession;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LiveAgentSessionHistory = {
  //
};

interface SObjectDefinition$LiveAgentSessionHistory extends SObjectDefinition<'LiveAgentSessionHistory'> {
    Name: 'LiveAgentSessionHistory';
    Fields: Fields$LiveAgentSessionHistory;
    ParentReferences: ParentReferences$LiveAgentSessionHistory;
    ChildRelationships: ChildRelationships$LiveAgentSessionHistory;
  }

type Fields$LiveAgentSessionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LiveAgentSessionShare = {
  //
  Parent: SObjectDefinition$LiveAgentSession;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LiveAgentSessionShare = {
  //
};

interface SObjectDefinition$LiveAgentSessionShare extends SObjectDefinition<'LiveAgentSessionShare'> {
    Name: 'LiveAgentSessionShare';
    Fields: Fields$LiveAgentSessionShare;
    ParentReferences: ParentReferences$LiveAgentSessionShare;
    ChildRelationships: ChildRelationships$LiveAgentSessionShare;
  }

type Fields$LiveChatButton = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SkillId: string | null;
  OnlineImageId: string | null;
  OfflineImageId: string | null;
  PrechatFormUrl: string | null;
  PostchatUrl: string | null;
  RoutingType: string;
  PushTimeout: number | null;
  HasQueue: boolean;
  PerAgentQueueLength: number | null;
  OverallQueueLength: number | null;
  WindowLanguage: string | null;
  Type: string;
  IsActive: boolean;
  OptionsIsInviteAutoRemove: boolean;
  OptionsHasInviteAfterAccept: boolean;
  OptionsHasInviteAfterReject: boolean;
  OptionsHasRerouteDeclinedRequest: boolean;
  OptionsIsAutoAccept: boolean;
  OptionsHasChasitorIdleTimeout: boolean;
  TimeToRemoveInvite: number | null;
  Animation: string | null;
  InviteStartPosition: string | null;
  InviteEndPosition: string | null;
  InviteImageId: string | null;
  AutoGreeting: string | null;
  CustomAgentName: string | null;
  NumberOfReroutingAttempts: number | null;
  ChasitorIdleTimeout: number | null;
  ChasitorIdleTimeoutWarning: number | null;
  QueueId: string | null;
  RoutingConfigurationId: string | null;
};

type ParentReferences$LiveChatButton = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Skill: SObjectDefinition$Skill | null;
  OnlineImage: SObjectDefinition$StaticResource | null;
  OfflineImage: SObjectDefinition$StaticResource | null;
  InviteImage: SObjectDefinition$StaticResource | null;
  Queue: SObjectDefinition$Group | null;
  RoutingConfiguration: SObjectDefinition$QueueRoutingConfig | null;
};

type ChildRelationships$LiveChatButton = {
  //
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
};

interface SObjectDefinition$LiveChatButton extends SObjectDefinition<'LiveChatButton'> {
    Name: 'LiveChatButton';
    Fields: Fields$LiveChatButton;
    ParentReferences: ParentReferences$LiveChatButton;
    ChildRelationships: ChildRelationships$LiveChatButton;
  }

type Fields$LiveChatSensitiveDataRule = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Pattern: string;
  Replacement: string | null;
  IsEnabled: boolean;
  ActionType: string;
  EnforceOn: number;
  Description: string | null;
  Priority: number | null;
};

type ParentReferences$LiveChatSensitiveDataRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LiveChatSensitiveDataRule = {
  //
};

interface SObjectDefinition$LiveChatSensitiveDataRule extends SObjectDefinition<'LiveChatSensitiveDataRule'> {
    Name: 'LiveChatSensitiveDataRule';
    Fields: Fields$LiveChatSensitiveDataRule;
    ParentReferences: ParentReferences$LiveChatSensitiveDataRule;
    ChildRelationships: ChildRelationships$LiveChatSensitiveDataRule;
  }

type Fields$LiveChatTranscript = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LiveChatVisitorId: string;
  Body: string | null;
  ContactId: string | null;
  LeadId: string | null;
  CaseId: string | null;
  AccountId: string | null;
  LiveChatButtonId: string | null;
  SkillId: string | null;
  IpAddress: string | null;
  Location: string | null;
  UserAgent: string | null;
  Browser: string | null;
  Platform: string | null;
  BrowserLanguage: string | null;
  ScreenResolution: string | null;
  ReferrerUri: string | null;
  Status: string | null;
  RequestTime: DateString | null;
  StartTime: DateString | null;
  EndTime: DateString | null;
  EndedBy: string | null;
  AverageResponseTimeVisitor: number | null;
  AverageResponseTimeOperator: number | null;
  OperatorMessageCount: number | null;
  VisitorMessageCount: number | null;
  MaxResponseTimeOperator: number | null;
  ChatKey: string | null;
  SupervisorTranscriptBody: string | null;
  MaxResponseTimeVisitor: number | null;
  VisitorNetwork: string | null;
  ChatDuration: number | null;
  WaitTime: number | null;
  Abandoned: number | null;
  IsChatbotSession: boolean;
};

type ParentReferences$LiveChatTranscript = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LiveChatVisitor: SObjectDefinition$LiveChatVisitor;
  Contact: SObjectDefinition$Contact | null;
  Lead: SObjectDefinition$Lead | null;
  Case: SObjectDefinition$Case | null;
  Account: SObjectDefinition$Account | null;
  LiveChatButton: SObjectDefinition$LiveChatButton | null;
  Skill: SObjectDefinition$Skill | null;
};

type ChildRelationships$LiveChatTranscript = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ConversationContextEntries: SObjectDefinition$ConversationContextEntry;
  ConversationEntries: SObjectDefinition$ConversationEntry;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  LiveChatTranscriptEvents: SObjectDefinition$LiveChatTranscriptEvent;
  Feeds: SObjectDefinition$LiveChatTranscriptFeed;
  Histories: SObjectDefinition$LiveChatTranscriptHistory;
  Shares: SObjectDefinition$LiveChatTranscriptShare;
  LiveChatTranscriptSkills: SObjectDefinition$LiveChatTranscriptSkill;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$LiveChatTranscript extends SObjectDefinition<'LiveChatTranscript'> {
    Name: 'LiveChatTranscript';
    Fields: Fields$LiveChatTranscript;
    ParentReferences: ParentReferences$LiveChatTranscript;
    ChildRelationships: ChildRelationships$LiveChatTranscript;
  }

type Fields$LiveChatTranscriptChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  LiveChatVisitorId: string | null;
  Body: string | null;
  ContactId: string | null;
  LeadId: string | null;
  CaseId: string | null;
  AccountId: string | null;
  LiveChatButtonId: string | null;
  SkillId: string | null;
  IpAddress: string | null;
  Location: string | null;
  UserAgent: string | null;
  Browser: string | null;
  Platform: string | null;
  BrowserLanguage: string | null;
  ScreenResolution: string | null;
  ReferrerUri: string | null;
  Status: string | null;
  RequestTime: DateString | null;
  StartTime: DateString | null;
  EndTime: DateString | null;
  EndedBy: string | null;
  AverageResponseTimeVisitor: number | null;
  AverageResponseTimeOperator: number | null;
  OperatorMessageCount: number | null;
  VisitorMessageCount: number | null;
  MaxResponseTimeOperator: number | null;
  ChatKey: string | null;
  SupervisorTranscriptBody: string | null;
  MaxResponseTimeVisitor: number | null;
  VisitorNetwork: string | null;
  IsChatbotSession: boolean;
};

type ParentReferences$LiveChatTranscriptChangeEvent = {
  //
};

type ChildRelationships$LiveChatTranscriptChangeEvent = {
  //
};

interface SObjectDefinition$LiveChatTranscriptChangeEvent extends SObjectDefinition<'LiveChatTranscriptChangeEvent'> {
    Name: 'LiveChatTranscriptChangeEvent';
    Fields: Fields$LiveChatTranscriptChangeEvent;
    ParentReferences: ParentReferences$LiveChatTranscriptChangeEvent;
    ChildRelationships: ChildRelationships$LiveChatTranscriptChangeEvent;
  }

type Fields$LiveChatTranscriptEvent = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LiveChatTranscriptId: string;
  Type: string;
  AgentId: string | null;
  Time: DateString;
  Detail: string | null;
};

type ParentReferences$LiveChatTranscriptEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LiveChatTranscript: SObjectDefinition$LiveChatTranscript;
  Agent: SObjectDefinition$User | null;
};

type ChildRelationships$LiveChatTranscriptEvent = {
  //
};

interface SObjectDefinition$LiveChatTranscriptEvent extends SObjectDefinition<'LiveChatTranscriptEvent'> {
    Name: 'LiveChatTranscriptEvent';
    Fields: Fields$LiveChatTranscriptEvent;
    ParentReferences: ParentReferences$LiveChatTranscriptEvent;
    ChildRelationships: ChildRelationships$LiveChatTranscriptEvent;
  }

type Fields$LiveChatTranscriptFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$LiveChatTranscriptFeed = {
  //
  Parent: SObjectDefinition$LiveChatTranscript;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$LiveChatTranscriptFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$LiveChatTranscriptFeed extends SObjectDefinition<'LiveChatTranscriptFeed'> {
    Name: 'LiveChatTranscriptFeed';
    Fields: Fields$LiveChatTranscriptFeed;
    ParentReferences: ParentReferences$LiveChatTranscriptFeed;
    ChildRelationships: ChildRelationships$LiveChatTranscriptFeed;
  }

type Fields$LiveChatTranscriptHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LiveChatTranscriptId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LiveChatTranscriptHistory = {
  //
  LiveChatTranscript: SObjectDefinition$LiveChatTranscript;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LiveChatTranscriptHistory = {
  //
};

interface SObjectDefinition$LiveChatTranscriptHistory extends SObjectDefinition<'LiveChatTranscriptHistory'> {
    Name: 'LiveChatTranscriptHistory';
    Fields: Fields$LiveChatTranscriptHistory;
    ParentReferences: ParentReferences$LiveChatTranscriptHistory;
    ChildRelationships: ChildRelationships$LiveChatTranscriptHistory;
  }

type Fields$LiveChatTranscriptShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LiveChatTranscriptShare = {
  //
  Parent: SObjectDefinition$LiveChatTranscript;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LiveChatTranscriptShare = {
  //
};

interface SObjectDefinition$LiveChatTranscriptShare extends SObjectDefinition<'LiveChatTranscriptShare'> {
    Name: 'LiveChatTranscriptShare';
    Fields: Fields$LiveChatTranscriptShare;
    ParentReferences: ParentReferences$LiveChatTranscriptShare;
    ChildRelationships: ChildRelationships$LiveChatTranscriptShare;
  }

type Fields$LiveChatTranscriptSkill = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TranscriptId: string;
  SkillId: string | null;
};

type ParentReferences$LiveChatTranscriptSkill = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Transcript: SObjectDefinition$LiveChatTranscript;
  Skill: SObjectDefinition$Skill | null;
};

type ChildRelationships$LiveChatTranscriptSkill = {
  //
};

interface SObjectDefinition$LiveChatTranscriptSkill extends SObjectDefinition<'LiveChatTranscriptSkill'> {
    Name: 'LiveChatTranscriptSkill';
    Fields: Fields$LiveChatTranscriptSkill;
    ParentReferences: ParentReferences$LiveChatTranscriptSkill;
    ChildRelationships: ChildRelationships$LiveChatTranscriptSkill;
  }

type Fields$LiveChatUserConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Capacity: number | null;
  HasSneakPeek: boolean;
  HasRequestSound: boolean;
  HasLogoutSound: boolean;
  AutoGreeting: string | null;
  HasNotifications: boolean;
  IsAutoAwayOnDecline: boolean;
  CriticalWaitTime: number | null;
  OptionsHasChatMonitoring: boolean;
  OptionsHasWhisperMessage: boolean;
  OptionsHasAgentSneakPeek: boolean;
  OptionsHasAgentFileTransfer: boolean;
  OptionsHasChatConferencing: boolean;
  OptionsHasVisitorBlocking: boolean;
  OptionsIsAutoAwayOnPushTimeout: boolean;
  OptionsHasAssistanceFlag: boolean;
  OptionsHasChatTransferToButton: boolean;
  OptionsHasChatTransferToAgent: boolean;
  OptionsHasChatTransferToSkill: boolean;
  SupervisorDefaultAgentStatus: string | null;
  SupervisorDefaultSkillId: string | null;
  SupervisorDefaultButtonId: string | null;
  CustomAgentName: string | null;
};

type ParentReferences$LiveChatUserConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SupervisorDefaultSkill: SObjectDefinition$Skill | null;
  SupervisorDefaultButton: SObjectDefinition$LiveChatButton | null;
};

type ChildRelationships$LiveChatUserConfig = {
  //
};

interface SObjectDefinition$LiveChatUserConfig extends SObjectDefinition<'LiveChatUserConfig'> {
    Name: 'LiveChatUserConfig';
    Fields: Fields$LiveChatUserConfig;
    ParentReferences: ParentReferences$LiveChatUserConfig;
    ChildRelationships: ChildRelationships$LiveChatUserConfig;
  }

type Fields$LiveChatUserConfigProfile = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LiveChatUserConfigId: string;
};

type ParentReferences$LiveChatUserConfigProfile = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LiveChatUserConfig: SObjectDefinition$LiveChatUserConfig;
};

type ChildRelationships$LiveChatUserConfigProfile = {
  //
};

interface SObjectDefinition$LiveChatUserConfigProfile extends SObjectDefinition<'LiveChatUserConfigProfile'> {
    Name: 'LiveChatUserConfigProfile';
    Fields: Fields$LiveChatUserConfigProfile;
    ParentReferences: ParentReferences$LiveChatUserConfigProfile;
    ChildRelationships: ChildRelationships$LiveChatUserConfigProfile;
  }

type Fields$LiveChatUserConfigUser = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LiveChatUserConfigId: string;
  UserId: string | null;
};

type ParentReferences$LiveChatUserConfigUser = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LiveChatUserConfig: SObjectDefinition$LiveChatUserConfig;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$LiveChatUserConfigUser = {
  //
};

interface SObjectDefinition$LiveChatUserConfigUser extends SObjectDefinition<'LiveChatUserConfigUser'> {
    Name: 'LiveChatUserConfigUser';
    Fields: Fields$LiveChatUserConfigUser;
    ParentReferences: ParentReferences$LiveChatUserConfigUser;
    ChildRelationships: ChildRelationships$LiveChatUserConfigUser;
  }

type Fields$LiveChatVisitor = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SessionKey: string | null;
};

type ParentReferences$LiveChatVisitor = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LiveChatVisitor = {
  //
  ConversationEntries: SObjectDefinition$ConversationEntry;
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
};

interface SObjectDefinition$LiveChatVisitor extends SObjectDefinition<'LiveChatVisitor'> {
    Name: 'LiveChatVisitor';
    Fields: Fields$LiveChatVisitor;
    ParentReferences: ParentReferences$LiveChatVisitor;
    ChildRelationships: ChildRelationships$LiveChatVisitor;
  }

type Fields$Location = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LocationType: string;
  Latitude: number | null;
  Longitude: number | null;
  Location: string | null;
  Description: string | null;
  DrivingDirections: string | null;
  TimeZone: string | null;
  ParentLocationId: string | null;
  PossessionDate: DateString | null;
  ConstructionStartDate: DateString | null;
  ConstructionEndDate: DateString | null;
  OpenDate: DateString | null;
  CloseDate: DateString | null;
  RemodelStartDate: DateString | null;
  RemodelEndDate: DateString | null;
  IsMobile: boolean;
  IsInventoryLocation: boolean;
  VisitorAddressId: string | null;
  RootLocationId: string | null;
  LocationLevel: number | null;
  ExternalReference: string | null;
  LogoId: string | null;
};

type ParentReferences$Location = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentLocation: SObjectDefinition$Location | null;
  VisitorAddress: SObjectDefinition$Address | null;
  RootLocation: SObjectDefinition$Location | null;
  Logo: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$Location = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Addresses: SObjectDefinition$Address;
  AssociatedLocations: SObjectDefinition$AssociatedLocation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthApplPlace: SObjectDefinition$AuthApplicationPlace;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  CourseOfferingLocation: SObjectDefinition$CourseOffering;
  Emails: SObjectDefinition$EmailMessage;
  AssetWarranties: SObjectDefinition$Entitlement;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  ChildLocations: SObjectDefinition$Location;
  Feeds: SObjectDefinition$LocationFeed;
  Histories: SObjectDefinition$LocationHistory;
  Shares: SObjectDefinition$LocationShare;
  LocationTrustMeasures: SObjectDefinition$LocationTrustMeasure;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  ServiceResources: SObjectDefinition$ServiceResource;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  VolunteerProjLocation: SObjectDefinition$VolunteerProject;
  WorkOrders: SObjectDefinition$WorkOrder;
  WorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
};

interface SObjectDefinition$Location extends SObjectDefinition<'Location'> {
    Name: 'Location';
    Fields: Fields$Location;
    ParentReferences: ParentReferences$Location;
    ChildRelationships: ChildRelationships$Location;
  }

type Fields$LocationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  LocationType: string | null;
  Latitude: number | null;
  Longitude: number | null;
  Location: string | null;
  Description: string | null;
  DrivingDirections: string | null;
  TimeZone: string | null;
  ParentLocationId: string | null;
  PossessionDate: DateString | null;
  ConstructionStartDate: DateString | null;
  ConstructionEndDate: DateString | null;
  OpenDate: DateString | null;
  CloseDate: DateString | null;
  RemodelStartDate: DateString | null;
  RemodelEndDate: DateString | null;
  IsMobile: boolean;
  IsInventoryLocation: boolean;
  VisitorAddressId: string | null;
  RootLocationId: string | null;
  LocationLevel: number | null;
  ExternalReference: string | null;
  LogoId: string | null;
};

type ParentReferences$LocationChangeEvent = {
  //
};

type ChildRelationships$LocationChangeEvent = {
  //
};

interface SObjectDefinition$LocationChangeEvent extends SObjectDefinition<'LocationChangeEvent'> {
    Name: 'LocationChangeEvent';
    Fields: Fields$LocationChangeEvent;
    ParentReferences: ParentReferences$LocationChangeEvent;
    ChildRelationships: ChildRelationships$LocationChangeEvent;
  }

type Fields$LocationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$LocationFeed = {
  //
  Parent: SObjectDefinition$Location;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$LocationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$LocationFeed extends SObjectDefinition<'LocationFeed'> {
    Name: 'LocationFeed';
    Fields: Fields$LocationFeed;
    ParentReferences: ParentReferences$LocationFeed;
    ChildRelationships: ChildRelationships$LocationFeed;
  }

type Fields$LocationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LocationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LocationHistory = {
  //
  Location: SObjectDefinition$Location;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LocationHistory = {
  //
};

interface SObjectDefinition$LocationHistory extends SObjectDefinition<'LocationHistory'> {
    Name: 'LocationHistory';
    Fields: Fields$LocationHistory;
    ParentReferences: ParentReferences$LocationHistory;
    ChildRelationships: ChildRelationships$LocationHistory;
  }

type Fields$LocationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LocationShare = {
  //
  Parent: SObjectDefinition$Location;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LocationShare = {
  //
};

interface SObjectDefinition$LocationShare extends SObjectDefinition<'LocationShare'> {
    Name: 'LocationShare';
    Fields: Fields$LocationShare;
    ParentReferences: ParentReferences$LocationShare;
    ChildRelationships: ChildRelationships$LocationShare;
  }

type Fields$LocationTrustMeasure = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LocationId: string;
  Title: string;
  IsVisibleInPublic: boolean;
  IconUrl: string | null;
  Description: string;
  SortOrder: number | null;
  LocationExternalReference: string | null;
};

type ParentReferences$LocationTrustMeasure = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Location: SObjectDefinition$Location;
};

type ChildRelationships$LocationTrustMeasure = {
  //
  Shares: SObjectDefinition$LocationTrustMeasureShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$LocationTrustMeasure extends SObjectDefinition<'LocationTrustMeasure'> {
    Name: 'LocationTrustMeasure';
    Fields: Fields$LocationTrustMeasure;
    ParentReferences: ParentReferences$LocationTrustMeasure;
    ChildRelationships: ChildRelationships$LocationTrustMeasure;
  }

type Fields$LocationTrustMeasureShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LocationTrustMeasureShare = {
  //
  Parent: SObjectDefinition$LocationTrustMeasure;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LocationTrustMeasureShare = {
  //
};

interface SObjectDefinition$LocationTrustMeasureShare extends SObjectDefinition<'LocationTrustMeasureShare'> {
    Name: 'LocationTrustMeasureShare';
    Fields: Fields$LocationTrustMeasureShare;
    ParentReferences: ParentReferences$LocationTrustMeasureShare;
    ChildRelationships: ChildRelationships$LocationTrustMeasureShare;
  }

type Fields$LoginHistory = {
  //
  Id: string;
  UserId: string | null;
  LoginTime: DateString;
  LoginType: string;
  SourceIp: string | null;
  LoginUrl: string | null;
  NetworkId: string | null;
  TlsProtocol: string | null;
  CipherSuite: string | null;
  OptionsIsGet: boolean;
  OptionsIsPost: boolean;
  Browser: string | null;
  Platform: string | null;
  Status: string | null;
  Application: string | null;
  ClientVersion: string | null;
  ApiType: string | null;
  ApiVersion: string | null;
  CountryIso: string | null;
};

type ParentReferences$LoginHistory = {
  //
};

type ChildRelationships$LoginHistory = {
  //
};

interface SObjectDefinition$LoginHistory extends SObjectDefinition<'LoginHistory'> {
    Name: 'LoginHistory';
    Fields: Fields$LoginHistory;
    ParentReferences: ParentReferences$LoginHistory;
    ChildRelationships: ChildRelationships$LoginHistory;
  }

type Fields$LoginIp = {
  //
  Id: string;
  UsersId: string;
  SourceIp: string | null;
  CreatedDate: DateString;
  IsAuthenticated: boolean;
  ChallengeSentDate: DateString | null;
  ChallengeMethod: string | null;
};

type ParentReferences$LoginIp = {
  //
  Users: SObjectDefinition$User;
};

type ChildRelationships$LoginIp = {
  //
};

interface SObjectDefinition$LoginIp extends SObjectDefinition<'LoginIp'> {
    Name: 'LoginIp';
    Fields: Fields$LoginIp;
    ParentReferences: ParentReferences$LoginIp;
    ChildRelationships: ChildRelationships$LoginIp;
  }

type Fields$LookedUpFromActivity = {
  //
  Id: string;
  AccountId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  Subject: string | null;
  IsTask: boolean;
  ActivityDate: DateString | null;
  ActivityDateTime: DateString | null;
  OwnerId: string | null;
  Status: string | null;
  Priority: string | null;
  IsHighPriority: boolean;
  ActivityType: string | null;
  IsClosed: boolean;
  IsAllDayEvent: boolean;
  IsVisibleInSelfService: boolean;
  DurationInMinutes: number | null;
  Location: string | null;
  Description: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EndDateTime: DateString | null;
  StartDateTime: DateString | null;
  PrimaryWhoId: string | null;
  PrimaryAccountId: string | null;
  ActivitySubtype: string | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$LookedUpFromActivity = {
  //
  Account: SObjectDefinition$Account | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PrimaryWho: SObjectDefinition$Name | null;
  PrimaryAccount: SObjectDefinition$Account | null;
  Requirement__r: SObjectDefinition$outfunds__Requirement__c | null;
  Piano_di_migrazione__r: SObjectDefinition$Case | null;
  Checklist__r: SObjectDefinition$Checklist__c | null;
  EnteLookup__r: SObjectDefinition$Account | null;
  Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Tag_colleghi__r: SObjectDefinition$User | null;
  Counter__r: SObjectDefinition$Counter__c | null;
  Servizio__r: SObjectDefinition$Servizio_Richiesta__c | null;
  Registro_eventi_ente__r: SObjectDefinition$Registro_eventi_ente__c | null;
};

type ChildRelationships$LookedUpFromActivity = {
  //
};

interface SObjectDefinition$LookedUpFromActivity extends SObjectDefinition<'LookedUpFromActivity'> {
    Name: 'LookedUpFromActivity';
    Fields: Fields$LookedUpFromActivity;
    ParentReferences: ParentReferences$LookedUpFromActivity;
    ChildRelationships: ChildRelationships$LookedUpFromActivity;
  }

type Fields$Macro = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  IsAlohaSupported: boolean;
  IsLightningSupported: boolean;
  StartingContext: string | null;
};

type ParentReferences$Macro = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Macro = {
  //
  Histories: SObjectDefinition$MacroHistory;
  Shares: SObjectDefinition$MacroShare;
};

interface SObjectDefinition$Macro extends SObjectDefinition<'Macro'> {
    Name: 'Macro';
    Fields: Fields$Macro;
    ParentReferences: ParentReferences$Macro;
    ChildRelationships: ChildRelationships$Macro;
  }

type Fields$MacroChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Description: string | null;
  IsAlohaSupported: boolean;
  IsLightningSupported: boolean;
  StartingContext: string | null;
};

type ParentReferences$MacroChangeEvent = {
  //
};

type ChildRelationships$MacroChangeEvent = {
  //
};

interface SObjectDefinition$MacroChangeEvent extends SObjectDefinition<'MacroChangeEvent'> {
    Name: 'MacroChangeEvent';
    Fields: Fields$MacroChangeEvent;
    ParentReferences: ParentReferences$MacroChangeEvent;
    ChildRelationships: ChildRelationships$MacroChangeEvent;
  }

type Fields$MacroHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  MacroId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$MacroHistory = {
  //
  Macro: SObjectDefinition$Macro;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$MacroHistory = {
  //
};

interface SObjectDefinition$MacroHistory extends SObjectDefinition<'MacroHistory'> {
    Name: 'MacroHistory';
    Fields: Fields$MacroHistory;
    ParentReferences: ParentReferences$MacroHistory;
    ChildRelationships: ChildRelationships$MacroHistory;
  }

type Fields$MacroInstruction = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  MacroId: string;
  Operation: string;
  Target: string | null;
  Value: string | null;
  ValueRecord: string | null;
  SortOrder: number;
};

type ParentReferences$MacroInstruction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Macro: SObjectDefinition$Macro;
};

type ChildRelationships$MacroInstruction = {
  //
};

interface SObjectDefinition$MacroInstruction extends SObjectDefinition<'MacroInstruction'> {
    Name: 'MacroInstruction';
    Fields: Fields$MacroInstruction;
    ParentReferences: ParentReferences$MacroInstruction;
    ChildRelationships: ChildRelationships$MacroInstruction;
  }

type Fields$MacroInstructionChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  MacroId: string | null;
  Operation: string | null;
  Target: string | null;
  Value: string | null;
  ValueRecord: string | null;
  SortOrder: number | null;
};

type ParentReferences$MacroInstructionChangeEvent = {
  //
};

type ChildRelationships$MacroInstructionChangeEvent = {
  //
};

interface SObjectDefinition$MacroInstructionChangeEvent extends SObjectDefinition<'MacroInstructionChangeEvent'> {
    Name: 'MacroInstructionChangeEvent';
    Fields: Fields$MacroInstructionChangeEvent;
    ParentReferences: ParentReferences$MacroInstructionChangeEvent;
    ChildRelationships: ChildRelationships$MacroInstructionChangeEvent;
  }

type Fields$MacroShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$MacroShare = {
  //
  Parent: SObjectDefinition$Macro;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MacroShare = {
  //
};

interface SObjectDefinition$MacroShare extends SObjectDefinition<'MacroShare'> {
    Name: 'MacroShare';
    Fields: Fields$MacroShare;
    ParentReferences: ParentReferences$MacroShare;
    ChildRelationships: ChildRelationships$MacroShare;
  }

type Fields$MacroUsage = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  MacroId: string;
  ContextRecord: string | null;
  ExecutedInstructionCount: number | null;
  InstructionCount: number | null;
  ExecutionEndTime: DateString | null;
  UserId: string | null;
  IsFromBulk: boolean;
  AppContext: string | null;
  ConditionCount: number | null;
  ExecutionState: string | null;
  DurationInMs: number | null;
  FailureReason: string | null;
};

type ParentReferences$MacroUsage = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Macro: SObjectDefinition$Macro;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$MacroUsage = {
  //
  Shares: SObjectDefinition$MacroUsageShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$MacroUsage extends SObjectDefinition<'MacroUsage'> {
    Name: 'MacroUsage';
    Fields: Fields$MacroUsage;
    ParentReferences: ParentReferences$MacroUsage;
    ChildRelationships: ChildRelationships$MacroUsage;
  }

type Fields$MacroUsageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$MacroUsageShare = {
  //
  Parent: SObjectDefinition$MacroUsage;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MacroUsageShare = {
  //
};

interface SObjectDefinition$MacroUsageShare extends SObjectDefinition<'MacroUsageShare'> {
    Name: 'MacroUsageShare';
    Fields: Fields$MacroUsageShare;
    ParentReferences: ParentReferences$MacroUsageShare;
    ChildRelationships: ChildRelationships$MacroUsageShare;
  }

type Fields$MatchingInformation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  EmailAddress: string | null;
  ExternalId: string | null;
  SFDCIdId: string | null;
  IsPickedAsPreferred: boolean;
  UserId: string | null;
  PreferenceUsed: string | null;
};

type ParentReferences$MatchingInformation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SFDCId: SObjectDefinition$Contact | null;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$MatchingInformation = {
  //
};

interface SObjectDefinition$MatchingInformation extends SObjectDefinition<'MatchingInformation'> {
    Name: 'MatchingInformation';
    Fields: Fields$MatchingInformation;
    ParentReferences: ParentReferences$MatchingInformation;
    ChildRelationships: ChildRelationships$MatchingInformation;
  }

type Fields$MilestoneType = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  RecurrenceType: string | null;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$MilestoneType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MilestoneType = {
  //
};

interface SObjectDefinition$MilestoneType extends SObjectDefinition<'MilestoneType'> {
    Name: 'MilestoneType';
    Fields: Fields$MilestoneType;
    ParentReferences: ParentReferences$MilestoneType;
    ChildRelationships: ChildRelationships$MilestoneType;
  }

type Fields$Milestone_PNRR__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Buffer_target__c: number | null;
  Completamento_target__c: number | null;
  Data_Inizio__c: DateString | null;
  Data_fine__c: DateString | null;
  Enti_Positivi__c: number | null;
  Investimento_PNRR__c: string | null;
  Misura__c: string | null;
  Pacchetto__c: string | null;
  Quarter_milestone__c: string | null;
  Unit_milestone__c: string | null;
  Valore_milestone__c: number | null;
  isDummy__c: boolean;
  Completamento_Target_calc__c: number | null;
  MisuraReport__c: string | null;
  Necessari_target__c: number | null;
  Proroga_ammissibile_target__c: number | null;
  QuarterFormat__c: string | null;
  Count_completamento_target__c: number | null;
  Count_esiti_positivi__c: number | null;
};

type ParentReferences$Milestone_PNRR__ChangeEvent = {
  //
};

type ChildRelationships$Milestone_PNRR__ChangeEvent = {
  //
};

interface SObjectDefinition$Milestone_PNRR__ChangeEvent extends SObjectDefinition<'Milestone_PNRR__ChangeEvent'> {
    Name: 'Milestone_PNRR__ChangeEvent';
    Fields: Fields$Milestone_PNRR__ChangeEvent;
    ParentReferences: ParentReferences$Milestone_PNRR__ChangeEvent;
    ChildRelationships: ChildRelationships$Milestone_PNRR__ChangeEvent;
  }

type Fields$Milestone_PNRR__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Milestone_PNRR__Share = {
  //
  Parent: SObjectDefinition$Milestone_PNRR__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Milestone_PNRR__Share = {
  //
};

interface SObjectDefinition$Milestone_PNRR__Share extends SObjectDefinition<'Milestone_PNRR__Share'> {
    Name: 'Milestone_PNRR__Share';
    Fields: Fields$Milestone_PNRR__Share;
    ParentReferences: ParentReferences$Milestone_PNRR__Share;
    ChildRelationships: ChildRelationships$Milestone_PNRR__Share;
  }

type Fields$Milestone_PNRR__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Buffer_target__c: number | null;
  Completamento_target__c: number | null;
  Data_Inizio__c: DateString | null;
  Data_fine__c: DateString | null;
  Enti_Positivi__c: number | null;
  Investimento_PNRR__c: string | null;
  Misura__c: string | null;
  Pacchetto__c: string | null;
  Quarter_milestone__c: string | null;
  Unit_milestone__c: string | null;
  Valore_milestone__c: number | null;
  isDummy__c: boolean;
  Completamento_Target_calc__c: number | null;
  MisuraReport__c: string | null;
  Necessari_target__c: number | null;
  Proroga_ammissibile_target__c: number | null;
  QuarterFormat__c: string | null;
  Count_completamento_target__c: number | null;
  Count_esiti_positivi__c: number | null;
};

type ParentReferences$Milestone_PNRR__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Milestone_PNRR__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$Milestone_PNRR__Share;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Milestone_PNRR__c extends SObjectDefinition<'Milestone_PNRR__c'> {
    Name: 'Milestone_PNRR__c';
    Fields: Fields$Milestone_PNRR__c;
    ParentReferences: ParentReferences$Milestone_PNRR__c;
    ChildRelationships: ChildRelationships$Milestone_PNRR__c;
  }

type Fields$MobileApplicationDetail = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Version: string;
  DevicePlatform: string;
  MinimumOsVersion: string | null;
  DeviceType: string | null;
  ApplicationFileLength: number | null;
  ApplicationIcon: string | null;
  IsEnterpriseApp: boolean;
  AppInstallUrl: string | null;
  ApplicationBundleIdentifier: string | null;
  ApplicationBinaryFileName: string | null;
  ApplicationIconFileName: string | null;
  ApplicationBinary: BlobString | null;
};

type ParentReferences$MobileApplicationDetail = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MobileApplicationDetail = {
  //
};

interface SObjectDefinition$MobileApplicationDetail extends SObjectDefinition<'MobileApplicationDetail'> {
    Name: 'MobileApplicationDetail';
    Fields: Fields$MobileApplicationDetail;
    ParentReferences: ParentReferences$MobileApplicationDetail;
    ChildRelationships: ChildRelationships$MobileApplicationDetail;
  }

type Fields$Name = {
  //
  Id: string;
  Name: string | null;
  LastName: string | null;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Type: string | null;
  Alias: string | null;
  UserRoleId: string | null;
  IsActive: boolean;
  Title: string | null;
  Email: string | null;
  Phone: string | null;
  NameOrAlias: string | null;
  Username: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Name = {
  //
  UserRole: SObjectDefinition$UserRole | null;
};

type ChildRelationships$Name = {
  //
};

interface SObjectDefinition$Name extends SObjectDefinition<'Name'> {
    Name: 'Name';
    Fields: Fields$Name;
    ParentReferences: ParentReferences$Name;
    ChildRelationships: ChildRelationships$Name;
  }

type Fields$NavigationLinkSet = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NetworkId: string | null;
};

type ParentReferences$NavigationLinkSet = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
};

type ChildRelationships$NavigationLinkSet = {
  //
};

interface SObjectDefinition$NavigationLinkSet extends SObjectDefinition<'NavigationLinkSet'> {
    Name: 'NavigationLinkSet';
    Fields: Fields$NavigationLinkSet;
    ParentReferences: ParentReferences$NavigationLinkSet;
    ChildRelationships: ChildRelationships$NavigationLinkSet;
  }

type Fields$NavigationMenuItem = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NavigationLinkSetId: string;
  Label: string;
  Type: string;
  Target: string | null;
  Position: number;
  ParentId: string | null;
  AccessRestriction: string;
  DefaultListViewId: string | null;
  TargetPrefs: string | null;
  Status: string | null;
  DraftRowId: string | null;
};

type ParentReferences$NavigationMenuItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  NavigationLinkSet: SObjectDefinition$NavigationLinkSet;
  Parent: SObjectDefinition$NavigationMenuItem | null;
  DefaultListView: SObjectDefinition$ListView | null;
  DraftRow: SObjectDefinition$NavigationMenuItem | null;
};

type ChildRelationships$NavigationMenuItem = {
  //
  CustomBrands: SObjectDefinition$CustomBrand;
  Localization: SObjectDefinition$NavigationMenuItemLocalization;
};

interface SObjectDefinition$NavigationMenuItem extends SObjectDefinition<'NavigationMenuItem'> {
    Name: 'NavigationMenuItem';
    Fields: Fields$NavigationMenuItem;
    ParentReferences: ParentReferences$NavigationMenuItem;
    ChildRelationships: ChildRelationships$NavigationMenuItem;
  }

type Fields$NavigationMenuItemLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$NavigationMenuItemLocalization = {
  //
  Parent: SObjectDefinition$NavigationMenuItem;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$NavigationMenuItemLocalization = {
  //
};

interface SObjectDefinition$NavigationMenuItemLocalization extends SObjectDefinition<'NavigationMenuItemLocalization'> {
    Name: 'NavigationMenuItemLocalization';
    Fields: Fields$NavigationMenuItemLocalization;
    ParentReferences: ParentReferences$NavigationMenuItemLocalization;
    ChildRelationships: ChildRelationships$NavigationMenuItemLocalization;
  }

type Fields$Network = {
  //
  Id: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  Name: string;
  Description: string | null;
  Status: string;
  OptionsInvitationsEnabled: boolean;
  OptionsSendWelcomeEmail: boolean;
  OptionsSelfRegistrationEnabled: boolean;
  OptionsAllowMembersToFlag: boolean;
  OptionsSiteAsContainerEnabled: boolean;
  OptionsPrivateMessagesEnabled: boolean;
  OptionsKnowledgeableEnabled: boolean;
  OptionsReputationEnabled: boolean;
  OptionsEinsteinAnswersSnippetEnabled: boolean;
  OptionsGuestChatterEnabled: boolean;
  OptionsNicknameDisplayEnabled: boolean;
  OptionsShowAllNetworkSettings: boolean;
  OptionsAllowInternalUserLogin: boolean;
  OptionsDirectMessagesEnabled: boolean;
  OptionsReputationRecordConversationsDisabled: boolean;
  OptionsGuestFileAccessEnabled: boolean;
  OptionsGatherCustomerSentimentData: boolean;
  OptionsNetworkSentimentAnalysis: boolean;
  OptionsEnableTopicAssignmentRules: boolean;
  OptionsEinsteinAnswersEnabled: boolean;
  OptionsCWBannerState: boolean;
  OptionsTopicSuggestionsEnabled: boolean;
  OptionsEnableTalkingAboutStats: boolean;
  OptionsUpDownVoteEnabled: boolean;
  OptionsDisableWorkspaceInfo: boolean;
  OptionsEinsteinAnswersQAEnabled: boolean;
  OptionsEinsteinAnswersKAEnabled: boolean;
  OptionsRecognitionBadgingEnabled: boolean;
  OptionsThreadedDiscussionsEnabled: boolean;
  OptionsMemberVisibility: boolean;
  OptionsMobileImageOptimizationEnabled: boolean;
  OptionsGuestMemberVisibility: boolean;
  OptionsActionOverrideEnabled: boolean;
  WelcomeEmailTemplateId: string;
  ChangePasswordEmailTemplateId: string;
  ForgotPasswordEmailTemplateId: string;
  LockoutEmailTemplateId: string | null;
  VerificationEmailTemplateId: string | null;
  ChgEmailVerOldEmailTemplateId: string | null;
  ChgEmailVerNewEmailTemplateId: string | null;
  EmailSenderName: string;
  EmailSenderAddress: string;
  NewSenderAddress: string | null;
  EmailFooterLogoId: string | null;
  EmailFooterText: string | null;
  UrlPathPrefix: string | null;
  CaseCommentEmailTemplateId: string | null;
  FirstActivationDate: DateString | null;
  MaxFileSizeKb: number | null;
  AllowedExtensions: string | null;
};

type ParentReferences$Network = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Network = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  NetworkCollaborationGroups: SObjectDefinition$CollaborationGroup;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  CustomBrands: SObjectDefinition$CustomBrand;
  NetworkEntitySubscriptions: SObjectDefinition$EntitySubscription;
  NetworkMembers: SObjectDefinition$NetworkMember;
  NetworkRecommendations: SObjectDefinition$Recommendation;
  NetworkBadges: SObjectDefinition$WorkBadge;
  NetworkBadgeDefinitions: SObjectDefinition$WorkBadgeDefinition;
  NetworkThanks: SObjectDefinition$WorkThanks;
};

interface SObjectDefinition$Network extends SObjectDefinition<'Network'> {
    Name: 'Network';
    Fields: Fields$Network;
    ParentReferences: ParentReferences$Network;
    ChildRelationships: ChildRelationships$Network;
  }

type Fields$NetworkDiscoverableLogin = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NetworkId: string;
  ExecuteApexHandlerAsId: string;
  UsernameLabel: string | null;
};

type ParentReferences$NetworkDiscoverableLogin = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network;
  ExecuteApexHandlerAs: SObjectDefinition$User;
};

type ChildRelationships$NetworkDiscoverableLogin = {
  //
};

interface SObjectDefinition$NetworkDiscoverableLogin extends SObjectDefinition<'NetworkDiscoverableLogin'> {
    Name: 'NetworkDiscoverableLogin';
    Fields: Fields$NetworkDiscoverableLogin;
    ParentReferences: ParentReferences$NetworkDiscoverableLogin;
    ChildRelationships: ChildRelationships$NetworkDiscoverableLogin;
  }

type Fields$NetworkMember = {
  //
  Id: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  NetworkId: string;
  MemberId: string;
  DigestFrequency: string;
  DefaultGroupNotificationFrequency: string;
  PreferencesDisableAllFeedsEmail: boolean;
  PreferencesDisableFollowersEmail: boolean;
  PreferencesDisableProfilePostEmail: boolean;
  PreferencesDisableChangeCommentEmail: boolean;
  PreferencesDisableLaterCommentEmail: boolean;
  PreferencesDisProfPostCommentEmail: boolean;
  PreferencesDisableMentionsPostEmail: boolean;
  PreferencesDisMentionsCommentEmail: boolean;
  PreferencesDisableLikeEmail: boolean;
  PreferencesDisCommentAfterLikeEmail: boolean;
  PreferencesDisableBookmarkEmail: boolean;
  PreferencesDisableSharePostEmail: boolean;
  PreferencesDisableItemFlaggedEmail: boolean;
  PreferencesDisableMessageEmail: boolean;
  PreferencesDisableEndorsementEmail: boolean;
  PreferencesDisablePendingReviewEmail: boolean;
  PreferencesDisableDirectMessageEmail: boolean;
  PreferencesDisableBestAnswerEmail: boolean;
  ReputationPoints: number;
  LastChatterActivityDate: DateString | null;
};

type ParentReferences$NetworkMember = {
  //
  CreatedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network;
  Member: SObjectDefinition$User;
};

type ChildRelationships$NetworkMember = {
  //
};

interface SObjectDefinition$NetworkMember extends SObjectDefinition<'NetworkMember'> {
    Name: 'NetworkMember';
    Fields: Fields$NetworkMember;
    ParentReferences: ParentReferences$NetworkMember;
    ChildRelationships: ChildRelationships$NetworkMember;
  }

type Fields$NetworkMemberGroup = {
  //
  Id: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  NetworkId: string;
  AssignmentStatus: string;
};

type ParentReferences$NetworkMemberGroup = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$NetworkMemberGroup = {
  //
};

interface SObjectDefinition$NetworkMemberGroup extends SObjectDefinition<'NetworkMemberGroup'> {
    Name: 'NetworkMemberGroup';
    Fields: Fields$NetworkMemberGroup;
    ParentReferences: ParentReferences$NetworkMemberGroup;
    ChildRelationships: ChildRelationships$NetworkMemberGroup;
  }

type Fields$NetworkPageOverride = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NetworkId: string;
  OverrideType: string;
  OverrideSetting: string;
};

type ParentReferences$NetworkPageOverride = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network;
};

type ChildRelationships$NetworkPageOverride = {
  //
};

interface SObjectDefinition$NetworkPageOverride extends SObjectDefinition<'NetworkPageOverride'> {
    Name: 'NetworkPageOverride';
    Fields: Fields$NetworkPageOverride;
    ParentReferences: ParentReferences$NetworkPageOverride;
    ChildRelationships: ChildRelationships$NetworkPageOverride;
  }

type Fields$NetworkSelfRegistration = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NetworkId: string;
  AccountId: string | null;
  OptionsShowFirstName: boolean;
  OptionsShowLastName: boolean;
  OptionsShowUsername: boolean;
  OptionsShowNickname: boolean;
  OptionsShowMobilePhone: boolean;
  OptionsShowEmail: boolean;
  OptionsIncludePassword: boolean;
  ExecuteApexHandlerAsId: string | null;
  VerificationMethod: string | null;
};

type ParentReferences$NetworkSelfRegistration = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network;
  Account: SObjectDefinition$Account | null;
  ExecuteApexHandlerAs: SObjectDefinition$User | null;
};

type ChildRelationships$NetworkSelfRegistration = {
  //
};

interface SObjectDefinition$NetworkSelfRegistration extends SObjectDefinition<'NetworkSelfRegistration'> {
    Name: 'NetworkSelfRegistration';
    Fields: Fields$NetworkSelfRegistration;
    ParentReferences: ParentReferences$NetworkSelfRegistration;
    ChildRelationships: ChildRelationships$NetworkSelfRegistration;
  }

type Fields$Note = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Title: string;
  IsPrivate: boolean;
  Body: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Note = {
  //
  Parent: SObjectDefinition$Name;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Note = {
  //
};

interface SObjectDefinition$Note extends SObjectDefinition<'Note'> {
    Name: 'Note';
    Fields: Fields$Note;
    ParentReferences: ParentReferences$Note;
    ChildRelationships: ChildRelationships$Note;
  }

type Fields$NoteAndAttachment = {
  //
  Id: string;
  IsDeleted: boolean;
  IsNote: boolean;
  ParentId: string;
  Title: string | null;
  IsPrivate: boolean;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$NoteAndAttachment = {
  //
  Parent: SObjectDefinition$Name;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$NoteAndAttachment = {
  //
};

interface SObjectDefinition$NoteAndAttachment extends SObjectDefinition<'NoteAndAttachment'> {
    Name: 'NoteAndAttachment';
    Fields: Fields$NoteAndAttachment;
    ParentReferences: ParentReferences$NoteAndAttachment;
    ChildRelationships: ChildRelationships$NoteAndAttachment;
  }

type Fields$Notifica__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Ente__c: string | null;
  API_Name_Object__c: string | null;
  Atterraggio__c: string | null;
  Contact__c: string | null;
  Oggetto__c: string | null;
  TargetId__c: string | null;
};

type ParentReferences$Notifica__ChangeEvent = {
  //
};

type ChildRelationships$Notifica__ChangeEvent = {
  //
};

interface SObjectDefinition$Notifica__ChangeEvent extends SObjectDefinition<'Notifica__ChangeEvent'> {
    Name: 'Notifica__ChangeEvent';
    Fields: Fields$Notifica__ChangeEvent;
    ParentReferences: ParentReferences$Notifica__ChangeEvent;
    ChildRelationships: ChildRelationships$Notifica__ChangeEvent;
  }

type Fields$Notifica__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Notifica__History = {
  //
  Parent: SObjectDefinition$Notifica__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Notifica__History = {
  //
};

interface SObjectDefinition$Notifica__History extends SObjectDefinition<'Notifica__History'> {
    Name: 'Notifica__History';
    Fields: Fields$Notifica__History;
    ParentReferences: ParentReferences$Notifica__History;
    ChildRelationships: ChildRelationships$Notifica__History;
  }

type Fields$Notifica__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Ente__c: string;
  API_Name_Object__c: string;
  Atterraggio__c: string;
  Contact__c: string;
  Oggetto__c: string;
  TargetId__c: string;
};

type ParentReferences$Notifica__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Ente__r: SObjectDefinition$Account;
  Contact__r: SObjectDefinition$Contact;
};

type ChildRelationships$Notifica__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  Histories: SObjectDefinition$Notifica__History;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Notifica__c extends SObjectDefinition<'Notifica__c'> {
    Name: 'Notifica__c';
    Fields: Fields$Notifica__c;
    ParentReferences: ParentReferences$Notifica__c;
    ChildRelationships: ChildRelationships$Notifica__c;
  }

type Fields$OauthToken = {
  //
  Id: string;
  AccessToken: string | null;
  UserId: string | null;
  RequestToken: string | null;
  CreatedDate: DateString | null;
  AppName: string | null;
  LastUsedDate: DateString | null;
  UseCount: number | null;
  DeleteToken: string | null;
  AppMenuItemId: string | null;
};

type ParentReferences$OauthToken = {
  //
  User: SObjectDefinition$User | null;
  AppMenuItem: SObjectDefinition$AppMenuItem | null;
};

type ChildRelationships$OauthToken = {
  //
};

interface SObjectDefinition$OauthToken extends SObjectDefinition<'OauthToken'> {
    Name: 'OauthToken';
    Fields: Fields$OauthToken;
    ParentReferences: ParentReferences$OauthToken;
    ChildRelationships: ChildRelationships$OauthToken;
  }

type Fields$OmniRoutingEventStore = {
  //
  Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  UserId: string;
  WorkItemId: string;
  Type: string;
  AgentWorkId: string | null;
  PendingServiceRoutingId: string;
  QueueId: string | null;
  EventTime: DateString;
  AdditionalDetail: string | null;
};

type ParentReferences$OmniRoutingEventStore = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  AgentWork: SObjectDefinition$AgentWork | null;
  PendingServiceRouting: SObjectDefinition$PendingServiceRouting;
  Queue: SObjectDefinition$Group | null;
};

type ChildRelationships$OmniRoutingEventStore = {
  //
};

interface SObjectDefinition$OmniRoutingEventStore extends SObjectDefinition<'OmniRoutingEventStore'> {
    Name: 'OmniRoutingEventStore';
    Fields: Fields$OmniRoutingEventStore;
    ParentReferences: ParentReferences$OmniRoutingEventStore;
    ChildRelationships: ChildRelationships$OmniRoutingEventStore;
  }

type Fields$OmniSupervisorConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$OmniSupervisorConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OmniSupervisorConfig = {
  //
};

interface SObjectDefinition$OmniSupervisorConfig extends SObjectDefinition<'OmniSupervisorConfig'> {
    Name: 'OmniSupervisorConfig';
    Fields: Fields$OmniSupervisorConfig;
    ParentReferences: ParentReferences$OmniSupervisorConfig;
    ChildRelationships: ChildRelationships$OmniSupervisorConfig;
  }

type Fields$OmniSupervisorConfigGroup = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OmniSupervisorConfigId: string;
  GroupId: string | null;
};

type ParentReferences$OmniSupervisorConfigGroup = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OmniSupervisorConfig: SObjectDefinition$OmniSupervisorConfig;
  Group: SObjectDefinition$Group | null;
};

type ChildRelationships$OmniSupervisorConfigGroup = {
  //
};

interface SObjectDefinition$OmniSupervisorConfigGroup extends SObjectDefinition<'OmniSupervisorConfigGroup'> {
    Name: 'OmniSupervisorConfigGroup';
    Fields: Fields$OmniSupervisorConfigGroup;
    ParentReferences: ParentReferences$OmniSupervisorConfigGroup;
    ChildRelationships: ChildRelationships$OmniSupervisorConfigGroup;
  }

type Fields$OmniSupervisorConfigProfile = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OmniSupervisorConfigId: string;
};

type ParentReferences$OmniSupervisorConfigProfile = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OmniSupervisorConfig: SObjectDefinition$OmniSupervisorConfig;
};

type ChildRelationships$OmniSupervisorConfigProfile = {
  //
};

interface SObjectDefinition$OmniSupervisorConfigProfile extends SObjectDefinition<'OmniSupervisorConfigProfile'> {
    Name: 'OmniSupervisorConfigProfile';
    Fields: Fields$OmniSupervisorConfigProfile;
    ParentReferences: ParentReferences$OmniSupervisorConfigProfile;
    ChildRelationships: ChildRelationships$OmniSupervisorConfigProfile;
  }

type Fields$OmniSupervisorConfigUser = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OmniSupervisorConfigId: string;
  UserId: string | null;
};

type ParentReferences$OmniSupervisorConfigUser = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OmniSupervisorConfig: SObjectDefinition$OmniSupervisorConfig;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$OmniSupervisorConfigUser = {
  //
};

interface SObjectDefinition$OmniSupervisorConfigUser extends SObjectDefinition<'OmniSupervisorConfigUser'> {
    Name: 'OmniSupervisorConfigUser';
    Fields: Fields$OmniSupervisorConfigUser;
    ParentReferences: ParentReferences$OmniSupervisorConfigUser;
    ChildRelationships: ChildRelationships$OmniSupervisorConfigUser;
  }

type Fields$OnboardingMetrics = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  SeenCount: number | null;
  ExperienceName: string;
};

type ParentReferences$OnboardingMetrics = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
};

type ChildRelationships$OnboardingMetrics = {
  //
};

interface SObjectDefinition$OnboardingMetrics extends SObjectDefinition<'OnboardingMetrics'> {
    Name: 'OnboardingMetrics';
    Fields: Fields$OnboardingMetrics;
    ParentReferences: ParentReferences$OnboardingMetrics;
    ChildRelationships: ChildRelationships$OnboardingMetrics;
  }

type Fields$OpenActivity = {
  //
  Id: string;
  AccountId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  Subject: string | null;
  IsTask: boolean;
  ActivityDate: DateString | null;
  ActivityDateTime: DateString | null;
  OwnerId: string | null;
  Status: string | null;
  Priority: string | null;
  IsHighPriority: boolean;
  ActivityType: string | null;
  IsClosed: boolean;
  IsAllDayEvent: boolean;
  IsVisibleInSelfService: boolean;
  DurationInMinutes: number | null;
  Location: string | null;
  Description: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EndDateTime: DateString | null;
  StartDateTime: DateString | null;
  PrimaryWhoId: string | null;
  PrimaryAccountId: string | null;
  ActivitySubtype: string | null;
  AlternateDetailId: string | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$OpenActivity = {
  //
  Account: SObjectDefinition$Account | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PrimaryWho: SObjectDefinition$Name | null;
  PrimaryAccount: SObjectDefinition$Account | null;
  AlternateDetail: SObjectDefinition$EmailMessage | null;
  Requirement__r: SObjectDefinition$outfunds__Requirement__c | null;
  Piano_di_migrazione__r: SObjectDefinition$Case | null;
  Checklist__r: SObjectDefinition$Checklist__c | null;
  EnteLookup__r: SObjectDefinition$Account | null;
  Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Tag_colleghi__r: SObjectDefinition$User | null;
  Counter__r: SObjectDefinition$Counter__c | null;
  Servizio__r: SObjectDefinition$Servizio_Richiesta__c | null;
  Registro_eventi_ente__r: SObjectDefinition$Registro_eventi_ente__c | null;
};

type ChildRelationships$OpenActivity = {
  //
};

interface SObjectDefinition$OpenActivity extends SObjectDefinition<'OpenActivity'> {
    Name: 'OpenActivity';
    Fields: Fields$OpenActivity;
    ParentReferences: ParentReferences$OpenActivity;
    ChildRelationships: ChildRelationships$OpenActivity;
  }

type Fields$Opportunity = {
  //
  Id: string;
  IsDeleted: boolean;
  AccountId: string | null;
  Name: string;
  Description: string | null;
  StageName: string;
  Amount: number | null;
  Probability: number | null;
  CloseDate: DateString;
  Type: string | null;
  NextStep: string | null;
  LeadSource: string | null;
  IsClosed: boolean;
  IsWon: boolean;
  ForecastCategory: string;
  ForecastCategoryName: string | null;
  CampaignId: string | null;
  HasOpportunityLineItem: boolean;
  Pricebook2Id: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  FiscalQuarter: number | null;
  FiscalYear: number | null;
  Fiscal: string | null;
  ContactId: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SyncedQuoteId: string | null;
  HasOpenActivity: boolean;
  HasOverdueTask: boolean;
  LastAmountChangedHistoryId: string | null;
  LastCloseDateChangedHistoryId: string | null;
  Budget_Confirmed__c: boolean;
  Discovery_Completed__c: boolean;
  ROI_Analysis_Completed__c: boolean;
  Loss_Reason__c: string | null;
};

type ParentReferences$Opportunity = {
  //
  Account: SObjectDefinition$Account | null;
  Campaign: SObjectDefinition$Campaign | null;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SyncedQuote: SObjectDefinition$Quote | null;
  LastAmountChangedHistory: SObjectDefinition$OpportunityHistory | null;
  LastCloseDateChangedHistory: SObjectDefinition$OpportunityHistory | null;
};

type ChildRelationships$Opportunity = {
  //
  AccountPartners: SObjectDefinition$AccountPartner;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  OpportunityCompetitors: SObjectDefinition$OpportunityCompetitor;
  OpportunityContactRoles: SObjectDefinition$OpportunityContactRole;
  Feeds: SObjectDefinition$OpportunityFeed;
  Histories: SObjectDefinition$OpportunityFieldHistory;
  OpportunityHistories: SObjectDefinition$OpportunityHistory;
  OpportunityLineItems: SObjectDefinition$OpportunityLineItem;
  OpportunityPartnersFrom: SObjectDefinition$OpportunityPartner;
  Shares: SObjectDefinition$OpportunityShare;
  Partners: SObjectDefinition$Partner;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Opportunity extends SObjectDefinition<'Opportunity'> {
    Name: 'Opportunity';
    Fields: Fields$Opportunity;
    ParentReferences: ParentReferences$Opportunity;
    ChildRelationships: ChildRelationships$Opportunity;
  }

type Fields$OpportunityChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  AccountId: string | null;
  Name: string | null;
  Description: string | null;
  StageName: string | null;
  Amount: number | null;
  Probability: number | null;
  CloseDate: DateString | null;
  Type: string | null;
  NextStep: string | null;
  LeadSource: string | null;
  IsClosed: boolean;
  IsWon: boolean;
  ForecastCategory: string | null;
  ForecastCategoryName: string | null;
  CampaignId: string | null;
  HasOpportunityLineItem: boolean;
  Pricebook2Id: string | null;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ContactId: string | null;
  SyncedQuoteId: string | null;
  LastAmountChangedHistoryId: string | null;
  LastCloseDateChangedHistoryId: string | null;
  Budget_Confirmed__c: boolean;
  Discovery_Completed__c: boolean;
  ROI_Analysis_Completed__c: boolean;
  Loss_Reason__c: string | null;
};

type ParentReferences$OpportunityChangeEvent = {
  //
};

type ChildRelationships$OpportunityChangeEvent = {
  //
};

interface SObjectDefinition$OpportunityChangeEvent extends SObjectDefinition<'OpportunityChangeEvent'> {
    Name: 'OpportunityChangeEvent';
    Fields: Fields$OpportunityChangeEvent;
    ParentReferences: ParentReferences$OpportunityChangeEvent;
    ChildRelationships: ChildRelationships$OpportunityChangeEvent;
  }

type Fields$OpportunityCompetitor = {
  //
  Id: string;
  OpportunityId: string;
  CompetitorName: string | null;
  Strengths: string | null;
  Weaknesses: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityCompetitor = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityCompetitor = {
  //
};

interface SObjectDefinition$OpportunityCompetitor extends SObjectDefinition<'OpportunityCompetitor'> {
    Name: 'OpportunityCompetitor';
    Fields: Fields$OpportunityCompetitor;
    ParentReferences: ParentReferences$OpportunityCompetitor;
    ChildRelationships: ChildRelationships$OpportunityCompetitor;
  }

type Fields$OpportunityContactRole = {
  //
  Id: string;
  OpportunityId: string;
  ContactId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityContactRole = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityContactRole = {
  //
};

interface SObjectDefinition$OpportunityContactRole extends SObjectDefinition<'OpportunityContactRole'> {
    Name: 'OpportunityContactRole';
    Fields: Fields$OpportunityContactRole;
    ParentReferences: ParentReferences$OpportunityContactRole;
    ChildRelationships: ChildRelationships$OpportunityContactRole;
  }

type Fields$OpportunityContactRoleChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OpportunityId: string | null;
  ContactId: string | null;
  Role: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$OpportunityContactRoleChangeEvent = {
  //
};

type ChildRelationships$OpportunityContactRoleChangeEvent = {
  //
};

interface SObjectDefinition$OpportunityContactRoleChangeEvent extends SObjectDefinition<'OpportunityContactRoleChangeEvent'> {
    Name: 'OpportunityContactRoleChangeEvent';
    Fields: Fields$OpportunityContactRoleChangeEvent;
    ParentReferences: ParentReferences$OpportunityContactRoleChangeEvent;
    ChildRelationships: ChildRelationships$OpportunityContactRoleChangeEvent;
  }

type Fields$OpportunityFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OpportunityFeed = {
  //
  Parent: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OpportunityFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OpportunityFeed extends SObjectDefinition<'OpportunityFeed'> {
    Name: 'OpportunityFeed';
    Fields: Fields$OpportunityFeed;
    ParentReferences: ParentReferences$OpportunityFeed;
    ChildRelationships: ChildRelationships$OpportunityFeed;
  }

type Fields$OpportunityFieldHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  OpportunityId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$OpportunityFieldHistory = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityFieldHistory = {
  //
};

interface SObjectDefinition$OpportunityFieldHistory extends SObjectDefinition<'OpportunityFieldHistory'> {
    Name: 'OpportunityFieldHistory';
    Fields: Fields$OpportunityFieldHistory;
    ParentReferences: ParentReferences$OpportunityFieldHistory;
    ChildRelationships: ChildRelationships$OpportunityFieldHistory;
  }

type Fields$OpportunityHistory = {
  //
  Id: string;
  OpportunityId: string;
  CreatedById: string;
  CreatedDate: DateString;
  StageName: string;
  Amount: number | null;
  ExpectedRevenue: number | null;
  CloseDate: DateString | null;
  Probability: number | null;
  ForecastCategory: string | null;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  PrevAmount: number | null;
  PrevCloseDate: DateString | null;
};

type ParentReferences$OpportunityHistory = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityHistory = {
  //
  OpportunitiesAmountChanged: SObjectDefinition$Opportunity;
  OpportunitiesCloseDateChanged: SObjectDefinition$Opportunity;
};

interface SObjectDefinition$OpportunityHistory extends SObjectDefinition<'OpportunityHistory'> {
    Name: 'OpportunityHistory';
    Fields: Fields$OpportunityHistory;
    ParentReferences: ParentReferences$OpportunityHistory;
    ChildRelationships: ChildRelationships$OpportunityHistory;
  }

type Fields$OpportunityLineItem = {
  //
  Id: string;
  OpportunityId: string;
  SortOrder: number | null;
  PricebookEntryId: string | null;
  Product2Id: string | null;
  ProductCode: string | null;
  Name: string | null;
  Quantity: number;
  TotalPrice: number | null;
  UnitPrice: number | null;
  ListPrice: number | null;
  ServiceDate: DateString | null;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$OpportunityLineItem = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  PricebookEntry: SObjectDefinition$PricebookEntry | null;
  Product2: SObjectDefinition$Product2 | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityLineItem = {
  //
};

interface SObjectDefinition$OpportunityLineItem extends SObjectDefinition<'OpportunityLineItem'> {
    Name: 'OpportunityLineItem';
    Fields: Fields$OpportunityLineItem;
    ParentReferences: ParentReferences$OpportunityLineItem;
    ChildRelationships: ChildRelationships$OpportunityLineItem;
  }

type Fields$OpportunityPartner = {
  //
  Id: string;
  OpportunityId: string;
  AccountToId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ReversePartnerId: string | null;
};

type ParentReferences$OpportunityPartner = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  AccountTo: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityPartner = {
  //
};

interface SObjectDefinition$OpportunityPartner extends SObjectDefinition<'OpportunityPartner'> {
    Name: 'OpportunityPartner';
    Fields: Fields$OpportunityPartner;
    ParentReferences: ParentReferences$OpportunityPartner;
    ChildRelationships: ChildRelationships$OpportunityPartner;
  }

type Fields$OpportunityShare = {
  //
  Id: string;
  OpportunityId: string;
  UserOrGroupId: string;
  OpportunityAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityShare = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityShare = {
  //
};

interface SObjectDefinition$OpportunityShare extends SObjectDefinition<'OpportunityShare'> {
    Name: 'OpportunityShare';
    Fields: Fields$OpportunityShare;
    ParentReferences: ParentReferences$OpportunityShare;
    ChildRelationships: ChildRelationships$OpportunityShare;
  }

type Fields$OpportunityStage = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  IsActive: boolean;
  SortOrder: number | null;
  IsClosed: boolean;
  IsWon: boolean;
  ForecastCategory: string;
  ForecastCategoryName: string;
  DefaultProbability: number | null;
  Description: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$OpportunityStage = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityStage = {
  //
};

interface SObjectDefinition$OpportunityStage extends SObjectDefinition<'OpportunityStage'> {
    Name: 'OpportunityStage';
    Fields: Fields$OpportunityStage;
    ParentReferences: ParentReferences$OpportunityStage;
    ChildRelationships: ChildRelationships$OpportunityStage;
  }

type Fields$Order = {
  //
  Id: string;
  OwnerId: string;
  ContractId: string | null;
  AccountId: string | null;
  Pricebook2Id: string | null;
  OriginalOrderId: string | null;
  EffectiveDate: DateString;
  EndDate: DateString | null;
  IsReductionOrder: boolean;
  Status: string;
  Description: string | null;
  CustomerAuthorizedById: string | null;
  CompanyAuthorizedById: string | null;
  Type: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ActivatedDate: DateString | null;
  ActivatedById: string | null;
  StatusCode: string;
  OrderNumber: string;
  TotalAmount: number;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Order = {
  //
  Owner: SObjectDefinition$Name;
  Contract: SObjectDefinition$Contract | null;
  Account: SObjectDefinition$Account | null;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  OriginalOrder: SObjectDefinition$Order | null;
  CustomerAuthorizedBy: SObjectDefinition$Contact | null;
  CompanyAuthorizedBy: SObjectDefinition$User | null;
  ActivatedBy: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Order = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DigitalSignatures: SObjectDefinition$DigitalSignature;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Orders: SObjectDefinition$Order;
  Feeds: SObjectDefinition$OrderFeed;
  Histories: SObjectDefinition$OrderHistory;
  OrderItems: SObjectDefinition$OrderItem;
  Shares: SObjectDefinition$OrderShare;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  WorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
};

interface SObjectDefinition$Order extends SObjectDefinition<'Order'> {
    Name: 'Order';
    Fields: Fields$Order;
    ParentReferences: ParentReferences$Order;
    ChildRelationships: ChildRelationships$Order;
  }

type Fields$OrderChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  ContractId: string | null;
  AccountId: string | null;
  Pricebook2Id: string | null;
  OriginalOrderId: string | null;
  EffectiveDate: DateString | null;
  EndDate: DateString | null;
  IsReductionOrder: boolean;
  Status: string | null;
  Description: string | null;
  CustomerAuthorizedById: string | null;
  CompanyAuthorizedById: string | null;
  Type: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ActivatedDate: DateString | null;
  ActivatedById: string | null;
  StatusCode: string | null;
  OrderNumber: string;
  TotalAmount: number | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$OrderChangeEvent = {
  //
};

type ChildRelationships$OrderChangeEvent = {
  //
};

interface SObjectDefinition$OrderChangeEvent extends SObjectDefinition<'OrderChangeEvent'> {
    Name: 'OrderChangeEvent';
    Fields: Fields$OrderChangeEvent;
    ParentReferences: ParentReferences$OrderChangeEvent;
    ChildRelationships: ChildRelationships$OrderChangeEvent;
  }

type Fields$OrderFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OrderFeed = {
  //
  Parent: SObjectDefinition$Order;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OrderFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OrderFeed extends SObjectDefinition<'OrderFeed'> {
    Name: 'OrderFeed';
    Fields: Fields$OrderFeed;
    ParentReferences: ParentReferences$OrderFeed;
    ChildRelationships: ChildRelationships$OrderFeed;
  }

type Fields$OrderHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  OrderId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$OrderHistory = {
  //
  Order: SObjectDefinition$Order;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderHistory = {
  //
};

interface SObjectDefinition$OrderHistory extends SObjectDefinition<'OrderHistory'> {
    Name: 'OrderHistory';
    Fields: Fields$OrderHistory;
    ParentReferences: ParentReferences$OrderHistory;
    ChildRelationships: ChildRelationships$OrderHistory;
  }

type Fields$OrderItem = {
  //
  Id: string;
  Product2Id: string | null;
  IsDeleted: boolean;
  OrderId: string;
  PricebookEntryId: string;
  OriginalOrderItemId: string | null;
  AvailableQuantity: number | null;
  Quantity: number;
  UnitPrice: number | null;
  ListPrice: number | null;
  TotalPrice: number | null;
  ServiceDate: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OrderItemNumber: string;
};

type ParentReferences$OrderItem = {
  //
  Product2: SObjectDefinition$Product2 | null;
  Order: SObjectDefinition$Order;
  PricebookEntry: SObjectDefinition$PricebookEntry;
  OriginalOrderItem: SObjectDefinition$OrderItem | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderItem = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ChildOrderItems: SObjectDefinition$OrderItem;
  Feeds: SObjectDefinition$OrderItemFeed;
  Histories: SObjectDefinition$OrderItemHistory;
  ProcessExceptions: SObjectDefinition$ProcessException;
};

interface SObjectDefinition$OrderItem extends SObjectDefinition<'OrderItem'> {
    Name: 'OrderItem';
    Fields: Fields$OrderItem;
    ParentReferences: ParentReferences$OrderItem;
    ChildRelationships: ChildRelationships$OrderItem;
  }

type Fields$OrderItemChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OrderId: string | null;
  PricebookEntryId: string | null;
  OriginalOrderItemId: string | null;
  AvailableQuantity: number | null;
  Quantity: number | null;
  UnitPrice: number | null;
  ListPrice: number | null;
  ServiceDate: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  OrderItemNumber: string;
};

type ParentReferences$OrderItemChangeEvent = {
  //
};

type ChildRelationships$OrderItemChangeEvent = {
  //
};

interface SObjectDefinition$OrderItemChangeEvent extends SObjectDefinition<'OrderItemChangeEvent'> {
    Name: 'OrderItemChangeEvent';
    Fields: Fields$OrderItemChangeEvent;
    ParentReferences: ParentReferences$OrderItemChangeEvent;
    ChildRelationships: ChildRelationships$OrderItemChangeEvent;
  }

type Fields$OrderItemFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OrderItemFeed = {
  //
  Parent: SObjectDefinition$OrderItem;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OrderItemFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OrderItemFeed extends SObjectDefinition<'OrderItemFeed'> {
    Name: 'OrderItemFeed';
    Fields: Fields$OrderItemFeed;
    ParentReferences: ParentReferences$OrderItemFeed;
    ChildRelationships: ChildRelationships$OrderItemFeed;
  }

type Fields$OrderItemHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  OrderItemId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$OrderItemHistory = {
  //
  OrderItem: SObjectDefinition$OrderItem;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderItemHistory = {
  //
};

interface SObjectDefinition$OrderItemHistory extends SObjectDefinition<'OrderItemHistory'> {
    Name: 'OrderItemHistory';
    Fields: Fields$OrderItemHistory;
    ParentReferences: ParentReferences$OrderItemHistory;
    ChildRelationships: ChildRelationships$OrderItemHistory;
  }

type Fields$OrderShare = {
  //
  Id: string;
  OrderId: string;
  UserOrGroupId: string;
  OrderAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$OrderShare = {
  //
  Order: SObjectDefinition$Order;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderShare = {
  //
};

interface SObjectDefinition$OrderShare extends SObjectDefinition<'OrderShare'> {
    Name: 'OrderShare';
    Fields: Fields$OrderShare;
    ParentReferences: ParentReferences$OrderShare;
    ChildRelationships: ChildRelationships$OrderShare;
  }

type Fields$OrderStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$OrderStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderStatus = {
  //
};

interface SObjectDefinition$OrderStatus extends SObjectDefinition<'OrderStatus'> {
    Name: 'OrderStatus';
    Fields: Fields$OrderStatus;
    ParentReferences: ParentReferences$OrderStatus;
    ChildRelationships: ChildRelationships$OrderStatus;
  }

type Fields$OrgLifecycleNotification = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LifecycleRequestType: string | null;
  LifecycleRequestId: string | null;
  OrgId: string | null;
  Status: string | null;
  StatusCode: string | null;
};

type ParentReferences$OrgLifecycleNotification = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OrgLifecycleNotification = {
  //
};

interface SObjectDefinition$OrgLifecycleNotification extends SObjectDefinition<'OrgLifecycleNotification'> {
    Name: 'OrgLifecycleNotification';
    Fields: Fields$OrgLifecycleNotification;
    ParentReferences: ParentReferences$OrgLifecycleNotification;
    ChildRelationships: ChildRelationships$OrgLifecycleNotification;
  }

type Fields$OutgoingEmail = {
  //
  Id: string;
  ExternalId: string | null;
  ValidatedFromAddress: string | null;
  ToAddress: string | null;
  CcAddress: string | null;
  BccAddress: string | null;
  Subject: string | null;
  TextBody: string | null;
  HtmlBody: string | null;
  RelatedToId: string | null;
  WhoId: string | null;
  EmailTemplateId: string | null;
  InReplyTo: string | null;
  References: string | null;
  MessageId: string | null;
};

type ParentReferences$OutgoingEmail = {
  //
  RelatedTo: SObjectDefinition$Name | null;
  Who: SObjectDefinition$Name | null;
  EmailTemplate: SObjectDefinition$EmailTemplate | null;
};

type ChildRelationships$OutgoingEmail = {
  //
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
};

interface SObjectDefinition$OutgoingEmail extends SObjectDefinition<'OutgoingEmail'> {
    Name: 'OutgoingEmail';
    Fields: Fields$OutgoingEmail;
    ParentReferences: ParentReferences$OutgoingEmail;
    ChildRelationships: ChildRelationships$OutgoingEmail;
  }

type Fields$OutgoingEmailRelation = {
  //
  Id: string;
  ExternalId: string | null;
  OutgoingEmailId: string | null;
  RelationId: string | null;
  RelationAddress: string | null;
};

type ParentReferences$OutgoingEmailRelation = {
  //
  Relation: SObjectDefinition$Name | null;
};

type ChildRelationships$OutgoingEmailRelation = {
  //
};

interface SObjectDefinition$OutgoingEmailRelation extends SObjectDefinition<'OutgoingEmailRelation'> {
    Name: 'OutgoingEmailRelation';
    Fields: Fields$OutgoingEmailRelation;
    ParentReferences: ParentReferences$OutgoingEmailRelation;
    ChildRelationships: ChildRelationships$OutgoingEmailRelation;
  }

type Fields$OwnedContentDocument = {
  //
  Id: string;
  IsDeleted: boolean;
  OwnerId: string;
  ContentDocumentId: string | null;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  ContentUrl: string | null;
  ExternalDataSourceName: string | null;
  ExternalDataSourceType: string | null;
};

type ParentReferences$OwnedContentDocument = {
  //
  Owner: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OwnedContentDocument = {
  //
};

interface SObjectDefinition$OwnedContentDocument extends SObjectDefinition<'OwnedContentDocument'> {
    Name: 'OwnedContentDocument';
    Fields: Fields$OwnedContentDocument;
    ParentReferences: ParentReferences$OwnedContentDocument;
    ChildRelationships: ChildRelationships$OwnedContentDocument;
  }

type Fields$OwnerChangeOptionInfo = {
  //
  Id: string;
  DurableId: string | null;
  EntityDefinitionId: string | null;
  Name: string | null;
  Label: string | null;
  IsEditable: boolean;
  DefaultValue: boolean;
  ParentId: string | null;
};

type ParentReferences$OwnerChangeOptionInfo = {
  //
};

type ChildRelationships$OwnerChangeOptionInfo = {
  //
  ChildOwnerChangeOptionInfo: SObjectDefinition$OwnerChangeOptionInfo;
};

interface SObjectDefinition$OwnerChangeOptionInfo extends SObjectDefinition<'OwnerChangeOptionInfo'> {
    Name: 'OwnerChangeOptionInfo';
    Fields: Fields$OwnerChangeOptionInfo;
    ParentReferences: ParentReferences$OwnerChangeOptionInfo;
    ChildRelationships: ChildRelationships$OwnerChangeOptionInfo;
  }

type Fields$Partner = {
  //
  Id: string;
  OpportunityId: string | null;
  AccountFromId: string | null;
  AccountToId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ReversePartnerId: string | null;
};

type ParentReferences$Partner = {
  //
  Opportunity: SObjectDefinition$Opportunity | null;
  AccountFrom: SObjectDefinition$Account | null;
  AccountTo: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Partner = {
  //
};

interface SObjectDefinition$Partner extends SObjectDefinition<'Partner'> {
    Name: 'Partner';
    Fields: Fields$Partner;
    ParentReferences: ParentReferences$Partner;
    ChildRelationships: ChildRelationships$Partner;
  }

type Fields$PartnerRole = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  ReverseRole: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$PartnerRole = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PartnerRole = {
  //
};

interface SObjectDefinition$PartnerRole extends SObjectDefinition<'PartnerRole'> {
    Name: 'PartnerRole';
    Fields: Fields$PartnerRole;
    ParentReferences: ParentReferences$PartnerRole;
    ChildRelationships: ChildRelationships$PartnerRole;
  }

type Fields$PartyConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  PartyId: string;
  Action: string;
  PrivacyConsentStatus: string;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$PartyConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Party: SObjectDefinition$Individual;
};

type ChildRelationships$PartyConsent = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$PartyConsentFeed;
  Histories: SObjectDefinition$PartyConsentHistory;
  Shares: SObjectDefinition$PartyConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$PartyConsent extends SObjectDefinition<'PartyConsent'> {
    Name: 'PartyConsent';
    Fields: Fields$PartyConsent;
    ParentReferences: ParentReferences$PartyConsent;
    ChildRelationships: ChildRelationships$PartyConsent;
  }

type Fields$PartyConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  PartyId: string | null;
  Action: string | null;
  PrivacyConsentStatus: string | null;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$PartyConsentChangeEvent = {
  //
};

type ChildRelationships$PartyConsentChangeEvent = {
  //
};

interface SObjectDefinition$PartyConsentChangeEvent extends SObjectDefinition<'PartyConsentChangeEvent'> {
    Name: 'PartyConsentChangeEvent';
    Fields: Fields$PartyConsentChangeEvent;
    ParentReferences: ParentReferences$PartyConsentChangeEvent;
    ChildRelationships: ChildRelationships$PartyConsentChangeEvent;
  }

type Fields$PartyConsentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PartyConsentFeed = {
  //
  Parent: SObjectDefinition$PartyConsent;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PartyConsentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PartyConsentFeed extends SObjectDefinition<'PartyConsentFeed'> {
    Name: 'PartyConsentFeed';
    Fields: Fields$PartyConsentFeed;
    ParentReferences: ParentReferences$PartyConsentFeed;
    ChildRelationships: ChildRelationships$PartyConsentFeed;
  }

type Fields$PartyConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PartyConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PartyConsentHistory = {
  //
  PartyConsent: SObjectDefinition$PartyConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PartyConsentHistory = {
  //
};

interface SObjectDefinition$PartyConsentHistory extends SObjectDefinition<'PartyConsentHistory'> {
    Name: 'PartyConsentHistory';
    Fields: Fields$PartyConsentHistory;
    ParentReferences: ParentReferences$PartyConsentHistory;
    ChildRelationships: ChildRelationships$PartyConsentHistory;
  }

type Fields$PartyConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PartyConsentShare = {
  //
  Parent: SObjectDefinition$PartyConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PartyConsentShare = {
  //
};

interface SObjectDefinition$PartyConsentShare extends SObjectDefinition<'PartyConsentShare'> {
    Name: 'PartyConsentShare';
    Fields: Fields$PartyConsentShare;
    ParentReferences: ParentReferences$PartyConsentShare;
    ChildRelationships: ChildRelationships$PartyConsentShare;
  }

type Fields$PendingServiceRouting = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  WorkItemId: string;
  QueueId: string | null;
  IsPushAttempted: boolean;
  ServiceChannelId: string;
  IsPushed: boolean;
  Serial: number | null;
  LastDeclinedAgentSession: string | null;
  IsTransfer: boolean;
  RoutingModel: string | null;
  CustomRequestedDateTime: DateString | null;
  RoutingPriority: number | null;
  RoutingType: string | null;
  IsReadyForRouting: boolean;
  CapacityWeight: number | null;
  CapacityPercentage: number | null;
  PushTimeout: number | null;
  PreferredUserId: string | null;
  DropAdditionalSkillsTimeout: number | null;
  GroupId: string | null;
  IsPreferredUserRequired: boolean;
};

type ParentReferences$PendingServiceRouting = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkItem: SObjectDefinition$Name;
  Queue: SObjectDefinition$Group | null;
  ServiceChannel: SObjectDefinition$ServiceChannel;
  PreferredUser: SObjectDefinition$User | null;
  Group: SObjectDefinition$Group | null;
};

type ChildRelationships$PendingServiceRouting = {
  //
  Shares: SObjectDefinition$PendingServiceRoutingShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$PendingServiceRouting extends SObjectDefinition<'PendingServiceRouting'> {
    Name: 'PendingServiceRouting';
    Fields: Fields$PendingServiceRouting;
    ParentReferences: ParentReferences$PendingServiceRouting;
    ChildRelationships: ChildRelationships$PendingServiceRouting;
  }

type Fields$PendingServiceRoutingShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PendingServiceRoutingShare = {
  //
  Parent: SObjectDefinition$PendingServiceRouting;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PendingServiceRoutingShare = {
  //
};

interface SObjectDefinition$PendingServiceRoutingShare extends SObjectDefinition<'PendingServiceRoutingShare'> {
    Name: 'PendingServiceRoutingShare';
    Fields: Fields$PendingServiceRoutingShare;
    ParentReferences: ParentReferences$PendingServiceRoutingShare;
    ChildRelationships: ChildRelationships$PendingServiceRoutingShare;
  }

type Fields$Period = {
  //
  Id: string;
  FiscalYearSettingsId: string | null;
  Type: string | null;
  StartDate: DateString;
  EndDate: DateString;
  SystemModstamp: DateString;
  IsForecastPeriod: boolean;
  QuarterLabel: string | null;
  PeriodLabel: string | null;
  Number: number | null;
  FullyQualifiedLabel: string | null;
};

type ParentReferences$Period = {
  //
  FiscalYearSettings: SObjectDefinition$FiscalYearSettings | null;
};

type ChildRelationships$Period = {
  //
};

interface SObjectDefinition$Period extends SObjectDefinition<'Period'> {
    Name: 'Period';
    Fields: Fields$Period;
    ParentReferences: ParentReferences$Period;
    ChildRelationships: ChildRelationships$Period;
  }

type Fields$PersonEducation = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$PersonEducation = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonEducation = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$PersonEducationFeed;
  Histories: SObjectDefinition$PersonEducationHistory;
  Shares: SObjectDefinition$PersonEducationShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$PersonEducation extends SObjectDefinition<'PersonEducation'> {
    Name: 'PersonEducation';
    Fields: Fields$PersonEducation;
    ParentReferences: ParentReferences$PersonEducation;
    ChildRelationships: ChildRelationships$PersonEducation;
  }

type Fields$PersonEducationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PersonEducationFeed = {
  //
  Parent: SObjectDefinition$PersonEducation;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PersonEducationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PersonEducationFeed extends SObjectDefinition<'PersonEducationFeed'> {
    Name: 'PersonEducationFeed';
    Fields: Fields$PersonEducationFeed;
    ParentReferences: ParentReferences$PersonEducationFeed;
    ChildRelationships: ChildRelationships$PersonEducationFeed;
  }

type Fields$PersonEducationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PersonEducationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PersonEducationHistory = {
  //
  PersonEducation: SObjectDefinition$PersonEducation;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonEducationHistory = {
  //
};

interface SObjectDefinition$PersonEducationHistory extends SObjectDefinition<'PersonEducationHistory'> {
    Name: 'PersonEducationHistory';
    Fields: Fields$PersonEducationHistory;
    ParentReferences: ParentReferences$PersonEducationHistory;
    ChildRelationships: ChildRelationships$PersonEducationHistory;
  }

type Fields$PersonEducationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PersonEducationShare = {
  //
  Parent: SObjectDefinition$PersonEducation;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonEducationShare = {
  //
};

interface SObjectDefinition$PersonEducationShare extends SObjectDefinition<'PersonEducationShare'> {
    Name: 'PersonEducationShare';
    Fields: Fields$PersonEducationShare;
    ParentReferences: ParentReferences$PersonEducationShare;
    ChildRelationships: ChildRelationships$PersonEducationShare;
  }

type Fields$PersonEmployment = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RelatedPersonId: string;
  Position: string | null;
  Occupation: string | null;
  EmploymentStatus: string | null;
  AnnualIncome: number | null;
  EmployerStreet: string | null;
  EmployerCity: string | null;
  EmployerState: string | null;
  EmployerPostalCode: string | null;
  EmployerCountry: string | null;
  EmployerLatitude: number | null;
  EmployerLongitude: number | null;
  EmployerGeocodeAccuracy: string | null;
  EmployerAddress: Address | null;
  EmployerPhone: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
};

type ParentReferences$PersonEmployment = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RelatedPerson: SObjectDefinition$Name;
};

type ChildRelationships$PersonEmployment = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Histories: SObjectDefinition$PersonEmploymentHistory;
  Shares: SObjectDefinition$PersonEmploymentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$PersonEmployment extends SObjectDefinition<'PersonEmployment'> {
    Name: 'PersonEmployment';
    Fields: Fields$PersonEmployment;
    ParentReferences: ParentReferences$PersonEmployment;
    ChildRelationships: ChildRelationships$PersonEmployment;
  }

type Fields$PersonEmploymentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PersonEmploymentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PersonEmploymentHistory = {
  //
  PersonEmployment: SObjectDefinition$PersonEmployment;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonEmploymentHistory = {
  //
};

interface SObjectDefinition$PersonEmploymentHistory extends SObjectDefinition<'PersonEmploymentHistory'> {
    Name: 'PersonEmploymentHistory';
    Fields: Fields$PersonEmploymentHistory;
    ParentReferences: ParentReferences$PersonEmploymentHistory;
    ChildRelationships: ChildRelationships$PersonEmploymentHistory;
  }

type Fields$PersonEmploymentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PersonEmploymentShare = {
  //
  Parent: SObjectDefinition$PersonEmployment;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonEmploymentShare = {
  //
};

interface SObjectDefinition$PersonEmploymentShare extends SObjectDefinition<'PersonEmploymentShare'> {
    Name: 'PersonEmploymentShare';
    Fields: Fields$PersonEmploymentShare;
    ParentReferences: ParentReferences$PersonEmploymentShare;
    ChildRelationships: ChildRelationships$PersonEmploymentShare;
  }

type Fields$PersonExamination = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ContactId: string | null;
  ExaminationDate: DateString | null;
  Score: number | null;
  Result: string | null;
  InstitutionName: string | null;
  VerificationStatus: string | null;
  VerificationDateTime: DateString | null;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  ExaminationId: string | null;
};

type ParentReferences$PersonExamination = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact: SObjectDefinition$Contact | null;
  Examination: SObjectDefinition$Examination | null;
};

type ChildRelationships$PersonExamination = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$PersonExaminationFeed;
  Histories: SObjectDefinition$PersonExaminationHistory;
  Shares: SObjectDefinition$PersonExaminationShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$PersonExamination extends SObjectDefinition<'PersonExamination'> {
    Name: 'PersonExamination';
    Fields: Fields$PersonExamination;
    ParentReferences: ParentReferences$PersonExamination;
    ChildRelationships: ChildRelationships$PersonExamination;
  }

type Fields$PersonExaminationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PersonExaminationFeed = {
  //
  Parent: SObjectDefinition$PersonExamination;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PersonExaminationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PersonExaminationFeed extends SObjectDefinition<'PersonExaminationFeed'> {
    Name: 'PersonExaminationFeed';
    Fields: Fields$PersonExaminationFeed;
    ParentReferences: ParentReferences$PersonExaminationFeed;
    ChildRelationships: ChildRelationships$PersonExaminationFeed;
  }

type Fields$PersonExaminationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PersonExaminationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PersonExaminationHistory = {
  //
  PersonExamination: SObjectDefinition$PersonExamination;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonExaminationHistory = {
  //
};

interface SObjectDefinition$PersonExaminationHistory extends SObjectDefinition<'PersonExaminationHistory'> {
    Name: 'PersonExaminationHistory';
    Fields: Fields$PersonExaminationHistory;
    ParentReferences: ParentReferences$PersonExaminationHistory;
    ChildRelationships: ChildRelationships$PersonExaminationHistory;
  }

type Fields$PersonExaminationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PersonExaminationShare = {
  //
  Parent: SObjectDefinition$PersonExamination;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PersonExaminationShare = {
  //
};

interface SObjectDefinition$PersonExaminationShare extends SObjectDefinition<'PersonExaminationShare'> {
    Name: 'PersonExaminationShare';
    Fields: Fields$PersonExaminationShare;
    ParentReferences: ParentReferences$PersonExaminationShare;
    ChildRelationships: ChildRelationships$PersonExaminationShare;
  }

type Fields$PersonalizationTargetInfo = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TargetType: string;
  GroupName: string;
  TargetValue: string;
  PublishStatus: string | null;
  DraftRowId: string | null;
  ContainerId: string;
};

type ParentReferences$PersonalizationTargetInfo = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DraftRow: SObjectDefinition$PersonalizationTargetInfo | null;
  Container: SObjectDefinition$Network;
};

type ChildRelationships$PersonalizationTargetInfo = {
  //
};

interface SObjectDefinition$PersonalizationTargetInfo extends SObjectDefinition<'PersonalizationTargetInfo'> {
    Name: 'PersonalizationTargetInfo';
    Fields: Fields$PersonalizationTargetInfo;
    ParentReferences: ParentReferences$PersonalizationTargetInfo;
    ChildRelationships: ChildRelationships$PersonalizationTargetInfo;
  }

type Fields$PicklistValueInfo = {
  //
  Id: string;
  DurableId: string | null;
  Value: string | null;
  Label: string | null;
  IsDefaultValue: boolean;
  IsActive: boolean;
  ValidFor: string | null;
  EntityParticleId: string | null;
};

type ParentReferences$PicklistValueInfo = {
  //
};

type ChildRelationships$PicklistValueInfo = {
  //
};

interface SObjectDefinition$PicklistValueInfo extends SObjectDefinition<'PicklistValueInfo'> {
    Name: 'PicklistValueInfo';
    Fields: Fields$PicklistValueInfo;
    ParentReferences: ParentReferences$PicklistValueInfo;
    ChildRelationships: ChildRelationships$PicklistValueInfo;
  }

type Fields$PlatformAction = {
  //
  Id: string;
  ExternalId: string | null;
  LastModifiedDate: DateString | null;
  Label: string;
  Type: string;
  Subtype: string | null;
  ApiName: string | null;
  ActionTarget: string | null;
  ActionTargetType: string | null;
  ConfirmationMessage: string | null;
  GroupId: string | null;
  IsGroupDefault: boolean;
  Category: string | null;
  InvocationStatus: string | null;
  InvokedByUserId: string | null;
  SourceEntity: string;
  ActionListContext: string | null;
  DeviceFormat: string | null;
  RetrievalMode: string | null;
  IconContentType: string | null;
  IconHeight: number | null;
  IconWidth: number | null;
  IconUrl: string | null;
  IsMassAction: boolean;
  PrimaryColor: string | null;
  RelatedSourceEntity: string | null;
  Section: string | null;
  RelatedListRecordId: string | null;
  TargetUrl: string | null;
  TargetObject: string | null;
  OpenType: string | null;
};

type ParentReferences$PlatformAction = {
  //
  InvokedByUser: SObjectDefinition$User | null;
};

type ChildRelationships$PlatformAction = {
  //
};

interface SObjectDefinition$PlatformAction extends SObjectDefinition<'PlatformAction'> {
    Name: 'PlatformAction';
    Fields: Fields$PlatformAction;
    ParentReferences: ParentReferences$PlatformAction;
    ChildRelationships: ChildRelationships$PlatformAction;
  }

type Fields$PlatformEventUsageMetric = {
  //
  Id: string;
  ExternalId: string | null;
  Name: string;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Value: string | null;
};

type ParentReferences$PlatformEventUsageMetric = {
  //
};

type ChildRelationships$PlatformEventUsageMetric = {
  //
};

interface SObjectDefinition$PlatformEventUsageMetric extends SObjectDefinition<'PlatformEventUsageMetric'> {
    Name: 'PlatformEventUsageMetric';
    Fields: Fields$PlatformEventUsageMetric;
    ParentReferences: ParentReferences$PlatformEventUsageMetric;
    ChildRelationships: ChildRelationships$PlatformEventUsageMetric;
  }

type Fields$Polygon = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Data: string;
  DataType: string;
};

type ParentReferences$Polygon = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Polygon = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$PolygonFeed;
  Histories: SObjectDefinition$PolygonHistory;
  Shares: SObjectDefinition$PolygonShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Polygon extends SObjectDefinition<'Polygon'> {
    Name: 'Polygon';
    Fields: Fields$Polygon;
    ParentReferences: ParentReferences$Polygon;
    ChildRelationships: ChildRelationships$Polygon;
  }

type Fields$PolygonFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PolygonFeed = {
  //
  Parent: SObjectDefinition$Polygon;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PolygonFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PolygonFeed extends SObjectDefinition<'PolygonFeed'> {
    Name: 'PolygonFeed';
    Fields: Fields$PolygonFeed;
    ParentReferences: ParentReferences$PolygonFeed;
    ChildRelationships: ChildRelationships$PolygonFeed;
  }

type Fields$PolygonHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PolygonId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PolygonHistory = {
  //
  Polygon: SObjectDefinition$Polygon;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PolygonHistory = {
  //
};

interface SObjectDefinition$PolygonHistory extends SObjectDefinition<'PolygonHistory'> {
    Name: 'PolygonHistory';
    Fields: Fields$PolygonHistory;
    ParentReferences: ParentReferences$PolygonHistory;
    ChildRelationships: ChildRelationships$PolygonHistory;
  }

type Fields$PolygonShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PolygonShare = {
  //
  Parent: SObjectDefinition$Polygon;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PolygonShare = {
  //
};

interface SObjectDefinition$PolygonShare extends SObjectDefinition<'PolygonShare'> {
    Name: 'PolygonShare';
    Fields: Fields$PolygonShare;
    ParentReferences: ParentReferences$PolygonShare;
    ChildRelationships: ChildRelationships$PolygonShare;
  }

type Fields$PreliminaryApplicationRef = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ApplicationName: string;
  ApplicationType: string;
  SavedApplicationUrl: string;
  BusinessAccountNameId: string | null;
  IsSubmitted: boolean;
};

type ParentReferences$PreliminaryApplicationRef = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BusinessAccountName: SObjectDefinition$Account | null;
};

type ChildRelationships$PreliminaryApplicationRef = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthRegApplication: SObjectDefinition$AuthApplicationAsset;
  RegAuthApplication: SObjectDefinition$AuthApplicationPlace;
  BusinessLicenseApplicationSavedRef: SObjectDefinition$BusinessLicenseApplication;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  IndividualApplicationAppRef: SObjectDefinition$IndividualApplication;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$PreliminaryApplicationRefFeed;
  Histories: SObjectDefinition$PreliminaryApplicationRefHistory;
  Shares: SObjectDefinition$PreliminaryApplicationRefShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$PreliminaryApplicationRef extends SObjectDefinition<'PreliminaryApplicationRef'> {
    Name: 'PreliminaryApplicationRef';
    Fields: Fields$PreliminaryApplicationRef;
    ParentReferences: ParentReferences$PreliminaryApplicationRef;
    ChildRelationships: ChildRelationships$PreliminaryApplicationRef;
  }

type Fields$PreliminaryApplicationRefFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PreliminaryApplicationRefFeed = {
  //
  Parent: SObjectDefinition$PreliminaryApplicationRef;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PreliminaryApplicationRefFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PreliminaryApplicationRefFeed extends SObjectDefinition<'PreliminaryApplicationRefFeed'> {
    Name: 'PreliminaryApplicationRefFeed';
    Fields: Fields$PreliminaryApplicationRefFeed;
    ParentReferences: ParentReferences$PreliminaryApplicationRefFeed;
    ChildRelationships: ChildRelationships$PreliminaryApplicationRefFeed;
  }

type Fields$PreliminaryApplicationRefHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PreliminaryApplicationRefId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PreliminaryApplicationRefHistory = {
  //
  PreliminaryApplicationRef: SObjectDefinition$PreliminaryApplicationRef;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PreliminaryApplicationRefHistory = {
  //
};

interface SObjectDefinition$PreliminaryApplicationRefHistory extends SObjectDefinition<'PreliminaryApplicationRefHistory'> {
    Name: 'PreliminaryApplicationRefHistory';
    Fields: Fields$PreliminaryApplicationRefHistory;
    ParentReferences: ParentReferences$PreliminaryApplicationRefHistory;
    ChildRelationships: ChildRelationships$PreliminaryApplicationRefHistory;
  }

type Fields$PreliminaryApplicationRefShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PreliminaryApplicationRefShare = {
  //
  Parent: SObjectDefinition$PreliminaryApplicationRef;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PreliminaryApplicationRefShare = {
  //
};

interface SObjectDefinition$PreliminaryApplicationRefShare extends SObjectDefinition<'PreliminaryApplicationRefShare'> {
    Name: 'PreliminaryApplicationRefShare';
    Fields: Fields$PreliminaryApplicationRefShare;
    ParentReferences: ParentReferences$PreliminaryApplicationRefShare;
    ChildRelationships: ChildRelationships$PreliminaryApplicationRefShare;
  }

type Fields$PresenceConfigDeclineReason = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PresenceUserConfigId: string;
  PresenceDeclineReasonId: string | null;
};

type ParentReferences$PresenceConfigDeclineReason = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PresenceUserConfig: SObjectDefinition$PresenceUserConfig;
  PresenceDeclineReason: SObjectDefinition$PresenceDeclineReason | null;
};

type ChildRelationships$PresenceConfigDeclineReason = {
  //
};

interface SObjectDefinition$PresenceConfigDeclineReason extends SObjectDefinition<'PresenceConfigDeclineReason'> {
    Name: 'PresenceConfigDeclineReason';
    Fields: Fields$PresenceConfigDeclineReason;
    ParentReferences: ParentReferences$PresenceConfigDeclineReason;
    ChildRelationships: ChildRelationships$PresenceConfigDeclineReason;
  }

type Fields$PresenceDeclineReason = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$PresenceDeclineReason = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PresenceDeclineReason = {
  //
};

interface SObjectDefinition$PresenceDeclineReason extends SObjectDefinition<'PresenceDeclineReason'> {
    Name: 'PresenceDeclineReason';
    Fields: Fields$PresenceDeclineReason;
    ParentReferences: ParentReferences$PresenceDeclineReason;
    ChildRelationships: ChildRelationships$PresenceDeclineReason;
  }

type Fields$PresenceUserConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Capacity: number;
  OptionsIsAutoAcceptEnabled: boolean;
  OptionsIsDeclineEnabled: boolean;
  OptionsIsDeclineReasonEnabled: boolean;
  OptionsIsRequestSoundEnabled: boolean;
  OptionsIsDisconnectSoundEnabled: boolean;
  PresenceStatusOnDeclineId: string | null;
  PresenceStatusOnPushTimeoutId: string | null;
};

type ParentReferences$PresenceUserConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PresenceStatusOnDecline: SObjectDefinition$ServicePresenceStatus | null;
  PresenceStatusOnPushTimeout: SObjectDefinition$ServicePresenceStatus | null;
};

type ChildRelationships$PresenceUserConfig = {
  //
};

interface SObjectDefinition$PresenceUserConfig extends SObjectDefinition<'PresenceUserConfig'> {
    Name: 'PresenceUserConfig';
    Fields: Fields$PresenceUserConfig;
    ParentReferences: ParentReferences$PresenceUserConfig;
    ChildRelationships: ChildRelationships$PresenceUserConfig;
  }

type Fields$PresenceUserConfigProfile = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PresenceUserConfigId: string;
};

type ParentReferences$PresenceUserConfigProfile = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PresenceUserConfig: SObjectDefinition$PresenceUserConfig;
};

type ChildRelationships$PresenceUserConfigProfile = {
  //
};

interface SObjectDefinition$PresenceUserConfigProfile extends SObjectDefinition<'PresenceUserConfigProfile'> {
    Name: 'PresenceUserConfigProfile';
    Fields: Fields$PresenceUserConfigProfile;
    ParentReferences: ParentReferences$PresenceUserConfigProfile;
    ChildRelationships: ChildRelationships$PresenceUserConfigProfile;
  }

type Fields$PresenceUserConfigUser = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PresenceUserConfigId: string;
  UserId: string | null;
};

type ParentReferences$PresenceUserConfigUser = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PresenceUserConfig: SObjectDefinition$PresenceUserConfig;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$PresenceUserConfigUser = {
  //
};

interface SObjectDefinition$PresenceUserConfigUser extends SObjectDefinition<'PresenceUserConfigUser'> {
    Name: 'PresenceUserConfigUser';
    Fields: Fields$PresenceUserConfigUser;
    ParentReferences: ParentReferences$PresenceUserConfigUser;
    ChildRelationships: ChildRelationships$PresenceUserConfigUser;
  }

type Fields$Pricebook2 = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsActive: boolean;
  IsArchived: boolean;
  Description: string | null;
  IsStandard: boolean;
};

type ParentReferences$Pricebook2 = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Pricebook2 = {
  //
  Contracts: SObjectDefinition$Contract;
  Opportunities: SObjectDefinition$Opportunity;
  Orders: SObjectDefinition$Order;
  Histories: SObjectDefinition$Pricebook2History;
  PricebookEntries: SObjectDefinition$PricebookEntry;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  ServiceContracts: SObjectDefinition$ServiceContract;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$Pricebook2 extends SObjectDefinition<'Pricebook2'> {
    Name: 'Pricebook2';
    Fields: Fields$Pricebook2;
    ParentReferences: ParentReferences$Pricebook2;
    ChildRelationships: ChildRelationships$Pricebook2;
  }

type Fields$Pricebook2ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  IsActive: boolean;
  IsArchived: boolean;
  Description: string | null;
  IsStandard: boolean;
};

type ParentReferences$Pricebook2ChangeEvent = {
  //
};

type ChildRelationships$Pricebook2ChangeEvent = {
  //
};

interface SObjectDefinition$Pricebook2ChangeEvent extends SObjectDefinition<'Pricebook2ChangeEvent'> {
    Name: 'Pricebook2ChangeEvent';
    Fields: Fields$Pricebook2ChangeEvent;
    ParentReferences: ParentReferences$Pricebook2ChangeEvent;
    ChildRelationships: ChildRelationships$Pricebook2ChangeEvent;
  }

type Fields$Pricebook2History = {
  //
  Id: string;
  IsDeleted: boolean;
  Pricebook2Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Pricebook2History = {
  //
  Pricebook2: SObjectDefinition$Pricebook2;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Pricebook2History = {
  //
};

interface SObjectDefinition$Pricebook2History extends SObjectDefinition<'Pricebook2History'> {
    Name: 'Pricebook2History';
    Fields: Fields$Pricebook2History;
    ParentReferences: ParentReferences$Pricebook2History;
    ChildRelationships: ChildRelationships$Pricebook2History;
  }

type Fields$PricebookEntry = {
  //
  Id: string;
  Name: string | null;
  Pricebook2Id: string;
  Product2Id: string;
  UnitPrice: number;
  IsActive: boolean;
  UseStandardPrice: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProductCode: string | null;
  IsDeleted: boolean;
  IsArchived: boolean;
};

type ParentReferences$PricebookEntry = {
  //
  Pricebook2: SObjectDefinition$Pricebook2;
  Product2: SObjectDefinition$Product2;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PricebookEntry = {
  //
  ContractLineItems: SObjectDefinition$ContractLineItem;
  OpportunityLineItems: SObjectDefinition$OpportunityLineItem;
  OrderItems: SObjectDefinition$OrderItem;
  Histories: SObjectDefinition$PricebookEntryHistory;
  QuoteLineItems: SObjectDefinition$QuoteLineItem;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  WorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
};

interface SObjectDefinition$PricebookEntry extends SObjectDefinition<'PricebookEntry'> {
    Name: 'PricebookEntry';
    Fields: Fields$PricebookEntry;
    ParentReferences: ParentReferences$PricebookEntry;
    ChildRelationships: ChildRelationships$PricebookEntry;
  }

type Fields$PricebookEntryHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PricebookEntryId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PricebookEntryHistory = {
  //
  PricebookEntry: SObjectDefinition$PricebookEntry;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PricebookEntryHistory = {
  //
};

interface SObjectDefinition$PricebookEntryHistory extends SObjectDefinition<'PricebookEntryHistory'> {
    Name: 'PricebookEntryHistory';
    Fields: Fields$PricebookEntryHistory;
    ParentReferences: ParentReferences$PricebookEntryHistory;
    ChildRelationships: ChildRelationships$PricebookEntryHistory;
  }

type Fields$ProcessDefinition = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  Type: string;
  Description: string | null;
  TableEnumOrId: string;
  LockType: string;
  State: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessDefinition = {
  //
};

interface SObjectDefinition$ProcessDefinition extends SObjectDefinition<'ProcessDefinition'> {
    Name: 'ProcessDefinition';
    Fields: Fields$ProcessDefinition;
    ParentReferences: ParentReferences$ProcessDefinition;
    ChildRelationships: ChildRelationships$ProcessDefinition;
  }

type Fields$ProcessException = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  ProcessExceptionNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AttachedToId: string;
  Message: string;
  StatusCategory: string;
  Status: string;
  Category: string | null;
  Severity: string | null;
  Priority: string | null;
  CaseId: string | null;
  ExternalReference: string | null;
  SeverityCategory: string | null;
  Description: string | null;
};

type ParentReferences$ProcessException = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AttachedTo: SObjectDefinition$Name;
  Case: SObjectDefinition$Case | null;
};

type ChildRelationships$ProcessException = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  Shares: SObjectDefinition$ProcessExceptionShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ProcessException extends SObjectDefinition<'ProcessException'> {
    Name: 'ProcessException';
    Fields: Fields$ProcessException;
    ParentReferences: ParentReferences$ProcessException;
    ChildRelationships: ChildRelationships$ProcessException;
  }

type Fields$ProcessExceptionEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  AttachedToId: string;
  Message: string;
  Description: string | null;
  ExceptionType: string;
  Severity: string | null;
  BackgroundOperationId: string | null;
  ExternalReference: string | null;
};

type ParentReferences$ProcessExceptionEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  AttachedTo: SObjectDefinition$Name;
  BackgroundOperation: SObjectDefinition$BackgroundOperation | null;
};

type ChildRelationships$ProcessExceptionEvent = {
  //
};

interface SObjectDefinition$ProcessExceptionEvent extends SObjectDefinition<'ProcessExceptionEvent'> {
    Name: 'ProcessExceptionEvent';
    Fields: Fields$ProcessExceptionEvent;
    ParentReferences: ParentReferences$ProcessExceptionEvent;
    ChildRelationships: ChildRelationships$ProcessExceptionEvent;
  }

type Fields$ProcessExceptionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ProcessExceptionShare = {
  //
  Parent: SObjectDefinition$ProcessException;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessExceptionShare = {
  //
};

interface SObjectDefinition$ProcessExceptionShare extends SObjectDefinition<'ProcessExceptionShare'> {
    Name: 'ProcessExceptionShare';
    Fields: Fields$ProcessExceptionShare;
    ParentReferences: ParentReferences$ProcessExceptionShare;
    ChildRelationships: ChildRelationships$ProcessExceptionShare;
  }

type Fields$ProcessInstance = {
  //
  Id: string;
  ProcessDefinitionId: string;
  TargetObjectId: string;
  Status: string;
  CompletedDate: DateString | null;
  LastActorId: string | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  SubmittedById: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstance = {
  //
  ProcessDefinition: SObjectDefinition$ProcessDefinition;
  TargetObject: SObjectDefinition$Name;
  LastActor: SObjectDefinition$User | null;
  SubmittedBy: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstance = {
  //
  StepsAndWorkitems: SObjectDefinition$ProcessInstanceHistory;
  Nodes: SObjectDefinition$ProcessInstanceNode;
  Steps: SObjectDefinition$ProcessInstanceStep;
  Workitems: SObjectDefinition$ProcessInstanceWorkitem;
};

interface SObjectDefinition$ProcessInstance extends SObjectDefinition<'ProcessInstance'> {
    Name: 'ProcessInstance';
    Fields: Fields$ProcessInstance;
    ParentReferences: ParentReferences$ProcessInstance;
    ChildRelationships: ChildRelationships$ProcessInstance;
  }

type Fields$ProcessInstanceHistory = {
  //
  Id: string;
  IsPending: boolean;
  ProcessInstanceId: string;
  TargetObjectId: string | null;
  StepStatus: string | null;
  ProcessNodeId: string | null;
  OriginalActorId: string;
  ActorId: string;
  RemindersSent: number | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  Comments: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstanceHistory = {
  //
  ProcessInstance: SObjectDefinition$ProcessInstance;
  TargetObject: SObjectDefinition$Name | null;
  ProcessNode: SObjectDefinition$ProcessNode | null;
  OriginalActor: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstanceHistory = {
  //
};

interface SObjectDefinition$ProcessInstanceHistory extends SObjectDefinition<'ProcessInstanceHistory'> {
    Name: 'ProcessInstanceHistory';
    Fields: Fields$ProcessInstanceHistory;
    ParentReferences: ParentReferences$ProcessInstanceHistory;
    ChildRelationships: ChildRelationships$ProcessInstanceHistory;
  }

type Fields$ProcessInstanceNode = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProcessInstanceId: string;
  ProcessNodeId: string;
  NodeStatus: string | null;
  CompletedDate: DateString | null;
  LastActorId: string | null;
  ProcessNodeName: string | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
};

type ParentReferences$ProcessInstanceNode = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ProcessInstance: SObjectDefinition$ProcessInstance;
  ProcessNode: SObjectDefinition$ProcessNode;
  LastActor: SObjectDefinition$User | null;
};

type ChildRelationships$ProcessInstanceNode = {
  //
};

interface SObjectDefinition$ProcessInstanceNode extends SObjectDefinition<'ProcessInstanceNode'> {
    Name: 'ProcessInstanceNode';
    Fields: Fields$ProcessInstanceNode;
    ParentReferences: ParentReferences$ProcessInstanceNode;
    ChildRelationships: ChildRelationships$ProcessInstanceNode;
  }

type Fields$ProcessInstanceStep = {
  //
  Id: string;
  ProcessInstanceId: string;
  StepStatus: string | null;
  OriginalActorId: string;
  ActorId: string;
  Comments: string | null;
  StepNodeId: string | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstanceStep = {
  //
  ProcessInstance: SObjectDefinition$ProcessInstance;
  OriginalActor: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstanceStep = {
  //
};

interface SObjectDefinition$ProcessInstanceStep extends SObjectDefinition<'ProcessInstanceStep'> {
    Name: 'ProcessInstanceStep';
    Fields: Fields$ProcessInstanceStep;
    ParentReferences: ParentReferences$ProcessInstanceStep;
    ChildRelationships: ChildRelationships$ProcessInstanceStep;
  }

type Fields$ProcessInstanceWorkitem = {
  //
  Id: string;
  ProcessInstanceId: string;
  OriginalActorId: string;
  ActorId: string;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstanceWorkitem = {
  //
  ProcessInstance: SObjectDefinition$ProcessInstance;
  OriginalActor: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstanceWorkitem = {
  //
};

interface SObjectDefinition$ProcessInstanceWorkitem extends SObjectDefinition<'ProcessInstanceWorkitem'> {
    Name: 'ProcessInstanceWorkitem';
    Fields: Fields$ProcessInstanceWorkitem;
    ParentReferences: ParentReferences$ProcessInstanceWorkitem;
    ChildRelationships: ChildRelationships$ProcessInstanceWorkitem;
  }

type Fields$ProcessNode = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  ProcessDefinitionId: string;
  Description: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessNode = {
  //
  ProcessDefinition: SObjectDefinition$ProcessDefinition;
};

type ChildRelationships$ProcessNode = {
  //
};

interface SObjectDefinition$ProcessNode extends SObjectDefinition<'ProcessNode'> {
    Name: 'ProcessNode';
    Fields: Fields$ProcessNode;
    ParentReferences: ParentReferences$ProcessNode;
    ChildRelationships: ChildRelationships$ProcessNode;
  }

type Fields$Product2 = {
  //
  Id: string;
  Name: string;
  ProductCode: string | null;
  Description: string | null;
  IsActive: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Family: string | null;
  ExternalId: string | null;
  DisplayUrl: string | null;
  QuantityUnitOfMeasure: string | null;
  IsDeleted: boolean;
  IsArchived: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  StockKeepingUnit: string | null;
  Type: string | null;
};

type ParentReferences$Product2 = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Product2 = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Assets: SObjectDefinition$Asset;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractLineItems: SObjectDefinition$ContractLineItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  PricebookEntries: SObjectDefinition$PricebookEntry;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$Product2Feed;
  Histories: SObjectDefinition$Product2History;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  WorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
};

interface SObjectDefinition$Product2 extends SObjectDefinition<'Product2'> {
    Name: 'Product2';
    Fields: Fields$Product2;
    ParentReferences: ParentReferences$Product2;
    ChildRelationships: ChildRelationships$Product2;
  }

type Fields$Product2ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  ProductCode: string | null;
  Description: string | null;
  IsActive: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Family: string | null;
  ExternalId: string | null;
  DisplayUrl: string | null;
  QuantityUnitOfMeasure: string | null;
  IsArchived: boolean;
  StockKeepingUnit: string | null;
  Type: string | null;
};

type ParentReferences$Product2ChangeEvent = {
  //
};

type ChildRelationships$Product2ChangeEvent = {
  //
};

interface SObjectDefinition$Product2ChangeEvent extends SObjectDefinition<'Product2ChangeEvent'> {
    Name: 'Product2ChangeEvent';
    Fields: Fields$Product2ChangeEvent;
    ParentReferences: ParentReferences$Product2ChangeEvent;
    ChildRelationships: ChildRelationships$Product2ChangeEvent;
  }

type Fields$Product2Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$Product2Feed = {
  //
  Parent: SObjectDefinition$Product2;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$Product2Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$Product2Feed extends SObjectDefinition<'Product2Feed'> {
    Name: 'Product2Feed';
    Fields: Fields$Product2Feed;
    ParentReferences: ParentReferences$Product2Feed;
    ChildRelationships: ChildRelationships$Product2Feed;
  }

type Fields$Product2History = {
  //
  Id: string;
  IsDeleted: boolean;
  Product2Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Product2History = {
  //
  Product2: SObjectDefinition$Product2;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Product2History = {
  //
};

interface SObjectDefinition$Product2History extends SObjectDefinition<'Product2History'> {
    Name: 'Product2History';
    Fields: Fields$Product2History;
    ParentReferences: ParentReferences$Product2History;
    ChildRelationships: ChildRelationships$Product2History;
  }

type Fields$ProductEntitlementTemplate = {
  //
  Id: string;
  Product2Id: string;
  EntitlementTemplateId: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
};

type ParentReferences$ProductEntitlementTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProductEntitlementTemplate = {
  //
};

interface SObjectDefinition$ProductEntitlementTemplate extends SObjectDefinition<'ProductEntitlementTemplate'> {
    Name: 'ProductEntitlementTemplate';
    Fields: Fields$ProductEntitlementTemplate;
    ParentReferences: ParentReferences$ProductEntitlementTemplate;
    ChildRelationships: ChildRelationships$ProductEntitlementTemplate;
  }

type Fields$ProfileSkill = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  UserCount: number | null;
  Description: string | null;
};

type ParentReferences$ProfileSkill = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkill = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$ProfileSkillFeed;
  Histories: SObjectDefinition$ProfileSkillHistory;
  Shares: SObjectDefinition$ProfileSkillShare;
  ProfileSkillUserChildren: SObjectDefinition$ProfileSkillUser;
};

interface SObjectDefinition$ProfileSkill extends SObjectDefinition<'ProfileSkill'> {
    Name: 'ProfileSkill';
    Fields: Fields$ProfileSkill;
    ParentReferences: ParentReferences$ProfileSkill;
    ChildRelationships: ChildRelationships$ProfileSkill;
  }

type Fields$ProfileSkillEndorsement = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProfileSkillUserId: string;
  UserId: string | null;
};

type ParentReferences$ProfileSkillEndorsement = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ProfileSkillUser: SObjectDefinition$ProfileSkillUser;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ProfileSkillEndorsement = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$ProfileSkillEndorsementFeed;
  Histories: SObjectDefinition$ProfileSkillEndorsementHistory;
};

interface SObjectDefinition$ProfileSkillEndorsement extends SObjectDefinition<'ProfileSkillEndorsement'> {
    Name: 'ProfileSkillEndorsement';
    Fields: Fields$ProfileSkillEndorsement;
    ParentReferences: ParentReferences$ProfileSkillEndorsement;
    ChildRelationships: ChildRelationships$ProfileSkillEndorsement;
  }

type Fields$ProfileSkillEndorsementFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ProfileSkillEndorsementFeed = {
  //
  Parent: SObjectDefinition$ProfileSkillEndorsement;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ProfileSkillEndorsementFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ProfileSkillEndorsementFeed extends SObjectDefinition<'ProfileSkillEndorsementFeed'> {
    Name: 'ProfileSkillEndorsementFeed';
    Fields: Fields$ProfileSkillEndorsementFeed;
    ParentReferences: ParentReferences$ProfileSkillEndorsementFeed;
    ChildRelationships: ChildRelationships$ProfileSkillEndorsementFeed;
  }

type Fields$ProfileSkillEndorsementHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ProfileSkillEndorsementId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ProfileSkillEndorsementHistory = {
  //
  ProfileSkillEndorsement: SObjectDefinition$ProfileSkillEndorsement;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillEndorsementHistory = {
  //
};

interface SObjectDefinition$ProfileSkillEndorsementHistory extends SObjectDefinition<'ProfileSkillEndorsementHistory'> {
    Name: 'ProfileSkillEndorsementHistory';
    Fields: Fields$ProfileSkillEndorsementHistory;
    ParentReferences: ParentReferences$ProfileSkillEndorsementHistory;
    ChildRelationships: ChildRelationships$ProfileSkillEndorsementHistory;
  }

type Fields$ProfileSkillFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ProfileSkillFeed = {
  //
  Parent: SObjectDefinition$ProfileSkill;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ProfileSkillFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ProfileSkillFeed extends SObjectDefinition<'ProfileSkillFeed'> {
    Name: 'ProfileSkillFeed';
    Fields: Fields$ProfileSkillFeed;
    ParentReferences: ParentReferences$ProfileSkillFeed;
    ChildRelationships: ChildRelationships$ProfileSkillFeed;
  }

type Fields$ProfileSkillHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ProfileSkillId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ProfileSkillHistory = {
  //
  ProfileSkill: SObjectDefinition$ProfileSkill;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillHistory = {
  //
};

interface SObjectDefinition$ProfileSkillHistory extends SObjectDefinition<'ProfileSkillHistory'> {
    Name: 'ProfileSkillHistory';
    Fields: Fields$ProfileSkillHistory;
    ParentReferences: ParentReferences$ProfileSkillHistory;
    ChildRelationships: ChildRelationships$ProfileSkillHistory;
  }

type Fields$ProfileSkillShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ProfileSkillShare = {
  //
  Parent: SObjectDefinition$ProfileSkill;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillShare = {
  //
};

interface SObjectDefinition$ProfileSkillShare extends SObjectDefinition<'ProfileSkillShare'> {
    Name: 'ProfileSkillShare';
    Fields: Fields$ProfileSkillShare;
    ParentReferences: ParentReferences$ProfileSkillShare;
    ChildRelationships: ChildRelationships$ProfileSkillShare;
  }

type Fields$ProfileSkillUser = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProfileSkillId: string;
  UserId: string | null;
  EndorsementCount: number | null;
};

type ParentReferences$ProfileSkillUser = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ProfileSkill: SObjectDefinition$ProfileSkill;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ProfileSkillUser = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  ProfileSkillUserEndorsements: SObjectDefinition$ProfileSkillEndorsement;
  Feeds: SObjectDefinition$ProfileSkillUserFeed;
  Histories: SObjectDefinition$ProfileSkillUserHistory;
};

interface SObjectDefinition$ProfileSkillUser extends SObjectDefinition<'ProfileSkillUser'> {
    Name: 'ProfileSkillUser';
    Fields: Fields$ProfileSkillUser;
    ParentReferences: ParentReferences$ProfileSkillUser;
    ChildRelationships: ChildRelationships$ProfileSkillUser;
  }

type Fields$ProfileSkillUserFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ProfileSkillUserFeed = {
  //
  Parent: SObjectDefinition$ProfileSkillUser;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ProfileSkillUserFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ProfileSkillUserFeed extends SObjectDefinition<'ProfileSkillUserFeed'> {
    Name: 'ProfileSkillUserFeed';
    Fields: Fields$ProfileSkillUserFeed;
    ParentReferences: ParentReferences$ProfileSkillUserFeed;
    ChildRelationships: ChildRelationships$ProfileSkillUserFeed;
  }

type Fields$ProfileSkillUserHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ProfileSkillUserId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ProfileSkillUserHistory = {
  //
  ProfileSkillUser: SObjectDefinition$ProfileSkillUser;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillUserHistory = {
  //
};

interface SObjectDefinition$ProfileSkillUserHistory extends SObjectDefinition<'ProfileSkillUserHistory'> {
    Name: 'ProfileSkillUserHistory';
    Fields: Fields$ProfileSkillUserHistory;
    ParentReferences: ParentReferences$ProfileSkillUserHistory;
    ChildRelationships: ChildRelationships$ProfileSkillUserHistory;
  }

type Fields$Prompt = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Prompt = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Prompt = {
  //
  Localization: SObjectDefinition$PromptLocalization;
};

interface SObjectDefinition$Prompt extends SObjectDefinition<'Prompt'> {
    Name: 'Prompt';
    Fields: Fields$Prompt;
    ParentReferences: ParentReferences$Prompt;
    ChildRelationships: ChildRelationships$Prompt;
  }

type Fields$PromptLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$PromptLocalization = {
  //
  Parent: SObjectDefinition$Prompt;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PromptLocalization = {
  //
};

interface SObjectDefinition$PromptLocalization extends SObjectDefinition<'PromptLocalization'> {
    Name: 'PromptLocalization';
    Fields: Fields$PromptLocalization;
    ParentReferences: ParentReferences$PromptLocalization;
    ChildRelationships: ChildRelationships$PromptLocalization;
  }

type Fields$PromptVersion = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  MasterLabel: string;
  Description: string | null;
  DisplayType: string;
  DisplayPosition: string | null;
  TimesToDisplay: number | null;
  DelayDays: number | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  UserAccess: string | null;
  IsPublished: boolean;
  PublishedDate: DateString | null;
  PublishedByUserId: string | null;
  Header: string | null;
  DismissButtonLabel: string | null;
  ShouldDisplayActionButton: boolean;
  ActionButtonLabel: string | null;
  ActionButtonLink: string | null;
  Title: string;
  VersionNumber: number;
  TargetPageType: string | null;
  TargetPageKey1: string | null;
  TargetPageKey2: string | null;
  TargetAppNamespacePrefix: string | null;
  TargetAppDeveloperName: string | null;
  Body: string;
  ShouldIgnoreGlobalDelay: boolean;
  UserProfileAccess: string | null;
  VideoLink: string | null;
  StepNumber: number | null;
  ThemeColor: string | null;
  ThemeSaturation: string | null;
  IndexWithIsPublished: string | null;
  IndexWithoutIsPublished: string | null;
};

type ParentReferences$PromptVersion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Prompt;
  PublishedByUser: SObjectDefinition$User | null;
};

type ChildRelationships$PromptVersion = {
  //
  Localization: SObjectDefinition$PromptVersionLocalization;
};

interface SObjectDefinition$PromptVersion extends SObjectDefinition<'PromptVersion'> {
    Name: 'PromptVersion';
    Fields: Fields$PromptVersion;
    ParentReferences: ParentReferences$PromptVersion;
    ChildRelationships: ChildRelationships$PromptVersion;
  }

type Fields$PromptVersionLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$PromptVersionLocalization = {
  //
  Parent: SObjectDefinition$PromptVersion;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PromptVersionLocalization = {
  //
};

interface SObjectDefinition$PromptVersionLocalization extends SObjectDefinition<'PromptVersionLocalization'> {
    Name: 'PromptVersionLocalization';
    Fields: Fields$PromptVersionLocalization;
    ParentReferences: ParentReferences$PromptVersionLocalization;
    ChildRelationships: ChildRelationships$PromptVersionLocalization;
  }

type Fields$PublicComplaint = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string | null;
  Status: string | null;
  Priority: string | null;
  IncidentDate: DateString;
  ComplaintType: string | null;
  ComplaintSubType: string | null;
  BusinessName: string | null;
  FirstName: string | null;
  LastName: string | null;
  Email: string | null;
  MobileNumber: string | null;
  BusinessAddress: string | null;
  Description: string | null;
};

type ParentReferences$PublicComplaint = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account | null;
};

type ChildRelationships$PublicComplaint = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$PublicComplaintFeed;
  Histories: SObjectDefinition$PublicComplaintHistory;
  Shares: SObjectDefinition$PublicComplaintShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$PublicComplaint extends SObjectDefinition<'PublicComplaint'> {
    Name: 'PublicComplaint';
    Fields: Fields$PublicComplaint;
    ParentReferences: ParentReferences$PublicComplaint;
    ChildRelationships: ChildRelationships$PublicComplaint;
  }

type Fields$PublicComplaintFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PublicComplaintFeed = {
  //
  Parent: SObjectDefinition$PublicComplaint;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PublicComplaintFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PublicComplaintFeed extends SObjectDefinition<'PublicComplaintFeed'> {
    Name: 'PublicComplaintFeed';
    Fields: Fields$PublicComplaintFeed;
    ParentReferences: ParentReferences$PublicComplaintFeed;
    ChildRelationships: ChildRelationships$PublicComplaintFeed;
  }

type Fields$PublicComplaintHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PublicComplaintId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PublicComplaintHistory = {
  //
  PublicComplaint: SObjectDefinition$PublicComplaint;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PublicComplaintHistory = {
  //
};

interface SObjectDefinition$PublicComplaintHistory extends SObjectDefinition<'PublicComplaintHistory'> {
    Name: 'PublicComplaintHistory';
    Fields: Fields$PublicComplaintHistory;
    ParentReferences: ParentReferences$PublicComplaintHistory;
    ChildRelationships: ChildRelationships$PublicComplaintHistory;
  }

type Fields$PublicComplaintShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PublicComplaintShare = {
  //
  Parent: SObjectDefinition$PublicComplaint;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PublicComplaintShare = {
  //
};

interface SObjectDefinition$PublicComplaintShare extends SObjectDefinition<'PublicComplaintShare'> {
    Name: 'PublicComplaintShare';
    Fields: Fields$PublicComplaintShare;
    ParentReferences: ParentReferences$PublicComplaintShare;
    ChildRelationships: ChildRelationships$PublicComplaintShare;
  }

type Fields$Publisher = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  NamespacePrefix: string | null;
  IsSalesforce: boolean;
  MajorVersion: number | null;
  MinorVersion: number | null;
};

type ParentReferences$Publisher = {
  //
};

type ChildRelationships$Publisher = {
  //
  InstalledEntityDefinitions: SObjectDefinition$EntityDefinition;
  InstalledFieldDefinitions: SObjectDefinition$FieldDefinition;
};

interface SObjectDefinition$Publisher extends SObjectDefinition<'Publisher'> {
    Name: 'Publisher';
    Fields: Fields$Publisher;
    ParentReferences: ParentReferences$Publisher;
    ChildRelationships: ChildRelationships$Publisher;
  }

type Fields$PushTopic = {
  //
  Id: string;
  Name: string;
  Query: string;
  ApiVersion: number;
  IsActive: boolean;
  NotifyForFields: string;
  NotifyForOperations: string;
  Description: string | null;
  NotifyForOperationCreate: boolean;
  NotifyForOperationUpdate: boolean;
  NotifyForOperationDelete: boolean;
  NotifyForOperationUndelete: boolean;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$PushTopic = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PushTopic = {
  //
};

interface SObjectDefinition$PushTopic extends SObjectDefinition<'PushTopic'> {
    Name: 'PushTopic';
    Fields: Fields$PushTopic;
    ParentReferences: ParentReferences$PushTopic;
    ChildRelationships: ChildRelationships$PushTopic;
  }

type Fields$QueueRoutingConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RoutingPriority: number;
  RoutingModel: string;
  CapacityWeight: number | null;
  CapacityPercentage: number | null;
  PushTimeout: number | null;
  OverflowAssigneeId: string | null;
  IsAttributeBased: boolean;
  DropAdditionalSkillsTimeout: number | null;
};

type ParentReferences$QueueRoutingConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OverflowAssignee: SObjectDefinition$Name | null;
};

type ChildRelationships$QueueRoutingConfig = {
  //
};

interface SObjectDefinition$QueueRoutingConfig extends SObjectDefinition<'QueueRoutingConfig'> {
    Name: 'QueueRoutingConfig';
    Fields: Fields$QueueRoutingConfig;
    ParentReferences: ParentReferences$QueueRoutingConfig;
    ChildRelationships: ChildRelationships$QueueRoutingConfig;
  }

type Fields$QueueSobject = {
  //
  Id: string;
  QueueId: string;
  SobjectType: string;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$QueueSobject = {
  //
  Queue: SObjectDefinition$Group;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$QueueSobject = {
  //
};

interface SObjectDefinition$QueueSobject extends SObjectDefinition<'QueueSobject'> {
    Name: 'QueueSobject';
    Fields: Fields$QueueSobject;
    ParentReferences: ParentReferences$QueueSobject;
    ChildRelationships: ChildRelationships$QueueSobject;
  }

type Fields$QuickText = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Message: string;
  Category: string | null;
  Channel: string | null;
  IsInsertable: boolean;
  SourceType: string | null;
};

type ParentReferences$QuickText = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickText = {
  //
  Histories: SObjectDefinition$QuickTextHistory;
  Shares: SObjectDefinition$QuickTextShare;
};

interface SObjectDefinition$QuickText extends SObjectDefinition<'QuickText'> {
    Name: 'QuickText';
    Fields: Fields$QuickText;
    ParentReferences: ParentReferences$QuickText;
    ChildRelationships: ChildRelationships$QuickText;
  }

type Fields$QuickTextChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Message: string | null;
  Category: string | null;
  Channel: string | null;
  IsInsertable: boolean;
  SourceType: string | null;
};

type ParentReferences$QuickTextChangeEvent = {
  //
};

type ChildRelationships$QuickTextChangeEvent = {
  //
};

interface SObjectDefinition$QuickTextChangeEvent extends SObjectDefinition<'QuickTextChangeEvent'> {
    Name: 'QuickTextChangeEvent';
    Fields: Fields$QuickTextChangeEvent;
    ParentReferences: ParentReferences$QuickTextChangeEvent;
    ChildRelationships: ChildRelationships$QuickTextChangeEvent;
  }

type Fields$QuickTextHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  QuickTextId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$QuickTextHistory = {
  //
  QuickText: SObjectDefinition$QuickText;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickTextHistory = {
  //
};

interface SObjectDefinition$QuickTextHistory extends SObjectDefinition<'QuickTextHistory'> {
    Name: 'QuickTextHistory';
    Fields: Fields$QuickTextHistory;
    ParentReferences: ParentReferences$QuickTextHistory;
    ChildRelationships: ChildRelationships$QuickTextHistory;
  }

type Fields$QuickTextShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$QuickTextShare = {
  //
  Parent: SObjectDefinition$QuickText;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickTextShare = {
  //
};

interface SObjectDefinition$QuickTextShare extends SObjectDefinition<'QuickTextShare'> {
    Name: 'QuickTextShare';
    Fields: Fields$QuickTextShare;
    ParentReferences: ParentReferences$QuickTextShare;
    ChildRelationships: ChildRelationships$QuickTextShare;
  }

type Fields$QuickTextUsage = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  QuickTextId: string;
  Channel: string | null;
  LaunchSource: string | null;
  LoggedTime: DateString | null;
  UserId: string | null;
  AppContext: string | null;
};

type ParentReferences$QuickTextUsage = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  QuickText: SObjectDefinition$QuickText;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$QuickTextUsage = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$QuickTextUsageShare;
};

interface SObjectDefinition$QuickTextUsage extends SObjectDefinition<'QuickTextUsage'> {
    Name: 'QuickTextUsage';
    Fields: Fields$QuickTextUsage;
    ParentReferences: ParentReferences$QuickTextUsage;
    ChildRelationships: ChildRelationships$QuickTextUsage;
  }

type Fields$QuickTextUsageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$QuickTextUsageShare = {
  //
  Parent: SObjectDefinition$QuickTextUsage;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickTextUsageShare = {
  //
};

interface SObjectDefinition$QuickTextUsageShare extends SObjectDefinition<'QuickTextUsageShare'> {
    Name: 'QuickTextUsageShare';
    Fields: Fields$QuickTextUsageShare;
    ParentReferences: ParentReferences$QuickTextUsageShare;
    ChildRelationships: ChildRelationships$QuickTextUsageShare;
  }

type Fields$Quote = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  OpportunityId: string;
  Pricebook2Id: string | null;
  ContactId: string | null;
  QuoteNumber: string;
  IsSyncing: boolean;
  ShippingHandling: number | null;
  Tax: number | null;
  Status: string | null;
  ExpirationDate: DateString | null;
  Description: string | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  QuoteToStreet: string | null;
  QuoteToCity: string | null;
  QuoteToState: string | null;
  QuoteToPostalCode: string | null;
  QuoteToCountry: string | null;
  QuoteToLatitude: number | null;
  QuoteToLongitude: number | null;
  QuoteToGeocodeAccuracy: string | null;
  QuoteToAddress: Address | null;
  AdditionalStreet: string | null;
  AdditionalCity: string | null;
  AdditionalState: string | null;
  AdditionalPostalCode: string | null;
  AdditionalCountry: string | null;
  AdditionalLatitude: number | null;
  AdditionalLongitude: number | null;
  AdditionalGeocodeAccuracy: string | null;
  AdditionalAddress: Address | null;
  BillingName: string | null;
  ShippingName: string | null;
  QuoteToName: string | null;
  AdditionalName: string | null;
  Email: string | null;
  Phone: string | null;
  Fax: string | null;
  ContractId: string | null;
  AccountId: string | null;
  Discount: number | null;
  GrandTotal: number | null;
  CanCreateQuoteLineItems: boolean;
};

type ParentReferences$Quote = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Opportunity: SObjectDefinition$Opportunity;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  Contact: SObjectDefinition$Contact | null;
  Contract: SObjectDefinition$Contract | null;
  Account: SObjectDefinition$Account | null;
};

type ChildRelationships$Quote = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DigitalSignatures: SObjectDefinition$DigitalSignature;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  QuoteDocuments: SObjectDefinition$QuoteDocument;
  Feeds: SObjectDefinition$QuoteFeed;
  QuoteLineItems: SObjectDefinition$QuoteLineItem;
  Shares: SObjectDefinition$QuoteShare;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Quote extends SObjectDefinition<'Quote'> {
    Name: 'Quote';
    Fields: Fields$Quote;
    ParentReferences: ParentReferences$Quote;
    ChildRelationships: ChildRelationships$Quote;
  }

type Fields$QuoteChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  OpportunityId: string | null;
  Pricebook2Id: string | null;
  ContactId: string | null;
  QuoteNumber: string;
  IsSyncing: boolean;
  ShippingHandling: number | null;
  Tax: number | null;
  Status: string | null;
  ExpirationDate: DateString | null;
  Description: string | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  QuoteToStreet: string | null;
  QuoteToCity: string | null;
  QuoteToState: string | null;
  QuoteToPostalCode: string | null;
  QuoteToCountry: string | null;
  QuoteToLatitude: number | null;
  QuoteToLongitude: number | null;
  QuoteToGeocodeAccuracy: string | null;
  QuoteToAddress: Address | null;
  AdditionalStreet: string | null;
  AdditionalCity: string | null;
  AdditionalState: string | null;
  AdditionalPostalCode: string | null;
  AdditionalCountry: string | null;
  AdditionalLatitude: number | null;
  AdditionalLongitude: number | null;
  AdditionalGeocodeAccuracy: string | null;
  AdditionalAddress: Address | null;
  BillingName: string | null;
  ShippingName: string | null;
  QuoteToName: string | null;
  AdditionalName: string | null;
  Email: string | null;
  Phone: string | null;
  Fax: string | null;
  ContractId: string | null;
};

type ParentReferences$QuoteChangeEvent = {
  //
};

type ChildRelationships$QuoteChangeEvent = {
  //
};

interface SObjectDefinition$QuoteChangeEvent extends SObjectDefinition<'QuoteChangeEvent'> {
    Name: 'QuoteChangeEvent';
    Fields: Fields$QuoteChangeEvent;
    ParentReferences: ParentReferences$QuoteChangeEvent;
    ChildRelationships: ChildRelationships$QuoteChangeEvent;
  }

type Fields$QuoteDocument = {
  //
  Id: string;
  Name: string;
  QuoteId: string;
  ContentVersionDocumentId: string | null;
  Document: BlobString | null;
  GrandTotal: number | null;
  Discount: number | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$QuoteDocument = {
  //
  Quote: SObjectDefinition$Quote;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuoteDocument = {
  //
};

interface SObjectDefinition$QuoteDocument extends SObjectDefinition<'QuoteDocument'> {
    Name: 'QuoteDocument';
    Fields: Fields$QuoteDocument;
    ParentReferences: ParentReferences$QuoteDocument;
    ChildRelationships: ChildRelationships$QuoteDocument;
  }

type Fields$QuoteFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$QuoteFeed = {
  //
  Parent: SObjectDefinition$Quote;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$QuoteFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$QuoteFeed extends SObjectDefinition<'QuoteFeed'> {
    Name: 'QuoteFeed';
    Fields: Fields$QuoteFeed;
    ParentReferences: ParentReferences$QuoteFeed;
    ChildRelationships: ChildRelationships$QuoteFeed;
  }

type Fields$QuoteLineItem = {
  //
  Id: string;
  IsDeleted: boolean;
  LineNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  QuoteId: string;
  PricebookEntryId: string;
  OpportunityLineItemId: string | null;
  Quantity: number;
  UnitPrice: number | null;
  Discount: number | null;
  Description: string | null;
  ServiceDate: DateString | null;
  Product2Id: string;
  SortOrder: number | null;
  ListPrice: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
};

type ParentReferences$QuoteLineItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Quote: SObjectDefinition$Quote;
  PricebookEntry: SObjectDefinition$PricebookEntry;
  OpportunityLineItem: SObjectDefinition$OpportunityLineItem | null;
  Product2: SObjectDefinition$Product2;
};

type ChildRelationships$QuoteLineItem = {
  //
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$QuoteLineItem extends SObjectDefinition<'QuoteLineItem'> {
    Name: 'QuoteLineItem';
    Fields: Fields$QuoteLineItem;
    ParentReferences: ParentReferences$QuoteLineItem;
    ChildRelationships: ChildRelationships$QuoteLineItem;
  }

type Fields$QuoteLineItemChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  LineNumber: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  QuoteId: string | null;
  PricebookEntryId: string | null;
  OpportunityLineItemId: string | null;
  Quantity: number | null;
  UnitPrice: number | null;
  Discount: number | null;
  Description: string | null;
  ServiceDate: DateString | null;
  Product2Id: string | null;
  SortOrder: number | null;
};

type ParentReferences$QuoteLineItemChangeEvent = {
  //
};

type ChildRelationships$QuoteLineItemChangeEvent = {
  //
};

interface SObjectDefinition$QuoteLineItemChangeEvent extends SObjectDefinition<'QuoteLineItemChangeEvent'> {
    Name: 'QuoteLineItemChangeEvent';
    Fields: Fields$QuoteLineItemChangeEvent;
    ParentReferences: ParentReferences$QuoteLineItemChangeEvent;
    ChildRelationships: ChildRelationships$QuoteLineItemChangeEvent;
  }

type Fields$QuoteShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$QuoteShare = {
  //
  Parent: SObjectDefinition$Quote;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuoteShare = {
  //
};

interface SObjectDefinition$QuoteShare extends SObjectDefinition<'QuoteShare'> {
    Name: 'QuoteShare';
    Fields: Fields$QuoteShare;
    ParentReferences: ParentReferences$QuoteShare;
    ChildRelationships: ChildRelationships$QuoteShare;
  }

type Fields$QuoteTemplateRichTextData = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Data: string | null;
};

type ParentReferences$QuoteTemplateRichTextData = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuoteTemplateRichTextData = {
  //
};

interface SObjectDefinition$QuoteTemplateRichTextData extends SObjectDefinition<'QuoteTemplateRichTextData'> {
    Name: 'QuoteTemplateRichTextData';
    Fields: Fields$QuoteTemplateRichTextData;
    ParentReferences: ParentReferences$QuoteTemplateRichTextData;
    ChildRelationships: ChildRelationships$QuoteTemplateRichTextData;
  }

type Fields$ReceivedDocument = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Status: string;
  IsActive: boolean;
};

type ParentReferences$ReceivedDocument = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ReceivedDocument = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$ReceivedDocumentFeed;
  Histories: SObjectDefinition$ReceivedDocumentHistory;
  Shares: SObjectDefinition$ReceivedDocumentShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ReceivedDocument extends SObjectDefinition<'ReceivedDocument'> {
    Name: 'ReceivedDocument';
    Fields: Fields$ReceivedDocument;
    ParentReferences: ParentReferences$ReceivedDocument;
    ChildRelationships: ChildRelationships$ReceivedDocument;
  }

type Fields$ReceivedDocumentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ReceivedDocumentFeed = {
  //
  Parent: SObjectDefinition$ReceivedDocument;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ReceivedDocumentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ReceivedDocumentFeed extends SObjectDefinition<'ReceivedDocumentFeed'> {
    Name: 'ReceivedDocumentFeed';
    Fields: Fields$ReceivedDocumentFeed;
    ParentReferences: ParentReferences$ReceivedDocumentFeed;
    ChildRelationships: ChildRelationships$ReceivedDocumentFeed;
  }

type Fields$ReceivedDocumentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ReceivedDocumentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ReceivedDocumentHistory = {
  //
  ReceivedDocument: SObjectDefinition$ReceivedDocument;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ReceivedDocumentHistory = {
  //
};

interface SObjectDefinition$ReceivedDocumentHistory extends SObjectDefinition<'ReceivedDocumentHistory'> {
    Name: 'ReceivedDocumentHistory';
    Fields: Fields$ReceivedDocumentHistory;
    ParentReferences: ParentReferences$ReceivedDocumentHistory;
    ChildRelationships: ChildRelationships$ReceivedDocumentHistory;
  }

type Fields$ReceivedDocumentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ReceivedDocumentShare = {
  //
  Parent: SObjectDefinition$ReceivedDocument;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ReceivedDocumentShare = {
  //
};

interface SObjectDefinition$ReceivedDocumentShare extends SObjectDefinition<'ReceivedDocumentShare'> {
    Name: 'ReceivedDocumentShare';
    Fields: Fields$ReceivedDocumentShare;
    ParentReferences: ParentReferences$ReceivedDocumentShare;
    ChildRelationships: ChildRelationships$ReceivedDocumentShare;
  }

type Fields$RecentlyViewed = {
  //
  Id: string;
  Name: string | null;
  LastName: string | null;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Type: string | null;
  Alias: string | null;
  UserRoleId: string | null;
  IsActive: boolean;
  Title: string | null;
  Email: string | null;
  Phone: string | null;
  NameOrAlias: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  NetworkId: string | null;
  Language: string | null;
};

type ParentReferences$RecentlyViewed = {
  //
  UserRole: SObjectDefinition$UserRole | null;
};

type ChildRelationships$RecentlyViewed = {
  //
};

interface SObjectDefinition$RecentlyViewed extends SObjectDefinition<'RecentlyViewed'> {
    Name: 'RecentlyViewed';
    Fields: Fields$RecentlyViewed;
    ParentReferences: ParentReferences$RecentlyViewed;
    ChildRelationships: ChildRelationships$RecentlyViewed;
  }

type Fields$Recommendation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ActionReference: string;
  Description: string;
  NetworkId: string | null;
  ImageId: string | null;
  AcceptanceLabel: string;
  RejectionLabel: string;
  IsActionActive: boolean;
  ExternalId: string | null;
  RecommendationMode: string | null;
  RecommendationScore: number | null;
};

type ParentReferences$Recommendation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
  Image: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$Recommendation = {
  //
};

interface SObjectDefinition$Recommendation extends SObjectDefinition<'Recommendation'> {
    Name: 'Recommendation';
    Fields: Fields$Recommendation;
    ParentReferences: ParentReferences$Recommendation;
    ChildRelationships: ChildRelationships$Recommendation;
  }

type Fields$RecommendationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Description: string | null;
  NetworkId: string | null;
  ImageId: string | null;
  AcceptanceLabel: string | null;
  RejectionLabel: string | null;
  ExternalId: string | null;
  RecommendationMode: string | null;
  RecommendationScore: number | null;
};

type ParentReferences$RecommendationChangeEvent = {
  //
};

type ChildRelationships$RecommendationChangeEvent = {
  //
};

interface SObjectDefinition$RecommendationChangeEvent extends SObjectDefinition<'RecommendationChangeEvent'> {
    Name: 'RecommendationChangeEvent';
    Fields: Fields$RecommendationChangeEvent;
    ParentReferences: ParentReferences$RecommendationChangeEvent;
    ChildRelationships: ChildRelationships$RecommendationChangeEvent;
  }

type Fields$RecordAction = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RecordId: string;
  FlowDefinition: string | null;
  FlowInterviewId: string | null;
  Order: number;
  Status: string | null;
  Pinned: string | null;
  ActionType: string | null;
  ActionDefinition: string | null;
  IsMandatory: boolean;
  IsUiRemoveHidden: boolean;
};

type ParentReferences$RecordAction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Record: SObjectDefinition$Name;
  FlowInterview: SObjectDefinition$FlowInterview | null;
};

type ChildRelationships$RecordAction = {
  //
};

interface SObjectDefinition$RecordAction extends SObjectDefinition<'RecordAction'> {
    Name: 'RecordAction';
    Fields: Fields$RecordAction;
    ParentReferences: ParentReferences$RecordAction;
    ChildRelationships: ChildRelationships$RecordAction;
  }

type Fields$RecordActionHistory = {
  //
  Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  ParentRecordId: string;
  ActionDefinitionApiName: string;
  ActionDefinitionLabel: string;
  ActionType: string;
  State: string;
  UserId: string;
  RecordActionId: string;
  LoggedTime: DateString;
  Pinned: string | null;
  IsMandatory: boolean;
};

type ParentReferences$RecordActionHistory = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentRecord: SObjectDefinition$Name;
  User: SObjectDefinition$User;
};

type ChildRelationships$RecordActionHistory = {
  //
};

interface SObjectDefinition$RecordActionHistory extends SObjectDefinition<'RecordActionHistory'> {
    Name: 'RecordActionHistory';
    Fields: Fields$RecordActionHistory;
    ParentReferences: ParentReferences$RecordActionHistory;
    ChildRelationships: ChildRelationships$RecordActionHistory;
  }

type Fields$RecordType = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  Description: string | null;
  BusinessProcessId: string | null;
  SobjectType: string;
  IsActive: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$RecordType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RecordType = {
  //
  Localization: SObjectDefinition$RecordTypeLocalization;
};

interface SObjectDefinition$RecordType extends SObjectDefinition<'RecordType'> {
    Name: 'RecordType';
    Fields: Fields$RecordType;
    ParentReferences: ParentReferences$RecordType;
    ChildRelationships: ChildRelationships$RecordType;
  }

type Fields$RecordTypeLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$RecordTypeLocalization = {
  //
  Parent: SObjectDefinition$RecordType;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RecordTypeLocalization = {
  //
};

interface SObjectDefinition$RecordTypeLocalization extends SObjectDefinition<'RecordTypeLocalization'> {
    Name: 'RecordTypeLocalization';
    Fields: Fields$RecordTypeLocalization;
    ParentReferences: ParentReferences$RecordTypeLocalization;
    ChildRelationships: ChildRelationships$RecordTypeLocalization;
  }

type Fields$RegAuthorizationTypeProduct = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RegulatoryAuthorizationTypeId: string | null;
};

type ParentReferences$RegAuthorizationTypeProduct = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RegulatoryAuthorizationType: SObjectDefinition$RegulatoryAuthorizationType | null;
};

type ChildRelationships$RegAuthorizationTypeProduct = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$RegAuthorizationTypeProductFeed;
  Histories: SObjectDefinition$RegAuthorizationTypeProductHistory;
  Shares: SObjectDefinition$RegAuthorizationTypeProductShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$RegAuthorizationTypeProduct extends SObjectDefinition<'RegAuthorizationTypeProduct'> {
    Name: 'RegAuthorizationTypeProduct';
    Fields: Fields$RegAuthorizationTypeProduct;
    ParentReferences: ParentReferences$RegAuthorizationTypeProduct;
    ChildRelationships: ChildRelationships$RegAuthorizationTypeProduct;
  }

type Fields$RegAuthorizationTypeProductFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$RegAuthorizationTypeProductFeed = {
  //
  Parent: SObjectDefinition$RegAuthorizationTypeProduct;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$RegAuthorizationTypeProductFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$RegAuthorizationTypeProductFeed extends SObjectDefinition<'RegAuthorizationTypeProductFeed'> {
    Name: 'RegAuthorizationTypeProductFeed';
    Fields: Fields$RegAuthorizationTypeProductFeed;
    ParentReferences: ParentReferences$RegAuthorizationTypeProductFeed;
    ChildRelationships: ChildRelationships$RegAuthorizationTypeProductFeed;
  }

type Fields$RegAuthorizationTypeProductHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  RegAuthorizationTypeProductId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$RegAuthorizationTypeProductHistory = {
  //
  RegAuthorizationTypeProduct: SObjectDefinition$RegAuthorizationTypeProduct;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$RegAuthorizationTypeProductHistory = {
  //
};

interface SObjectDefinition$RegAuthorizationTypeProductHistory extends SObjectDefinition<'RegAuthorizationTypeProductHistory'> {
    Name: 'RegAuthorizationTypeProductHistory';
    Fields: Fields$RegAuthorizationTypeProductHistory;
    ParentReferences: ParentReferences$RegAuthorizationTypeProductHistory;
    ChildRelationships: ChildRelationships$RegAuthorizationTypeProductHistory;
  }

type Fields$RegAuthorizationTypeProductShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$RegAuthorizationTypeProductShare = {
  //
  Parent: SObjectDefinition$RegAuthorizationTypeProduct;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RegAuthorizationTypeProductShare = {
  //
};

interface SObjectDefinition$RegAuthorizationTypeProductShare extends SObjectDefinition<'RegAuthorizationTypeProductShare'> {
    Name: 'RegAuthorizationTypeProductShare';
    Fields: Fields$RegAuthorizationTypeProductShare;
    ParentReferences: ParentReferences$RegAuthorizationTypeProductShare;
    ChildRelationships: ChildRelationships$RegAuthorizationTypeProductShare;
  }

type Fields$Registro_eventi_ente__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Codice_IPA_ente_correlato__c: string | null;
  Codice_fiscale_ente_correlato__c: string | null;
  Codice_meccanografico_ente_correlato__c: string | null;
  Comune_ente_correlato__c: string | null;
  Data_effettiva_variazione__c: DateString | null;
  Data_prevista_variazione__c: DateString | null;
  Denominazione_ente_correlato__c: string | null;
  Elaborato__c: boolean;
  Ente_correlato__c: string | null;
  Ente_destinazione__c: string | null;
  Ente_di_origine__c: number | null;
  Fonte__c: string | null;
  Motivazione_variazione__c: string | null;
  Note_soppressione__c: string | null;
  Provincia_ente_correlato__c: string | null;
  Regione_ente_correlato__c: string | null;
  Variazione__c: boolean;
};

type ParentReferences$Registro_eventi_ente__ChangeEvent = {
  //
};

type ChildRelationships$Registro_eventi_ente__ChangeEvent = {
  //
};

interface SObjectDefinition$Registro_eventi_ente__ChangeEvent extends SObjectDefinition<'Registro_eventi_ente__ChangeEvent'> {
    Name: 'Registro_eventi_ente__ChangeEvent';
    Fields: Fields$Registro_eventi_ente__ChangeEvent;
    ParentReferences: ParentReferences$Registro_eventi_ente__ChangeEvent;
    ChildRelationships: ChildRelationships$Registro_eventi_ente__ChangeEvent;
  }

type Fields$Registro_eventi_ente__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Registro_eventi_ente__History = {
  //
  Parent: SObjectDefinition$Registro_eventi_ente__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Registro_eventi_ente__History = {
  //
};

interface SObjectDefinition$Registro_eventi_ente__History extends SObjectDefinition<'Registro_eventi_ente__History'> {
    Name: 'Registro_eventi_ente__History';
    Fields: Fields$Registro_eventi_ente__History;
    ParentReferences: ParentReferences$Registro_eventi_ente__History;
    ChildRelationships: ChildRelationships$Registro_eventi_ente__History;
  }

type Fields$Registro_eventi_ente__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Registro_eventi_ente__Share = {
  //
  Parent: SObjectDefinition$Registro_eventi_ente__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Registro_eventi_ente__Share = {
  //
};

interface SObjectDefinition$Registro_eventi_ente__Share extends SObjectDefinition<'Registro_eventi_ente__Share'> {
    Name: 'Registro_eventi_ente__Share';
    Fields: Fields$Registro_eventi_ente__Share;
    ParentReferences: ParentReferences$Registro_eventi_ente__Share;
    ChildRelationships: ChildRelationships$Registro_eventi_ente__Share;
  }

type Fields$Registro_eventi_ente__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  Codice_IPA_ente_correlato__c: string | null;
  Codice_fiscale_ente_correlato__c: string | null;
  Codice_meccanografico_ente_correlato__c: string | null;
  Comune_ente_correlato__c: string | null;
  Data_effettiva_variazione__c: DateString | null;
  Data_prevista_variazione__c: DateString | null;
  Denominazione_ente_correlato__c: string | null;
  Elaborato__c: boolean;
  Ente_correlato__c: string | null;
  Ente_destinazione__c: string | null;
  Ente_di_origine__c: number | null;
  Fonte__c: string | null;
  Motivazione_variazione__c: string | null;
  Note_soppressione__c: string | null;
  Provincia_ente_correlato__c: string | null;
  Regione_ente_correlato__c: string | null;
  Variazione__c: boolean;
};

type ParentReferences$Registro_eventi_ente__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Ente_correlato__r: SObjectDefinition$Account | null;
  Ente_destinazione__r: SObjectDefinition$Account | null;
};

type ChildRelationships$Registro_eventi_ente__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Registro_eventi_ente__History;
  Shares: SObjectDefinition$Registro_eventi_ente__Share;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Registro_eventi_ente__c extends SObjectDefinition<'Registro_eventi_ente__c'> {
    Name: 'Registro_eventi_ente__c';
    Fields: Fields$Registro_eventi_ente__c;
    ParentReferences: ParentReferences$Registro_eventi_ente__c;
    ChildRelationships: ChildRelationships$Registro_eventi_ente__c;
  }

type Fields$RegulatoryAuthApplication = {
  //
  Id: string;
  ImplementorType: string | null;
  Description: string | null;
  AccountId: string | null;
  AppliedDate: DateString;
  ApprovedDate: DateString | null;
  PaymentDate: DateString | null;
  RequirementsCompleteDate: DateString | null;
  AmountPaid: number | null;
  ApplicationCategory: string;
  ApplicationType: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$RegulatoryAuthApplication = {
  //
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryAuthApplication = {
  //
};

interface SObjectDefinition$RegulatoryAuthApplication extends SObjectDefinition<'RegulatoryAuthApplication'> {
    Name: 'RegulatoryAuthApplication';
    Fields: Fields$RegulatoryAuthApplication;
    ParentReferences: ParentReferences$RegulatoryAuthApplication;
    ChildRelationships: ChildRelationships$RegulatoryAuthApplication;
  }

type Fields$RegulatoryAuthority = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
};

type ParentReferences$RegulatoryAuthority = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryAuthority = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$RegulatoryAuthorityFeed;
  Histories: SObjectDefinition$RegulatoryAuthorityHistory;
  Shares: SObjectDefinition$RegulatoryAuthorityShare;
  RATRegulatoryAuthority: SObjectDefinition$RegulatoryAuthorizationType;
  RegulatoryCodeAuthority: SObjectDefinition$RegulatoryCode;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$RegulatoryAuthority extends SObjectDefinition<'RegulatoryAuthority'> {
    Name: 'RegulatoryAuthority';
    Fields: Fields$RegulatoryAuthority;
    ParentReferences: ParentReferences$RegulatoryAuthority;
    ChildRelationships: ChildRelationships$RegulatoryAuthority;
  }

type Fields$RegulatoryAuthorityFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$RegulatoryAuthorityFeed = {
  //
  Parent: SObjectDefinition$RegulatoryAuthority;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$RegulatoryAuthorityFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$RegulatoryAuthorityFeed extends SObjectDefinition<'RegulatoryAuthorityFeed'> {
    Name: 'RegulatoryAuthorityFeed';
    Fields: Fields$RegulatoryAuthorityFeed;
    ParentReferences: ParentReferences$RegulatoryAuthorityFeed;
    ChildRelationships: ChildRelationships$RegulatoryAuthorityFeed;
  }

type Fields$RegulatoryAuthorityHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  RegulatoryAuthorityId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$RegulatoryAuthorityHistory = {
  //
  RegulatoryAuthority: SObjectDefinition$RegulatoryAuthority;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryAuthorityHistory = {
  //
};

interface SObjectDefinition$RegulatoryAuthorityHistory extends SObjectDefinition<'RegulatoryAuthorityHistory'> {
    Name: 'RegulatoryAuthorityHistory';
    Fields: Fields$RegulatoryAuthorityHistory;
    ParentReferences: ParentReferences$RegulatoryAuthorityHistory;
    ChildRelationships: ChildRelationships$RegulatoryAuthorityHistory;
  }

type Fields$RegulatoryAuthorityShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$RegulatoryAuthorityShare = {
  //
  Parent: SObjectDefinition$RegulatoryAuthority;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryAuthorityShare = {
  //
};

interface SObjectDefinition$RegulatoryAuthorityShare extends SObjectDefinition<'RegulatoryAuthorityShare'> {
    Name: 'RegulatoryAuthorityShare';
    Fields: Fields$RegulatoryAuthorityShare;
    ParentReferences: ParentReferences$RegulatoryAuthorityShare;
    ChildRelationships: ChildRelationships$RegulatoryAuthorityShare;
  }

type Fields$RegulatoryAuthorizationType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  RegulatoryAuthCode: string | null;
  RegulatoryAuthCategory: string | null;
  Jurisdiction: string | null;
  IssuingDepartmentId: string | null;
  ProcessingDuration: string | null;
  DurationType: string | null;
};

type ParentReferences$RegulatoryAuthorizationType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  IssuingDepartment: SObjectDefinition$RegulatoryAuthority | null;
};

type ChildRelationships$RegulatoryAuthorizationType = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RegulatoryAuthAndBusinessTypeRelations: SObjectDefinition$BusRegAuthorizationType;
  BusinessLicenses: SObjectDefinition$BusinessLicense;
  BusinessLicenseApplicationsLicenseType: SObjectDefinition$BusinessLicenseApplication;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  IndividualApplicationLicenseType: SObjectDefinition$IndividualApplication;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  ProductRegulatoryAuthorizationType: SObjectDefinition$RegAuthorizationTypeProduct;
  Shares: SObjectDefinition$RegulatoryAuthorizationTypeShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$RegulatoryAuthorizationType extends SObjectDefinition<'RegulatoryAuthorizationType'> {
    Name: 'RegulatoryAuthorizationType';
    Fields: Fields$RegulatoryAuthorizationType;
    ParentReferences: ParentReferences$RegulatoryAuthorizationType;
    ChildRelationships: ChildRelationships$RegulatoryAuthorizationType;
  }

type Fields$RegulatoryAuthorizationTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$RegulatoryAuthorizationTypeShare = {
  //
  Parent: SObjectDefinition$RegulatoryAuthorizationType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryAuthorizationTypeShare = {
  //
};

interface SObjectDefinition$RegulatoryAuthorizationTypeShare extends SObjectDefinition<'RegulatoryAuthorizationTypeShare'> {
    Name: 'RegulatoryAuthorizationTypeShare';
    Fields: Fields$RegulatoryAuthorizationTypeShare;
    ParentReferences: ParentReferences$RegulatoryAuthorizationTypeShare;
    ChildRelationships: ChildRelationships$RegulatoryAuthorizationTypeShare;
  }

type Fields$RegulatoryCode = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RegulatoryAuthorityId: string;
  ParentCodeId: string | null;
  Subject: string;
  Description: string | null;
  Type: string | null;
  IsActive: boolean;
  EffectiveFrom: DateString;
  EffectiveTo: DateString | null;
};

type ParentReferences$RegulatoryCode = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RegulatoryAuthority: SObjectDefinition$RegulatoryAuthority;
  ParentCode: SObjectDefinition$RegulatoryCode | null;
};

type ChildRelationships$RegulatoryCode = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$RegulatoryCodeFeed;
  Histories: SObjectDefinition$RegulatoryCodeHistory;
  RegCodeViolationRegCode: SObjectDefinition$RegulatoryCodeViolation;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$RegulatoryCode extends SObjectDefinition<'RegulatoryCode'> {
    Name: 'RegulatoryCode';
    Fields: Fields$RegulatoryCode;
    ParentReferences: ParentReferences$RegulatoryCode;
    ChildRelationships: ChildRelationships$RegulatoryCode;
  }

type Fields$RegulatoryCodeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$RegulatoryCodeFeed = {
  //
  Parent: SObjectDefinition$RegulatoryCode;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$RegulatoryCodeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$RegulatoryCodeFeed extends SObjectDefinition<'RegulatoryCodeFeed'> {
    Name: 'RegulatoryCodeFeed';
    Fields: Fields$RegulatoryCodeFeed;
    ParentReferences: ParentReferences$RegulatoryCodeFeed;
    ChildRelationships: ChildRelationships$RegulatoryCodeFeed;
  }

type Fields$RegulatoryCodeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  RegulatoryCodeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$RegulatoryCodeHistory = {
  //
  RegulatoryCode: SObjectDefinition$RegulatoryCode;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryCodeHistory = {
  //
};

interface SObjectDefinition$RegulatoryCodeHistory extends SObjectDefinition<'RegulatoryCodeHistory'> {
    Name: 'RegulatoryCodeHistory';
    Fields: Fields$RegulatoryCodeHistory;
    ParentReferences: ParentReferences$RegulatoryCodeHistory;
    ChildRelationships: ChildRelationships$RegulatoryCodeHistory;
  }

type Fields$RegulatoryCodeViolation = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ViolationTypeId: string | null;
  RegulatoryCodeId: string | null;
  Status: string | null;
  Priority: string | null;
  Description: string | null;
  CorrectiveActionDescription: string | null;
  DateCreated: DateString;
  ComplianceDueDate: DateString | null;
  DateResolved: DateString | null;
  DaysOpen: number | null;
  RecurrenceCount: number | null;
  ResolutionNotes: string | null;
};

type ParentReferences$RegulatoryCodeViolation = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ViolationType: SObjectDefinition$ViolationType | null;
  RegulatoryCode: SObjectDefinition$RegulatoryCode | null;
};

type ChildRelationships$RegulatoryCodeViolation = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$RegulatoryCodeViolationFeed;
  Histories: SObjectDefinition$RegulatoryCodeViolationHistory;
  Shares: SObjectDefinition$RegulatoryCodeViolationShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RegCodeViolationEnforcementAction: SObjectDefinition$ViolationEnforcementAction;
};

interface SObjectDefinition$RegulatoryCodeViolation extends SObjectDefinition<'RegulatoryCodeViolation'> {
    Name: 'RegulatoryCodeViolation';
    Fields: Fields$RegulatoryCodeViolation;
    ParentReferences: ParentReferences$RegulatoryCodeViolation;
    ChildRelationships: ChildRelationships$RegulatoryCodeViolation;
  }

type Fields$RegulatoryCodeViolationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$RegulatoryCodeViolationFeed = {
  //
  Parent: SObjectDefinition$RegulatoryCodeViolation;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$RegulatoryCodeViolationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$RegulatoryCodeViolationFeed extends SObjectDefinition<'RegulatoryCodeViolationFeed'> {
    Name: 'RegulatoryCodeViolationFeed';
    Fields: Fields$RegulatoryCodeViolationFeed;
    ParentReferences: ParentReferences$RegulatoryCodeViolationFeed;
    ChildRelationships: ChildRelationships$RegulatoryCodeViolationFeed;
  }

type Fields$RegulatoryCodeViolationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  RegulatoryCodeViolationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$RegulatoryCodeViolationHistory = {
  //
  RegulatoryCodeViolation: SObjectDefinition$RegulatoryCodeViolation;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryCodeViolationHistory = {
  //
};

interface SObjectDefinition$RegulatoryCodeViolationHistory extends SObjectDefinition<'RegulatoryCodeViolationHistory'> {
    Name: 'RegulatoryCodeViolationHistory';
    Fields: Fields$RegulatoryCodeViolationHistory;
    ParentReferences: ParentReferences$RegulatoryCodeViolationHistory;
    ChildRelationships: ChildRelationships$RegulatoryCodeViolationHistory;
  }

type Fields$RegulatoryCodeViolationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$RegulatoryCodeViolationShare = {
  //
  Parent: SObjectDefinition$RegulatoryCodeViolation;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RegulatoryCodeViolationShare = {
  //
};

interface SObjectDefinition$RegulatoryCodeViolationShare extends SObjectDefinition<'RegulatoryCodeViolationShare'> {
    Name: 'RegulatoryCodeViolationShare';
    Fields: Fields$RegulatoryCodeViolationShare;
    ParentReferences: ParentReferences$RegulatoryCodeViolationShare;
    ChildRelationships: ChildRelationships$RegulatoryCodeViolationShare;
  }

type Fields$Report = {
  //
  Id: string;
  OwnerId: string;
  FolderName: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
  Name: string;
  Description: string | null;
  DeveloperName: string;
  NamespacePrefix: string | null;
  LastRunDate: DateString | null;
  SystemModstamp: DateString;
  Format: string;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Report = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Report = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Feeds: SObjectDefinition$ReportFeed;
};

interface SObjectDefinition$Report extends SObjectDefinition<'Report'> {
    Name: 'Report';
    Fields: Fields$Report;
    ParentReferences: ParentReferences$Report;
    ChildRelationships: ChildRelationships$Report;
  }

type Fields$ReportFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ReportFeed = {
  //
  Parent: SObjectDefinition$Report;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ReportFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ReportFeed extends SObjectDefinition<'ReportFeed'> {
    Name: 'ReportFeed';
    Fields: Fields$ReportFeed;
    ParentReferences: ParentReferences$ReportFeed;
    ChildRelationships: ChildRelationships$ReportFeed;
  }

type Fields$Rubrica__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Alle_ore__c: DateString | null;
  Cellulare__c: string | null;
  Dalle_ore__c: DateString | null;
  Email__c: string | null;
  Ente__c: string | null;
  Giorni_reperibilit__c: string | null;
  Misura_di_riferimento__c: string | null;
  Nome_e_cognome__c: string | null;
  Note__c: string | null;
  Posizione_lavorativa__c: string | null;
};

type ParentReferences$Rubrica__ChangeEvent = {
  //
};

type ChildRelationships$Rubrica__ChangeEvent = {
  //
};

interface SObjectDefinition$Rubrica__ChangeEvent extends SObjectDefinition<'Rubrica__ChangeEvent'> {
    Name: 'Rubrica__ChangeEvent';
    Fields: Fields$Rubrica__ChangeEvent;
    ParentReferences: ParentReferences$Rubrica__ChangeEvent;
    ChildRelationships: ChildRelationships$Rubrica__ChangeEvent;
  }

type Fields$Rubrica__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Rubrica__History = {
  //
  Parent: SObjectDefinition$Rubrica__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Rubrica__History = {
  //
};

interface SObjectDefinition$Rubrica__History extends SObjectDefinition<'Rubrica__History'> {
    Name: 'Rubrica__History';
    Fields: Fields$Rubrica__History;
    ParentReferences: ParentReferences$Rubrica__History;
    ChildRelationships: ChildRelationships$Rubrica__History;
  }

type Fields$Rubrica__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Alle_ore__c: DateString | null;
  Cellulare__c: string | null;
  Dalle_ore__c: DateString | null;
  Email__c: string | null;
  Ente__c: string | null;
  Giorni_reperibilit__c: string | null;
  Misura_di_riferimento__c: string | null;
  Nome_e_cognome__c: string | null;
  Note__c: string | null;
  Posizione_lavorativa__c: string | null;
};

type ParentReferences$Rubrica__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Ente__r: SObjectDefinition$Account | null;
};

type ChildRelationships$Rubrica__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Rubrica__History;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Rubrica__c extends SObjectDefinition<'Rubrica__c'> {
    Name: 'Rubrica__c';
    Fields: Fields$Rubrica__c;
    ParentReferences: ParentReferences$Rubrica__c;
    ChildRelationships: ChildRelationships$Rubrica__c;
  }

type Fields$Scontrol = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  Description: string | null;
  EncodingKey: string;
  HtmlWrapper: string;
  Filename: string | null;
  BodyLength: number;
  Binary: BlobString | null;
  ContentSource: string | null;
  SupportsCaching: boolean;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$Scontrol = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Scontrol = {
  //
};

interface SObjectDefinition$Scontrol extends SObjectDefinition<'Scontrol'> {
    Name: 'Scontrol';
    Fields: Fields$Scontrol;
    ParentReferences: ParentReferences$Scontrol;
    ChildRelationships: ChildRelationships$Scontrol;
  }

type Fields$SearchActivity = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SearchTerm: string;
  QueryDate: DateString;
  CountQueries: number;
  CountUsers: number;
  AvgNumResults: number;
  KbChannel: string;
  Period: string;
  ClickRank: number | null;
  ClickedRecordId: string | null;
  QueryLanguage: string;
  ClickedRecordName: string | null;
};

type ParentReferences$SearchActivity = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ClickedRecord: SObjectDefinition$Knowledge__kav | null;
};

type ChildRelationships$SearchActivity = {
  //
};

interface SObjectDefinition$SearchActivity extends SObjectDefinition<'SearchActivity'> {
    Name: 'SearchActivity';
    Fields: Fields$SearchActivity;
    ParentReferences: ParentReferences$SearchActivity;
    ChildRelationships: ChildRelationships$SearchActivity;
  }

type Fields$ServiceChannel = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RelatedEntity: string;
  DoesMinimizeWidgetOnAccept: boolean;
};

type ParentReferences$ServiceChannel = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ServiceChannel = {
  //
};

interface SObjectDefinition$ServiceChannel extends SObjectDefinition<'ServiceChannel'> {
    Name: 'ServiceChannel';
    Fields: Fields$ServiceChannel;
    ParentReferences: ParentReferences$ServiceChannel;
    ChildRelationships: ChildRelationships$ServiceChannel;
  }

type Fields$ServiceChannelStatus = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ServiceChannelId: string;
  ServicePresenceStatusId: string | null;
};

type ParentReferences$ServiceChannelStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ServiceChannel: SObjectDefinition$ServiceChannel;
  ServicePresenceStatus: SObjectDefinition$ServicePresenceStatus | null;
};

type ChildRelationships$ServiceChannelStatus = {
  //
};

interface SObjectDefinition$ServiceChannelStatus extends SObjectDefinition<'ServiceChannelStatus'> {
    Name: 'ServiceChannelStatus';
    Fields: Fields$ServiceChannelStatus;
    ParentReferences: ParentReferences$ServiceChannelStatus;
    ChildRelationships: ChildRelationships$ServiceChannelStatus;
  }

type Fields$ServiceContract = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string | null;
  ContactId: string | null;
  Term: number | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  ActivationDate: DateString | null;
  ApprovalStatus: string | null;
  Description: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  Pricebook2Id: string | null;
  ShippingHandling: number | null;
  Tax: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  ContractNumber: string;
  SpecialTerms: string | null;
  Discount: number | null;
  GrandTotal: number | null;
  Status: string | null;
  ParentServiceContractId: string | null;
  RootServiceContractId: string | null;
};

type ParentReferences$ServiceContract = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account | null;
  Contact: SObjectDefinition$Contact | null;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  ParentServiceContract: SObjectDefinition$ServiceContract | null;
  RootServiceContract: SObjectDefinition$ServiceContract | null;
};

type ChildRelationships$ServiceContract = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractLineItems: SObjectDefinition$ContractLineItem;
  Emails: SObjectDefinition$EmailMessage;
  Entitlements: SObjectDefinition$Entitlement;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  ChildServiceContracts: SObjectDefinition$ServiceContract;
  DescendantServiceContracts: SObjectDefinition$ServiceContract;
  Feeds: SObjectDefinition$ServiceContractFeed;
  Histories: SObjectDefinition$ServiceContractHistory;
  Shares: SObjectDefinition$ServiceContractShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  WorkOrders: SObjectDefinition$WorkOrder;
};

interface SObjectDefinition$ServiceContract extends SObjectDefinition<'ServiceContract'> {
    Name: 'ServiceContract';
    Fields: Fields$ServiceContract;
    ParentReferences: ParentReferences$ServiceContract;
    ChildRelationships: ChildRelationships$ServiceContract;
  }

type Fields$ServiceContractChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  AccountId: string | null;
  ContactId: string | null;
  Term: number | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  ActivationDate: DateString | null;
  ApprovalStatus: string | null;
  Description: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  Pricebook2Id: string | null;
  ShippingHandling: number | null;
  Tax: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  ContractNumber: string;
  SpecialTerms: string | null;
  ParentServiceContractId: string | null;
  RootServiceContractId: string | null;
};

type ParentReferences$ServiceContractChangeEvent = {
  //
};

type ChildRelationships$ServiceContractChangeEvent = {
  //
};

interface SObjectDefinition$ServiceContractChangeEvent extends SObjectDefinition<'ServiceContractChangeEvent'> {
    Name: 'ServiceContractChangeEvent';
    Fields: Fields$ServiceContractChangeEvent;
    ParentReferences: ParentReferences$ServiceContractChangeEvent;
    ChildRelationships: ChildRelationships$ServiceContractChangeEvent;
  }

type Fields$ServiceContractFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ServiceContractFeed = {
  //
  Parent: SObjectDefinition$ServiceContract;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ServiceContractFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ServiceContractFeed extends SObjectDefinition<'ServiceContractFeed'> {
    Name: 'ServiceContractFeed';
    Fields: Fields$ServiceContractFeed;
    ParentReferences: ParentReferences$ServiceContractFeed;
    ChildRelationships: ChildRelationships$ServiceContractFeed;
  }

type Fields$ServiceContractHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ServiceContractId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ServiceContractHistory = {
  //
  ServiceContract: SObjectDefinition$ServiceContract;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ServiceContractHistory = {
  //
};

interface SObjectDefinition$ServiceContractHistory extends SObjectDefinition<'ServiceContractHistory'> {
    Name: 'ServiceContractHistory';
    Fields: Fields$ServiceContractHistory;
    ParentReferences: ParentReferences$ServiceContractHistory;
    ChildRelationships: ChildRelationships$ServiceContractHistory;
  }

type Fields$ServiceContractShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ServiceContractShare = {
  //
  Parent: SObjectDefinition$ServiceContract;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ServiceContractShare = {
  //
};

interface SObjectDefinition$ServiceContractShare extends SObjectDefinition<'ServiceContractShare'> {
    Name: 'ServiceContractShare';
    Fields: Fields$ServiceContractShare;
    ParentReferences: ParentReferences$ServiceContractShare;
    ChildRelationships: ChildRelationships$ServiceContractShare;
  }

type Fields$ServicePresenceStatus = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ServicePresenceStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ServicePresenceStatus = {
  //
};

interface SObjectDefinition$ServicePresenceStatus extends SObjectDefinition<'ServicePresenceStatus'> {
    Name: 'ServicePresenceStatus';
    Fields: Fields$ServicePresenceStatus;
    ParentReferences: ParentReferences$ServicePresenceStatus;
    ChildRelationships: ChildRelationships$ServicePresenceStatus;
  }

type Fields$ServiceResource = {
  //
  Id: string;
  OwnerId: string;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RelatedRecordId: string | null;
  ResourceType: string | null;
  Description: string | null;
  IsActive: boolean;
  LocationId: string | null;
  AccountId: string | null;
};

type ParentReferences$ServiceResource = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RelatedRecord: SObjectDefinition$User | null;
  Location: SObjectDefinition$Location | null;
  Account: SObjectDefinition$Account | null;
};

type ChildRelationships$ServiceResource = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Feeds: SObjectDefinition$ServiceResourceFeed;
  Histories: SObjectDefinition$ServiceResourceHistory;
  Shares: SObjectDefinition$ServiceResourceShare;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$ServiceResource extends SObjectDefinition<'ServiceResource'> {
    Name: 'ServiceResource';
    Fields: Fields$ServiceResource;
    ParentReferences: ParentReferences$ServiceResource;
    ChildRelationships: ChildRelationships$ServiceResource;
  }

type Fields$ServiceResourceChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  RelatedRecordId: string | null;
  ResourceType: string | null;
  Description: string | null;
  IsActive: boolean;
  LocationId: string | null;
  AccountId: string | null;
};

type ParentReferences$ServiceResourceChangeEvent = {
  //
};

type ChildRelationships$ServiceResourceChangeEvent = {
  //
};

interface SObjectDefinition$ServiceResourceChangeEvent extends SObjectDefinition<'ServiceResourceChangeEvent'> {
    Name: 'ServiceResourceChangeEvent';
    Fields: Fields$ServiceResourceChangeEvent;
    ParentReferences: ParentReferences$ServiceResourceChangeEvent;
    ChildRelationships: ChildRelationships$ServiceResourceChangeEvent;
  }

type Fields$ServiceResourceFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ServiceResourceFeed = {
  //
  Parent: SObjectDefinition$ServiceResource;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ServiceResourceFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ServiceResourceFeed extends SObjectDefinition<'ServiceResourceFeed'> {
    Name: 'ServiceResourceFeed';
    Fields: Fields$ServiceResourceFeed;
    ParentReferences: ParentReferences$ServiceResourceFeed;
    ChildRelationships: ChildRelationships$ServiceResourceFeed;
  }

type Fields$ServiceResourceHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ServiceResourceId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ServiceResourceHistory = {
  //
  ServiceResource: SObjectDefinition$ServiceResource;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ServiceResourceHistory = {
  //
};

interface SObjectDefinition$ServiceResourceHistory extends SObjectDefinition<'ServiceResourceHistory'> {
    Name: 'ServiceResourceHistory';
    Fields: Fields$ServiceResourceHistory;
    ParentReferences: ParentReferences$ServiceResourceHistory;
    ChildRelationships: ChildRelationships$ServiceResourceHistory;
  }

type Fields$ServiceResourceShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ServiceResourceShare = {
  //
  Parent: SObjectDefinition$ServiceResource;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ServiceResourceShare = {
  //
};

interface SObjectDefinition$ServiceResourceShare extends SObjectDefinition<'ServiceResourceShare'> {
    Name: 'ServiceResourceShare';
    Fields: Fields$ServiceResourceShare;
    ParentReferences: ParentReferences$ServiceResourceShare;
    ChildRelationships: ChildRelationships$ServiceResourceShare;
  }

type Fields$Servizio_Attivo__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Codice_Servizio__c: string | null;
  Data_Attivazione__c: DateString | null;
  Descrizione_Servizio__c: string | null;
  Ente__c: string | null;
  External_Key__c: string | null;
  Piattaforma_Servizi__c: string | null;
  Fondo_Innovazione__c: boolean;
  Stato__c: string | null;
  Unico__c: boolean;
  Creazione_notifica_manuale__c: boolean;
  Data_chiamata_api_costo_notifica__c: DateString | null;
  Data_creazione_notifica__c: DateString | null;
  Data_integrazione_pdnd__c: DateString | null;
  Data_transfer_timestamp__c: DateString | null;
  Data_versamento_pagopa__c: DateString | null;
  Pdnd_writing_timestamp__c: DateString | null;
  Priority_notifica__c: string | null;
  Tipologia_attualizzazione__c: string | null;
  Argomento__c: string | null;
  Codice_Catalogo_Attribuito__c: string | null;
  Nome_Servizio__c: string | null;
  Ente_Backup__c: string | null;
  Data_cancellazione_pagoPA__c: DateString | null;
  IsDeleted_pagoPA__c: boolean;
  Conformita_specifiche_tecniche__c: string | null;
  Codice_github__c: string | null;
  Data_adesione_ANSC__c: DateString | null;
  Data_chiusura_registri_cartacei__c: DateString | null;
  Data_comunicazione_impossibilita_atto__c: DateString | null;
  Descrizione_api__c: string | null;
  Descrizione_errore_specifiche_tecniche__c: string | null;
  Formaz_primo_atto_stato_civile_digitale__c: DateString | null;
  Formazione_primo_atto__c: string | null;
  Soluzione_tecnologica_utilizzata__c: string | null;
  Caratteristica_servizio__c: string | null;
  Descriptor_id__c: string | null;
};

type ParentReferences$Servizio_Attivo__ChangeEvent = {
  //
};

type ChildRelationships$Servizio_Attivo__ChangeEvent = {
  //
};

interface SObjectDefinition$Servizio_Attivo__ChangeEvent extends SObjectDefinition<'Servizio_Attivo__ChangeEvent'> {
    Name: 'Servizio_Attivo__ChangeEvent';
    Fields: Fields$Servizio_Attivo__ChangeEvent;
    ParentReferences: ParentReferences$Servizio_Attivo__ChangeEvent;
    ChildRelationships: ChildRelationships$Servizio_Attivo__ChangeEvent;
  }

type Fields$Servizio_Attivo__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Servizio_Attivo__History = {
  //
  Parent: SObjectDefinition$Servizio_Attivo__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Servizio_Attivo__History = {
  //
};

interface SObjectDefinition$Servizio_Attivo__History extends SObjectDefinition<'Servizio_Attivo__History'> {
    Name: 'Servizio_Attivo__History';
    Fields: Fields$Servizio_Attivo__History;
    ParentReferences: ParentReferences$Servizio_Attivo__History;
    ChildRelationships: ChildRelationships$Servizio_Attivo__History;
  }

type Fields$Servizio_Attivo__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Servizio_Attivo__Share = {
  //
  Parent: SObjectDefinition$Servizio_Attivo__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Servizio_Attivo__Share = {
  //
};

interface SObjectDefinition$Servizio_Attivo__Share extends SObjectDefinition<'Servizio_Attivo__Share'> {
    Name: 'Servizio_Attivo__Share';
    Fields: Fields$Servizio_Attivo__Share;
    ParentReferences: ParentReferences$Servizio_Attivo__Share;
    ChildRelationships: ChildRelationships$Servizio_Attivo__Share;
  }

type Fields$Servizio_Attivo__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  Codice_Servizio__c: string | null;
  Data_Attivazione__c: DateString | null;
  Descrizione_Servizio__c: string | null;
  Ente__c: string | null;
  External_Key__c: string | null;
  Piattaforma_Servizi__c: string | null;
  Fondo_Innovazione__c: boolean;
  Stato__c: string | null;
  Unico__c: boolean;
  Creazione_notifica_manuale__c: boolean;
  Data_chiamata_api_costo_notifica__c: DateString | null;
  Data_creazione_notifica__c: DateString | null;
  Data_integrazione_pdnd__c: DateString | null;
  Data_transfer_timestamp__c: DateString | null;
  Data_versamento_pagopa__c: DateString | null;
  Pdnd_writing_timestamp__c: DateString | null;
  Priority_notifica__c: string | null;
  Tipologia_attualizzazione__c: string | null;
  Argomento__c: string | null;
  Codice_Catalogo_Attribuito__c: string | null;
  Nome_Servizio__c: string | null;
  Ente_Backup__c: string | null;
  Data_cancellazione_pagoPA__c: DateString | null;
  IsDeleted_pagoPA__c: boolean;
  Conformita_specifiche_tecniche__c: string | null;
  Codice_github__c: string | null;
  Data_adesione_ANSC__c: DateString | null;
  Data_chiusura_registri_cartacei__c: DateString | null;
  Data_comunicazione_impossibilita_atto__c: DateString | null;
  Descrizione_api__c: string | null;
  Descrizione_errore_specifiche_tecniche__c: string | null;
  Formaz_primo_atto_stato_civile_digitale__c: DateString | null;
  Formazione_primo_atto__c: string | null;
  Soluzione_tecnologica_utilizzata__c: string | null;
  Caratteristica_servizio__c: string | null;
  Descriptor_id__c: string | null;
};

type ParentReferences$Servizio_Attivo__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Ente__r: SObjectDefinition$Account | null;
  Ente_Backup__r: SObjectDefinition$Account | null;
};

type ChildRelationships$Servizio_Attivo__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Servizio_Attivo__History;
  Shares: SObjectDefinition$Servizio_Attivo__Share;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Servizio_Attivo__c extends SObjectDefinition<'Servizio_Attivo__c'> {
    Name: 'Servizio_Attivo__c';
    Fields: Fields$Servizio_Attivo__c;
    ParentReferences: ParentReferences$Servizio_Attivo__c;
    ChildRelationships: ChildRelationships$Servizio_Attivo__c;
  }

type Fields$Servizio_Richiesta__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Candidatura__c: string | null;
  Codice_Servizio__c: string | null;
  Destinazione__c: string | null;
  Modalita_di_Migrazione__c: string | null;
  Selezionato__c: boolean;
  Servizio__c: string | null;
  Stato_Attivit__c: string | null;
  CPU__c: number | null;
  Data_Attivazione_CSP__c: DateString | null;
  Data_Inizio_Migrazione__c: DateString | null;
  Data_Rilascio_esercizio__c: DateString | null;
  Data_di_Integrazione__c: DateString | null;
  Data_di_completamento__c: DateString | null;
  Integrazione_OpenId__c: boolean;
  Memoria__c: number | null;
  Nome_Applicativo__c: string | null;
  Numero_utenti__c: number | null;
  Spazio_complessivo__c: number | null;
  Stato_formazione__c: string | null;
  Stato_scheda_Valutazione__c: string | null;
  Data_attivazione_servizio__c: DateString | null;
  Descrizione_controlli__c: string | null;
  Esito_controlli__c: string | null;
  Descrizione_API__c: string | null;
  Nome_API__c: string | null;
  Esito_Classificazione__c: string | null;
  hasPDM__c: boolean;
  Aggiunto_in_modifica__c: boolean;
  Da_eliminare__c: boolean;
  Istanza_di_modifica__c: string | null;
  Selezionato_in_modifica__c: boolean;
  Numero_elementi__c: number | null;
  Attivazione_in_produzione__c: boolean;
  Attivazione_in_produzione_motivazione__c: string | null;
  Cambio_modalit_migrazione__c: boolean;
  Completezza_della_migrazione_dei_dati__c: boolean;
  Completezza_migrazione_dati_motivazione__c: string | null;
  Destinazione_Cloud__c: string | null;
  Identificativi_univoci_delle_componenti__c: string | null;
  Indirizzi_IP__c: string | null;
  Sistema_di_origine__c: string | null;
  Software_migrati_e_loro_caratteristiche__c: string | null;
  Soluzione_PaaS_adottata__c: string | null;
  Soluzione_SaaS_adottata__c: string | null;
  Visibilit_del_servizio__c: string | null;
  hasDocumenti__c: boolean;
  hasFornitori__c: boolean;
  Data_chiamata_api_costo_notifica__c: DateString | null;
  Data_creazione_notifica__c: DateString | null;
  Gestionale_interno_ente__c: boolean;
  Notifica_integrata_via_API__c: boolean;
  Aggiunto_Istanza_di_modifica__c: string | null;
  argomento_attribuito_143appIO__c: string | null;
  nome_servizio_attribuito_143appIO__c: string | null;
  codice_catalogo_attribuito_143appIO__c: string | null;
  Data_integrazione_PDND__c: DateString | null;
  File_Errors__c: string | null;
  Tipologia_attualizzazione__c: string | null;
  Avviso__c: string | null;
  Codice_tassonomico_ente__c: string | null;
  Data_Esercizio_CIE__c: DateString | null;
  Data_Esercizio_SPID__c: DateString | null;
  Data_esito_controlli_automatici__c: DateString | null;
  Data_versamento_PagoPA__c: DateString | null;
  Fondo_innovazione__c: boolean;
  Integrazione_dichiarata_dall_ente__c: string | null;
  Integrazione_rilevata_da_PagoPA__c: string | null;
  Numero_notifiche_inviate_dichiarate__c: number | null;
  Protocollo_CIE__c: string | null;
  Protocollo_SPID__c: string | null;
  SaaS_come_nuova_soluzione__c: boolean;
  SaaS_come_nuova_soluzione_motivazione__c: string | null;
  newSchedaSaas__c: boolean;
  App_migrati_sul_PSN_e_caratt_Housing__c: string | null;
  Applicativi__c: string | null;
  Asseverazione_primo_servizio__c: boolean;
  Destinazione_cloud_Hosting__c: boolean;
  Destinazione_cloud_Housing__c: boolean;
  Destinazione_cloud_IaaS__c: boolean;
  Destinazione_cloud_PaaS__c: boolean;
  Esito_asseverazione_primo_servizio__c: string | null;
  Host_App_migrati_sul_PSN_e_caratt__c: string | null;
  Host_Attivazione_in_produzione__c: boolean;
  Host_Completezza_migrazione_dati__c: boolean;
  Host_Data_Att_in_prod__c: DateString | null;
  Host_Data_Prev_Att_in_prod__c: DateString | null;
  Host_Identificat_univ_risorse_PSN__c: string | null;
  Host_Indirizzi_IP__c: string | null;
  Host_Motivazione_Compl_migr_dati__c: string | null;
  Host_Motivazione_attivaz_in_prod__c: string | null;
  Host_Scenario_di_ammissibilita__c: string | null;
  Host_Servizio_PSN_scelto__c: string | null;
  Host_Visibilita_del_servizio__c: string | null;
  HouS_Motivazione_Compl_migr_dati__c: string | null;
  Hous_Attivazione_in_produzione__c: boolean;
  Hous_Completezza_migrazione_dati__c: boolean;
  Hous_Data_Att_in_prod__c: DateString | null;
  Hous_Data_Center_PSN__c: string | null;
  Hous_Data_Prev_Att_in_prod__c: DateString | null;
  Hous_Indirizzi_IP__c: string | null;
  Hous_Motivazione_attivaz_in_prod__c: string | null;
  Hous_Rack_Id__c: string | null;
  Hous_Sala_PSN__c: string | null;
  Hous_Scenario_di_ammissibilita__c: string | null;
  Hous_Serial_Number_risorsa__c: string | null;
  Hous_Visibilita_del_servizio__c: string | null;
  IaaS_App_migrati_sul_PSN_e_caratt__c: string | null;
  IaaS_Attivazione_in_produzione__c: boolean;
  IaaS_Completezza_migrazione_dati__c: boolean;
  IaaS_Identificat_univ_risorse_PSN__c: string | null;
  IaaS_Indirizzi_IP__c: string | null;
  IaaS_Motivazione_attivaz_in_prod__c: string | null;
  IaaS_Motivazione_compl_migraz_dati__c: string | null;
  IaaS_Scenario_di_ammissibilita__c: string | null;
  IaaS_Servizio_PSN_scelto__c: string | null;
  IaaS_Visibilita_del_servizio__c: string | null;
  Iaas_Data_Att_in_prod__c: DateString | null;
  Iaas_Data_Prev_Att_in_prod__c: DateString | null;
  PaaS_App_migrati_sul_PSN_e_caratt__c: string | null;
  PaaS_Attivazione_in_produzione__c: boolean;
  PaaS_Completezza_migrazione_dati__c: boolean;
  PaaS_Identificat_univ_risorse_PSN__c: string | null;
  PaaS_Indirizzi_IP__c: string | null;
  PaaS_Motivazione_Compl_migr_dati__c: string | null;
  PaaS_Motivazione_attivaz_in_prod__c: string | null;
  PaaS_Scenario_di_ammissibilita__c: string | null;
  PaaS_Servizio_PSN_scelto__c: string | null;
  PaaS_Visibilita_del_servizio__c: string | null;
  Paas_Data_Att_in_prod__c: DateString | null;
  Paas_Data_Prev_Att_in_prod__c: DateString | null;
  Servizio_junction__c: boolean;
  Stato_Scheda_Hosting__c: boolean;
  Stato_Scheda_Housing__c: boolean;
  Stato_Scheda_IaaS__c: boolean;
  Stato_Scheda_PaaS__c: boolean;
  Stato_migrazione__c: string | null;
  Stato_questionario_Assessment__c: boolean;
  Destinazione_in_candidatura__c: string | null;
  Dismissione_sistema_legacy__c: boolean;
  DocJobId__c: string | null;
  Host_Data_prevista_migrazione_compl_dati__c: DateString | null;
  Host_Servizio_PSN_scelto_Multi__c: string | null;
  Hous_Data_prevista_migrazione_compl_dati__c: DateString | null;
  IaaS_Data_prevista_migrazione_compl_dati__c: DateString | null;
  IaaS_Servizio_PSN_scelto_Multi__c: string | null;
  Motivazione_dismissione_sistema_legacy__c: string | null;
  PaaS_Data_prevista_migrazione_compl_dati__c: DateString | null;
  Paas_Servizio_PSN_scelto_Multi__c: string | null;
  SaaS_Scenario_di_ammissibilita__c: string | null;
  Tipo_Misura__c: string | null;
  Stato_scheda_valutazione_multmisura__c: string | null;
  Classificazione_servizio__c: string | null;
  Dichiarazione_condizionale__c: boolean;
  StatoNotifica__c: string | null;
  Dichiarazione_ANSC__c: boolean;
  Notifiche_inviate__c: number | null;
  Numero_Notifiche__c: number | null;
  Conformita_specifiche_tecniche__c: string | null;
  Codice_github__c: string | null;
  Data_adesione_ANSC__c: DateString | null;
  Data_chiusura_registri_cartacei__c: DateString | null;
  Data_comunicazione_impossibilit_atto__c: DateString | null;
  Descrizione_errore_specifiche_tecniche__c: string | null;
  Descrizione_github__c: string | null;
  Formaz_primo_atto_stato_civile_digitale__c: DateString | null;
  Formazione_primo_atto__c: string | null;
  Soluzione_tecnologica_utilizzata__c: string | null;
  Caratteristica_servizio__c: string | null;
};

type ParentReferences$Servizio_Richiesta__ChangeEvent = {
  //
};

type ChildRelationships$Servizio_Richiesta__ChangeEvent = {
  //
};

interface SObjectDefinition$Servizio_Richiesta__ChangeEvent extends SObjectDefinition<'Servizio_Richiesta__ChangeEvent'> {
    Name: 'Servizio_Richiesta__ChangeEvent';
    Fields: Fields$Servizio_Richiesta__ChangeEvent;
    ParentReferences: ParentReferences$Servizio_Richiesta__ChangeEvent;
    ChildRelationships: ChildRelationships$Servizio_Richiesta__ChangeEvent;
  }

type Fields$Servizio_Richiesta__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Servizio_Richiesta__History = {
  //
  Parent: SObjectDefinition$Servizio_Richiesta__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Servizio_Richiesta__History = {
  //
};

interface SObjectDefinition$Servizio_Richiesta__History extends SObjectDefinition<'Servizio_Richiesta__History'> {
    Name: 'Servizio_Richiesta__History';
    Fields: Fields$Servizio_Richiesta__History;
    ParentReferences: ParentReferences$Servizio_Richiesta__History;
    ChildRelationships: ChildRelationships$Servizio_Richiesta__History;
  }

type Fields$Servizio_Richiesta__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  Candidatura__c: string;
  Codice_Servizio__c: string | null;
  Destinazione__c: string | null;
  Modalita_di_Migrazione__c: string | null;
  Selezionato__c: boolean;
  Servizio__c: string | null;
  Stato_Attivit__c: string | null;
  CPU__c: number | null;
  Data_Attivazione_CSP__c: DateString | null;
  Data_Inizio_Migrazione__c: DateString | null;
  Data_Rilascio_esercizio__c: DateString | null;
  Data_di_Integrazione__c: DateString | null;
  Data_di_completamento__c: DateString | null;
  Integrazione_OpenId__c: boolean;
  Memoria__c: number | null;
  Nome_Applicativo__c: string | null;
  Numero_utenti__c: number | null;
  Spazio_complessivo__c: number | null;
  Stato_formazione__c: string | null;
  Stato_scheda_Valutazione__c: string | null;
  Data_attivazione_servizio__c: DateString | null;
  Descrizione_controlli__c: string | null;
  Esito_controlli__c: string | null;
  Descrizione_API__c: string | null;
  Nome_API__c: string | null;
  Esito_Classificazione__c: string | null;
  hasPDM__c: boolean;
  Aggiunto_in_modifica__c: boolean;
  Da_eliminare__c: boolean;
  Istanza_di_modifica__c: string | null;
  Selezionato_in_modifica__c: boolean;
  Numero_elementi__c: number | null;
  Attivazione_in_produzione__c: boolean;
  Attivazione_in_produzione_motivazione__c: string | null;
  Cambio_modalit_migrazione__c: boolean;
  Completezza_della_migrazione_dei_dati__c: boolean;
  Completezza_migrazione_dati_motivazione__c: string | null;
  Destinazione_Cloud__c: string | null;
  Identificativi_univoci_delle_componenti__c: string | null;
  Indirizzi_IP__c: string | null;
  Sistema_di_origine__c: string | null;
  Software_migrati_e_loro_caratteristiche__c: string | null;
  Soluzione_PaaS_adottata__c: string | null;
  Soluzione_SaaS_adottata__c: string | null;
  Visibilit_del_servizio__c: string | null;
  hasDocumenti__c: boolean;
  hasFornitori__c: boolean;
  Data_chiamata_api_costo_notifica__c: DateString | null;
  Data_creazione_notifica__c: DateString | null;
  Gestionale_interno_ente__c: boolean;
  Notifica_integrata_via_API__c: boolean;
  Aggiunto_Istanza_di_modifica__c: string | null;
  argomento_attribuito_143appIO__c: string | null;
  nome_servizio_attribuito_143appIO__c: string | null;
  codice_catalogo_attribuito_143appIO__c: string | null;
  Data_integrazione_PDND__c: DateString | null;
  File_Errors__c: string | null;
  Tipologia_attualizzazione__c: string | null;
  Avviso__c: string | null;
  Codice_tassonomico_ente__c: string | null;
  Data_Esercizio_CIE__c: DateString | null;
  Data_Esercizio_SPID__c: DateString | null;
  Data_esito_controlli_automatici__c: DateString | null;
  Data_versamento_PagoPA__c: DateString | null;
  Fondo_innovazione__c: boolean;
  Integrazione_dichiarata_dall_ente__c: string | null;
  Integrazione_rilevata_da_PagoPA__c: string | null;
  Numero_notifiche_inviate_dichiarate__c: number | null;
  Protocollo_CIE__c: string | null;
  Protocollo_SPID__c: string | null;
  SaaS_come_nuova_soluzione__c: boolean;
  SaaS_come_nuova_soluzione_motivazione__c: string | null;
  newSchedaSaas__c: boolean;
  App_migrati_sul_PSN_e_caratt_Housing__c: string | null;
  Applicativi__c: string | null;
  Asseverazione_primo_servizio__c: boolean;
  Destinazione_cloud_Hosting__c: boolean;
  Destinazione_cloud_Housing__c: boolean;
  Destinazione_cloud_IaaS__c: boolean;
  Destinazione_cloud_PaaS__c: boolean;
  Esito_asseverazione_primo_servizio__c: string | null;
  Host_App_migrati_sul_PSN_e_caratt__c: string | null;
  Host_Attivazione_in_produzione__c: boolean;
  Host_Completezza_migrazione_dati__c: boolean;
  Host_Data_Att_in_prod__c: DateString | null;
  Host_Data_Prev_Att_in_prod__c: DateString | null;
  Host_Identificat_univ_risorse_PSN__c: string | null;
  Host_Indirizzi_IP__c: string | null;
  Host_Motivazione_Compl_migr_dati__c: string | null;
  Host_Motivazione_attivaz_in_prod__c: string | null;
  Host_Scenario_di_ammissibilita__c: string | null;
  Host_Servizio_PSN_scelto__c: string | null;
  Host_Visibilita_del_servizio__c: string | null;
  HouS_Motivazione_Compl_migr_dati__c: string | null;
  Hous_Attivazione_in_produzione__c: boolean;
  Hous_Completezza_migrazione_dati__c: boolean;
  Hous_Data_Att_in_prod__c: DateString | null;
  Hous_Data_Center_PSN__c: string | null;
  Hous_Data_Prev_Att_in_prod__c: DateString | null;
  Hous_Indirizzi_IP__c: string | null;
  Hous_Motivazione_attivaz_in_prod__c: string | null;
  Hous_Rack_Id__c: string | null;
  Hous_Sala_PSN__c: string | null;
  Hous_Scenario_di_ammissibilita__c: string | null;
  Hous_Serial_Number_risorsa__c: string | null;
  Hous_Visibilita_del_servizio__c: string | null;
  IaaS_App_migrati_sul_PSN_e_caratt__c: string | null;
  IaaS_Attivazione_in_produzione__c: boolean;
  IaaS_Completezza_migrazione_dati__c: boolean;
  IaaS_Identificat_univ_risorse_PSN__c: string | null;
  IaaS_Indirizzi_IP__c: string | null;
  IaaS_Motivazione_attivaz_in_prod__c: string | null;
  IaaS_Motivazione_compl_migraz_dati__c: string | null;
  IaaS_Scenario_di_ammissibilita__c: string | null;
  IaaS_Servizio_PSN_scelto__c: string | null;
  IaaS_Visibilita_del_servizio__c: string | null;
  Iaas_Data_Att_in_prod__c: DateString | null;
  Iaas_Data_Prev_Att_in_prod__c: DateString | null;
  PaaS_App_migrati_sul_PSN_e_caratt__c: string | null;
  PaaS_Attivazione_in_produzione__c: boolean;
  PaaS_Completezza_migrazione_dati__c: boolean;
  PaaS_Identificat_univ_risorse_PSN__c: string | null;
  PaaS_Indirizzi_IP__c: string | null;
  PaaS_Motivazione_Compl_migr_dati__c: string | null;
  PaaS_Motivazione_attivaz_in_prod__c: string | null;
  PaaS_Scenario_di_ammissibilita__c: string | null;
  PaaS_Servizio_PSN_scelto__c: string | null;
  PaaS_Visibilita_del_servizio__c: string | null;
  Paas_Data_Att_in_prod__c: DateString | null;
  Paas_Data_Prev_Att_in_prod__c: DateString | null;
  Servizio_junction__c: boolean;
  Stato_Scheda_Hosting__c: boolean;
  Stato_Scheda_Housing__c: boolean;
  Stato_Scheda_IaaS__c: boolean;
  Stato_Scheda_PaaS__c: boolean;
  Stato_migrazione__c: string | null;
  Stato_questionario_Assessment__c: boolean;
  Destinazione_in_candidatura__c: string | null;
  Dismissione_sistema_legacy__c: boolean;
  DocJobId__c: string | null;
  Host_Data_prevista_migrazione_compl_dati__c: DateString | null;
  Host_Servizio_PSN_scelto_Multi__c: string | null;
  Hous_Data_prevista_migrazione_compl_dati__c: DateString | null;
  IaaS_Data_prevista_migrazione_compl_dati__c: DateString | null;
  IaaS_Servizio_PSN_scelto_Multi__c: string | null;
  Motivazione_dismissione_sistema_legacy__c: string | null;
  PaaS_Data_prevista_migrazione_compl_dati__c: DateString | null;
  Paas_Servizio_PSN_scelto_Multi__c: string | null;
  SaaS_Scenario_di_ammissibilita__c: string | null;
  Tipo_Misura__c: string | null;
  Stato_scheda_valutazione_multmisura__c: string | null;
  Classificazione_servizio__c: string | null;
  Dichiarazione_condizionale__c: boolean;
  StatoNotifica__c: string | null;
  Dichiarazione_ANSC__c: boolean;
  Notifiche_inviate__c: number | null;
  Numero_Notifiche__c: number | null;
  Conformita_specifiche_tecniche__c: string | null;
  Codice_github__c: string | null;
  Data_adesione_ANSC__c: DateString | null;
  Data_chiusura_registri_cartacei__c: DateString | null;
  Data_comunicazione_impossibilit_atto__c: DateString | null;
  Descrizione_errore_specifiche_tecniche__c: string | null;
  Descrizione_github__c: string | null;
  Formaz_primo_atto_stato_civile_digitale__c: DateString | null;
  Formazione_primo_atto__c: string | null;
  Soluzione_tecnologica_utilizzata__c: string | null;
  Caratteristica_servizio__c: string | null;
};

type ParentReferences$Servizio_Richiesta__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Candidatura__r: SObjectDefinition$outfunds__Funding_Request__c;
  Servizio__r: SObjectDefinition$Catalogo_Servizi__c | null;
  Istanza_di_modifica__r: SObjectDefinition$outfunds__Review__c | null;
  Aggiunto_Istanza_di_modifica__r: SObjectDefinition$outfunds__Review__c | null;
};

type ChildRelationships$Servizio_Richiesta__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Servizio_Richiesta__History;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Servizio_Richiesta__c extends SObjectDefinition<'Servizio_Richiesta__c'> {
    Name: 'Servizio_Richiesta__c';
    Fields: Fields$Servizio_Richiesta__c;
    ParentReferences: ParentReferences$Servizio_Richiesta__c;
    ChildRelationships: ChildRelationships$Servizio_Richiesta__c;
  }

type Fields$SharingRecordCollection = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  GroupId: string | null;
  Description: string | null;
  NumberOfRecords: number | null;
  LastAdded: DateString | null;
};

type ParentReferences$SharingRecordCollection = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Group: SObjectDefinition$Group | null;
};

type ChildRelationships$SharingRecordCollection = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  SharingRecordCollectionItems: SObjectDefinition$SharingRecordCollectionItem;
  Shares: SObjectDefinition$SharingRecordCollectionShare;
};

interface SObjectDefinition$SharingRecordCollection extends SObjectDefinition<'SharingRecordCollection'> {
    Name: 'SharingRecordCollection';
    Fields: Fields$SharingRecordCollection;
    ParentReferences: ParentReferences$SharingRecordCollection;
    ChildRelationships: ChildRelationships$SharingRecordCollection;
  }

type Fields$SharingRecordCollectionItem = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CollectionId: string;
  ItemId: string | null;
  Description: string | null;
};

type ParentReferences$SharingRecordCollectionItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Collection: SObjectDefinition$SharingRecordCollection;
  Item: SObjectDefinition$VoiceCall | null;
};

type ChildRelationships$SharingRecordCollectionItem = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$SharingRecordCollectionItem extends SObjectDefinition<'SharingRecordCollectionItem'> {
    Name: 'SharingRecordCollectionItem';
    Fields: Fields$SharingRecordCollectionItem;
    ParentReferences: ParentReferences$SharingRecordCollectionItem;
    ChildRelationships: ChildRelationships$SharingRecordCollectionItem;
  }

type Fields$SharingRecordCollectionMember = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CollectionId: string;
  UserOrGroupId: string | null;
  AccessLevel: string;
};

type ParentReferences$SharingRecordCollectionMember = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Collection: SObjectDefinition$SharingRecordCollection;
  UserOrGroup: SObjectDefinition$Name | null;
};

type ChildRelationships$SharingRecordCollectionMember = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$SharingRecordCollectionMember extends SObjectDefinition<'SharingRecordCollectionMember'> {
    Name: 'SharingRecordCollectionMember';
    Fields: Fields$SharingRecordCollectionMember;
    ParentReferences: ParentReferences$SharingRecordCollectionMember;
    ChildRelationships: ChildRelationships$SharingRecordCollectionMember;
  }

type Fields$SharingRecordCollectionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$SharingRecordCollectionShare = {
  //
  Parent: SObjectDefinition$SharingRecordCollection;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SharingRecordCollectionShare = {
  //
};

interface SObjectDefinition$SharingRecordCollectionShare extends SObjectDefinition<'SharingRecordCollectionShare'> {
    Name: 'SharingRecordCollectionShare';
    Fields: Fields$SharingRecordCollectionShare;
    ParentReferences: ParentReferences$SharingRecordCollectionShare;
    ChildRelationships: ChildRelationships$SharingRecordCollectionShare;
  }

type Fields$Skill = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  Description: string | null;
};

type ParentReferences$Skill = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Skill = {
  //
  LiveChatTranscripts: SObjectDefinition$LiveChatTranscript;
  LiveChatTrancriptSkills: SObjectDefinition$LiveChatTranscriptSkill;
};

interface SObjectDefinition$Skill extends SObjectDefinition<'Skill'> {
    Name: 'Skill';
    Fields: Fields$Skill;
    ParentReferences: ParentReferences$Skill;
    ChildRelationships: ChildRelationships$Skill;
  }

type Fields$SlaProcess = {
  //
  Id: string;
  Name: string;
  NameNorm: string;
  Description: string | null;
  IsActive: boolean;
  StartDateField: string;
  SobjectType: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  BusinessHoursId: string | null;
  LastViewedDate: DateString | null;
};

type ParentReferences$SlaProcess = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BusinessHours: SObjectDefinition$BusinessHours | null;
};

type ChildRelationships$SlaProcess = {
  //
  EntityMilestones: SObjectDefinition$EntityMilestone;
};

interface SObjectDefinition$SlaProcess extends SObjectDefinition<'SlaProcess'> {
    Name: 'SlaProcess';
    Fields: Fields$SlaProcess;
    ParentReferences: ParentReferences$SlaProcess;
    ChildRelationships: ChildRelationships$SlaProcess;
  }

type Fields$Slot_proroghe__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Capienza__c: number | null;
  Completamento_slot__c: number | null;
  Data_fine__c: DateString | null;
  Data_inizio__c: DateString | null;
  Id_slot__c: string | null;
  Misura__c: string | null;
  Pacchetto__c: string | null;
  Quarter_slot__c: string | null;
  Tipologia_Ente_proroghe__c: string | null;
  Proroga_ammissibile_slot__c: number | null;
  QuarterFormat__c: string | null;
  Count__c: number | null;
  Prenotazioni_slot__c: number | null;
};

type ParentReferences$Slot_proroghe__ChangeEvent = {
  //
};

type ChildRelationships$Slot_proroghe__ChangeEvent = {
  //
};

interface SObjectDefinition$Slot_proroghe__ChangeEvent extends SObjectDefinition<'Slot_proroghe__ChangeEvent'> {
    Name: 'Slot_proroghe__ChangeEvent';
    Fields: Fields$Slot_proroghe__ChangeEvent;
    ParentReferences: ParentReferences$Slot_proroghe__ChangeEvent;
    ChildRelationships: ChildRelationships$Slot_proroghe__ChangeEvent;
  }

type Fields$Slot_proroghe__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Slot_proroghe__Share = {
  //
  Parent: SObjectDefinition$Slot_proroghe__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Slot_proroghe__Share = {
  //
};

interface SObjectDefinition$Slot_proroghe__Share extends SObjectDefinition<'Slot_proroghe__Share'> {
    Name: 'Slot_proroghe__Share';
    Fields: Fields$Slot_proroghe__Share;
    ParentReferences: ParentReferences$Slot_proroghe__Share;
    ChildRelationships: ChildRelationships$Slot_proroghe__Share;
  }

type Fields$Slot_proroghe__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Capienza__c: number | null;
  Completamento_slot__c: number | null;
  Data_fine__c: DateString | null;
  Data_inizio__c: DateString | null;
  Id_slot__c: string | null;
  Misura__c: string | null;
  Pacchetto__c: string | null;
  Quarter_slot__c: string | null;
  Tipologia_Ente_proroghe__c: string | null;
  Proroga_ammissibile_slot__c: number | null;
  QuarterFormat__c: string | null;
  Count__c: number | null;
  Prenotazioni_slot__c: number | null;
};

type ParentReferences$Slot_proroghe__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Slot_proroghe__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Shares: SObjectDefinition$Slot_proroghe__Share;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Slot_proroghe__c extends SObjectDefinition<'Slot_proroghe__c'> {
    Name: 'Slot_proroghe__c';
    Fields: Fields$Slot_proroghe__c;
    ParentReferences: ParentReferences$Slot_proroghe__c;
    ChildRelationships: ChildRelationships$Slot_proroghe__c;
  }

type Fields$SocialPersona = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string;
  Provider: string;
  ExternalId: string | null;
  IsDefault: boolean;
  ExternalPictureURL: string | null;
  ProfileUrl: string | null;
  TopicType: string | null;
  IsBlacklisted: boolean;
  RealName: string | null;
  IsFollowingUs: boolean;
  AreWeFollowing: boolean;
  MediaType: string | null;
  Bio: string | null;
  Followers: number | null;
  Following: number | null;
  NumberOfFriends: number | null;
  ListedCount: number | null;
  MediaProvider: string | null;
  ProfileType: string | null;
  R6SourceId: string | null;
  NumberOfTweets: number | null;
  SourceApp: string | null;
  AuthorLabels: string | null;
  IsVerified: boolean;
  InfluencerScore: number | null;
  AvatarUrl: string | null;
};

type ParentReferences$SocialPersona = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name;
};

type ChildRelationships$SocialPersona = {
  //
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$SocialPersonaHistory;
  Posts: SObjectDefinition$SocialPost;
};

interface SObjectDefinition$SocialPersona extends SObjectDefinition<'SocialPersona'> {
    Name: 'SocialPersona';
    Fields: Fields$SocialPersona;
    ParentReferences: ParentReferences$SocialPersona;
    ChildRelationships: ChildRelationships$SocialPersona;
  }

type Fields$SocialPersonaHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SocialPersonaId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SocialPersonaHistory = {
  //
  SocialPersona: SObjectDefinition$SocialPersona;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SocialPersonaHistory = {
  //
};

interface SObjectDefinition$SocialPersonaHistory extends SObjectDefinition<'SocialPersonaHistory'> {
    Name: 'SocialPersonaHistory';
    Fields: Fields$SocialPersonaHistory;
    ParentReferences: ParentReferences$SocialPersonaHistory;
    ChildRelationships: ChildRelationships$SocialPersonaHistory;
  }

type Fields$SocialPost = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  PersonaId: string | null;
  WhoId: string | null;
  ReplyToId: string | null;
  Headline: string | null;
  Content: string | null;
  Posted: DateString;
  PostUrl: string | null;
  Provider: string | null;
  Handle: string | null;
  SpamRating: string | null;
  MediaType: string | null;
  MediaProvider: string | null;
  Sentiment: string | null;
  PostPriority: string | null;
  Status: string | null;
  StatusMessage: string | null;
  Recipient: string | null;
  RecipientType: string | null;
  MessageType: string | null;
  R6PostId: string | null;
  R6TopicId: string | null;
  R6SourceId: string | null;
  TopicType: string | null;
  ExternalPostId: string | null;
  HarvestDate: DateString | null;
  IsOutbound: boolean;
  PostTags: string | null;
  SourceTags: string | null;
  Classification: string | null;
  ThreadSize: number | null;
  CommentCount: number | null;
  Shares: number | null;
  ViewCount: number | null;
  InboundLinkCount: number | null;
  UniqueCommentors: number | null;
  LikesAndVotes: number | null;
  TopicProfileName: string | null;
  KeywordGroupName: string | null;
  EngagementLevel: string | null;
  AssignedTo: string | null;
  OutboundSocialAccountId: string | null;
  ReviewedStatus: string | null;
  AttachmentUrl: string | null;
  AttachmentType: string | null;
  DeletedById: string | null;
  ResponseContextExternalId: string | null;
  LikedBy: string | null;
  AnalyzerScore: number | null;
  Language: string | null;
  ReviewScore: number | null;
  ReviewScale: number | null;
  HiddenById: string | null;
  Notes: string | null;
  TruncatedContent: string | null;
};

type ParentReferences$SocialPost = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Case | null;
  Persona: SObjectDefinition$SocialPersona | null;
  Who: SObjectDefinition$Name | null;
  ReplyTo: SObjectDefinition$SocialPost | null;
  OutboundSocialAccount: SObjectDefinition$ExternalSocialAccount | null;
  DeletedBy: SObjectDefinition$User | null;
  HiddenBy: SObjectDefinition$User | null;
};

type ChildRelationships$SocialPost = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Personas: SObjectDefinition$SocialPersona;
  Replies: SObjectDefinition$SocialPost;
  Feeds: SObjectDefinition$SocialPostFeed;
  Histories: SObjectDefinition$SocialPostHistory;
};

interface SObjectDefinition$SocialPost extends SObjectDefinition<'SocialPost'> {
    Name: 'SocialPost';
    Fields: Fields$SocialPost;
    ParentReferences: ParentReferences$SocialPost;
    ChildRelationships: ChildRelationships$SocialPost;
  }

type Fields$SocialPostChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  PersonaId: string | null;
  WhoId: string | null;
  ReplyToId: string | null;
  Headline: string | null;
  Content: string | null;
  Posted: DateString | null;
  PostUrl: string | null;
  Provider: string | null;
  Handle: string | null;
  SpamRating: string | null;
  MediaType: string | null;
  MediaProvider: string | null;
  Sentiment: string | null;
  PostPriority: string | null;
  Status: string | null;
  StatusMessage: string | null;
  Recipient: string | null;
  RecipientType: string | null;
  MessageType: string | null;
  R6PostId: string | null;
  R6TopicId: string | null;
  R6SourceId: string | null;
  TopicType: string | null;
  ExternalPostId: string | null;
  HarvestDate: DateString | null;
  IsOutbound: boolean;
  PostTags: string | null;
  SourceTags: string | null;
  Classification: string | null;
  ThreadSize: number | null;
  CommentCount: number | null;
  Shares: number | null;
  ViewCount: number | null;
  InboundLinkCount: number | null;
  UniqueCommentors: number | null;
  LikesAndVotes: number | null;
  TopicProfileName: string | null;
  KeywordGroupName: string | null;
  EngagementLevel: string | null;
  AssignedTo: string | null;
  OutboundSocialAccountId: string | null;
  ReviewedStatus: string | null;
  AttachmentUrl: string | null;
  AttachmentType: string | null;
  DeletedById: string | null;
  ResponseContextExternalId: string | null;
  LikedBy: string | null;
  AnalyzerScore: number | null;
  Language: string | null;
  ReviewScore: number | null;
  ReviewScale: number | null;
  HiddenById: string | null;
  Notes: string | null;
};

type ParentReferences$SocialPostChangeEvent = {
  //
};

type ChildRelationships$SocialPostChangeEvent = {
  //
};

interface SObjectDefinition$SocialPostChangeEvent extends SObjectDefinition<'SocialPostChangeEvent'> {
    Name: 'SocialPostChangeEvent';
    Fields: Fields$SocialPostChangeEvent;
    ParentReferences: ParentReferences$SocialPostChangeEvent;
    ChildRelationships: ChildRelationships$SocialPostChangeEvent;
  }

type Fields$SocialPostFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$SocialPostFeed = {
  //
  Parent: SObjectDefinition$SocialPost;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$SocialPostFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$SocialPostFeed extends SObjectDefinition<'SocialPostFeed'> {
    Name: 'SocialPostFeed';
    Fields: Fields$SocialPostFeed;
    ParentReferences: ParentReferences$SocialPostFeed;
    ChildRelationships: ChildRelationships$SocialPostFeed;
  }

type Fields$SocialPostHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SocialPostId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SocialPostHistory = {
  //
  SocialPost: SObjectDefinition$SocialPost;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SocialPostHistory = {
  //
};

interface SObjectDefinition$SocialPostHistory extends SObjectDefinition<'SocialPostHistory'> {
    Name: 'SocialPostHistory';
    Fields: Fields$SocialPostHistory;
    ParentReferences: ParentReferences$SocialPostHistory;
    ChildRelationships: ChildRelationships$SocialPostHistory;
  }

type Fields$SocialPostShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$SocialPostShare = {
  //
  Parent: SObjectDefinition$SocialPost;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SocialPostShare = {
  //
};

interface SObjectDefinition$SocialPostShare extends SObjectDefinition<'SocialPostShare'> {
    Name: 'SocialPostShare';
    Fields: Fields$SocialPostShare;
    ParentReferences: ParentReferences$SocialPostShare;
    ChildRelationships: ChildRelationships$SocialPostShare;
  }

type Fields$Solution = {
  //
  Id: string;
  IsDeleted: boolean;
  SolutionNumber: string;
  SolutionName: string;
  IsPublished: boolean;
  IsPublishedInPublicKb: boolean;
  Status: string;
  IsReviewed: boolean;
  SolutionNote: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TimesUsed: number;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsHtml: boolean;
};

type ParentReferences$Solution = {
  //
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Solution = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CaseSolutions: SObjectDefinition$CaseSolution;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$SolutionFeed;
  Histories: SObjectDefinition$SolutionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$Solution extends SObjectDefinition<'Solution'> {
    Name: 'Solution';
    Fields: Fields$Solution;
    ParentReferences: ParentReferences$Solution;
    ChildRelationships: ChildRelationships$Solution;
  }

type Fields$SolutionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$SolutionFeed = {
  //
  Parent: SObjectDefinition$Solution;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$SolutionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$SolutionFeed extends SObjectDefinition<'SolutionFeed'> {
    Name: 'SolutionFeed';
    Fields: Fields$SolutionFeed;
    ParentReferences: ParentReferences$SolutionFeed;
    ChildRelationships: ChildRelationships$SolutionFeed;
  }

type Fields$SolutionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SolutionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SolutionHistory = {
  //
  Solution: SObjectDefinition$Solution;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SolutionHistory = {
  //
};

interface SObjectDefinition$SolutionHistory extends SObjectDefinition<'SolutionHistory'> {
    Name: 'SolutionHistory';
    Fields: Fields$SolutionHistory;
    ParentReferences: ParentReferences$SolutionHistory;
    ChildRelationships: ChildRelationships$SolutionHistory;
  }

type Fields$SolutionStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsReviewed: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$SolutionStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SolutionStatus = {
  //
};

interface SObjectDefinition$SolutionStatus extends SObjectDefinition<'SolutionStatus'> {
    Name: 'SolutionStatus';
    Fields: Fields$SolutionStatus;
    ParentReferences: ParentReferences$SolutionStatus;
    ChildRelationships: ChildRelationships$SolutionStatus;
  }

type Fields$Stamp = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
};

type ParentReferences$Stamp = {
  //
  Parent: SObjectDefinition$Network;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Stamp = {
  //
  CustomBrands: SObjectDefinition$CustomBrand;
  Localization: SObjectDefinition$StampLocalization;
};

interface SObjectDefinition$Stamp extends SObjectDefinition<'Stamp'> {
    Name: 'Stamp';
    Fields: Fields$Stamp;
    ParentReferences: ParentReferences$Stamp;
    ChildRelationships: ChildRelationships$Stamp;
  }

type Fields$StampAssignment = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  StampId: string;
  SubjectId: string;
};

type ParentReferences$StampAssignment = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Stamp: SObjectDefinition$Stamp;
  Subject: SObjectDefinition$User;
};

type ChildRelationships$StampAssignment = {
  //
};

interface SObjectDefinition$StampAssignment extends SObjectDefinition<'StampAssignment'> {
    Name: 'StampAssignment';
    Fields: Fields$StampAssignment;
    ParentReferences: ParentReferences$StampAssignment;
    ChildRelationships: ChildRelationships$StampAssignment;
  }

type Fields$StampLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$StampLocalization = {
  //
  Parent: SObjectDefinition$Stamp;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StampLocalization = {
  //
};

interface SObjectDefinition$StampLocalization extends SObjectDefinition<'StampLocalization'> {
    Name: 'StampLocalization';
    Fields: Fields$StampLocalization;
    ParentReferences: ParentReferences$StampLocalization;
    ChildRelationships: ChildRelationships$StampLocalization;
  }

type Fields$StaticResource = {
  //
  Id: string;
  NamespacePrefix: string | null;
  Name: string;
  ContentType: string;
  BodyLength: number;
  Body: BlobString | null;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CacheControl: string;
};

type ParentReferences$StaticResource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StaticResource = {
  //
};

interface SObjectDefinition$StaticResource extends SObjectDefinition<'StaticResource'> {
    Name: 'StaticResource';
    Fields: Fields$StaticResource;
    ParentReferences: ParentReferences$StaticResource;
    ChildRelationships: ChildRelationships$StaticResource;
  }

type Fields$StreamingChannel = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsDynamic: boolean;
  Description: string | null;
};

type ParentReferences$StreamingChannel = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StreamingChannel = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$StreamingChannelShare;
};

interface SObjectDefinition$StreamingChannel extends SObjectDefinition<'StreamingChannel'> {
    Name: 'StreamingChannel';
    Fields: Fields$StreamingChannel;
    ParentReferences: ParentReferences$StreamingChannel;
    ChildRelationships: ChildRelationships$StreamingChannel;
  }

type Fields$StreamingChannelShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$StreamingChannelShare = {
  //
  Parent: SObjectDefinition$StreamingChannel;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StreamingChannelShare = {
  //
};

interface SObjectDefinition$StreamingChannelShare extends SObjectDefinition<'StreamingChannelShare'> {
    Name: 'StreamingChannelShare';
    Fields: Fields$StreamingChannelShare;
    ParentReferences: ParentReferences$StreamingChannelShare;
    ChildRelationships: ChildRelationships$StreamingChannelShare;
  }

type Fields$TabDefinition = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  Label: string | null;
  IsCustom: boolean;
  SobjectName: string | null;
  Url: string | null;
  IsAvailableInAloha: boolean;
  IsAvailableInLightning: boolean;
  IsAvailableInMobile: boolean;
  IsAvailableInDesktop: boolean;
  MobileUrl: string | null;
};

type ParentReferences$TabDefinition = {
  //
};

type ChildRelationships$TabDefinition = {
  //
  AppTabs: SObjectDefinition$AppTabMember;
  Colors: SObjectDefinition$ColorDefinition;
  Icons: SObjectDefinition$IconDefinition;
};

interface SObjectDefinition$TabDefinition extends SObjectDefinition<'TabDefinition'> {
    Name: 'TabDefinition';
    Fields: Fields$TabDefinition;
    ParentReferences: ParentReferences$TabDefinition;
    ChildRelationships: ChildRelationships$TabDefinition;
  }

type Fields$Task = {
  //
  Id: string;
  RecordTypeId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  ActivityDate: DateString | null;
  Status: string;
  Priority: string;
  IsHighPriority: boolean;
  OwnerId: string;
  Description: string | null;
  Type: string | null;
  IsDeleted: boolean;
  AccountId: string | null;
  IsClosed: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsArchived: boolean;
  IsVisibleInSelfService: boolean;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateOnly: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  RecurrenceRegeneratedType: string | null;
  TaskSubtype: string | null;
  CompletedDateTime: DateString | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$Task = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Requirement__r: SObjectDefinition$outfunds__Requirement__c | null;
  Piano_di_migrazione__r: SObjectDefinition$Case | null;
  Checklist__r: SObjectDefinition$Checklist__c | null;
  EnteLookup__r: SObjectDefinition$Account | null;
  Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Tag_colleghi__r: SObjectDefinition$User | null;
  Counter__r: SObjectDefinition$Counter__c | null;
  Servizio__r: SObjectDefinition$Servizio_Richiesta__c | null;
  Registro_eventi_ente__r: SObjectDefinition$Registro_eventi_ente__c | null;
};

type ChildRelationships$Task = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  RecurringTasks: SObjectDefinition$Task;
  Feeds: SObjectDefinition$TaskFeed;
  TaskRelations: SObjectDefinition$TaskRelation;
  TaskWhoRelations: SObjectDefinition$TaskWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  VoiceCallActivities: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Task extends SObjectDefinition<'Task'> {
    Name: 'Task';
    Fields: Fields$Task;
    ParentReferences: ParentReferences$Task;
    ChildRelationships: ChildRelationships$Task;
  }

type Fields$TaskChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RecordTypeId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  ActivityDate: DateString | null;
  Status: string | null;
  Priority: string | null;
  OwnerId: string | null;
  Description: string | null;
  Type: string | null;
  AccountId: string | null;
  IsClosed: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  IsVisibleInSelfService: boolean;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateOnly: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  RecurrenceRegeneratedType: string | null;
  CompletedDateTime: DateString | null;
  Approvazione_Automatica__c: boolean;
  Data_richiesta__c: DateString | null;
  Data_scadenza_iniziale__c: DateString | null;
  Giorni_richiesti__c: number | null;
  Motivazione_Rifiuto__c: string | null;
  Requirement__c: string | null;
  Avviso__c: string | null;
  Ente__c: string | null;
  Fase_Cronoprogramma__c: string | null;
  Commenti_aUdM__c: string | null;
  Commenti_asseveratore__c: string | null;
  Comunicazione__c: string | null;
  Data_fine_Asseverazione__c: DateString | null;
  Esito__c: string | null;
  Data_scadenza_Richiesta__c: DateString | null;
  Convalidato_per_silenzio_assenso__c: boolean;
  Esito_convalida_PDM__c: string | null;
  Piano_di_migrazione__c: string | null;
  Data_ultima_assegnazione__c: DateString | null;
  Checklist__c: string | null;
  Data_inizio_Asseverazione__c: DateString | null;
  Stato_lavorazione__c: string | null;
  RequirementIsFreeze__c: boolean;
  EnteLookup__c: string | null;
  GiorniRimanentiCronoprogramma__c: number | null;
  Giorni_concessi__c: number | null;
  Motivazione_variazione_giorni__c: string | null;
  Data_esito__c: DateString | null;
  Invio_PEC__c: boolean;
  Visionata__c: boolean;
  In_Aggiornamento__c: boolean;
  Funding_Request__c: string | null;
  CL_controllo_formale__c: string | null;
  CUP__c: string | null;
  Decreto_di_finanziamento__c: string | null;
  Importo__c: number | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  Esito_controllo_1_livello__c: string | null;
  Esito_controllo_2_livello__c: string | null;
  Note_controllo_1_lv__c: string | null;
  Note_controllo_2_lv__c: string | null;
  CodaLV1_Formale__c: string | null;
  LastModifiedOnChecklist__c: string | null;
  Misura_progetto__c: string | null;
  UltimaVersioneLG_Manuale_Asseveratore__c: string | null;
  Canale__c: string | null;
  Chi_registra_la_riunione__c: string | null;
  Conclusione_riunione__c: string | null;
  Data_riunione__c: DateString | null;
  Note_riunione__c: string | null;
  Referente_ente_fornitore__c: string | null;
  Tag_colleghi__c: string | null;
  Titolo_riunione__c: string | null;
  Uscita_Entrata__c: string | null;
  Approvata_da_dettaglio__c: boolean;
  Counter__c: string | null;
  OwnerEmail__c: string | null;
  Servizio__c: string | null;
  Ulteriori_Note__c: string | null;
  Firma_non_verificata__c: boolean;
  Ricevi_Reminder__c: string | null;
  Bloccato__c: boolean;
  Registro_eventi_ente__c: string | null;
};

type ParentReferences$TaskChangeEvent = {
  //
};

type ChildRelationships$TaskChangeEvent = {
  //
};

interface SObjectDefinition$TaskChangeEvent extends SObjectDefinition<'TaskChangeEvent'> {
    Name: 'TaskChangeEvent';
    Fields: Fields$TaskChangeEvent;
    ParentReferences: ParentReferences$TaskChangeEvent;
    ChildRelationships: ChildRelationships$TaskChangeEvent;
  }

type Fields$TaskFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$TaskFeed = {
  //
  Parent: SObjectDefinition$Task;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$TaskFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$TaskFeed extends SObjectDefinition<'TaskFeed'> {
    Name: 'TaskFeed';
    Fields: Fields$TaskFeed;
    ParentReferences: ParentReferences$TaskFeed;
    ChildRelationships: ChildRelationships$TaskFeed;
  }

type Fields$TaskPriority = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsHighPriority: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$TaskPriority = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskPriority = {
  //
};

interface SObjectDefinition$TaskPriority extends SObjectDefinition<'TaskPriority'> {
    Name: 'TaskPriority';
    Fields: Fields$TaskPriority;
    ParentReferences: ParentReferences$TaskPriority;
    ChildRelationships: ChildRelationships$TaskPriority;
  }

type Fields$TaskRelation = {
  //
  Id: string;
  RelationId: string;
  TaskId: string;
  IsWhat: boolean;
  AccountId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$TaskRelation = {
  //
  Relation: SObjectDefinition$Name;
  Task: SObjectDefinition$Task;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskRelation = {
  //
};

interface SObjectDefinition$TaskRelation extends SObjectDefinition<'TaskRelation'> {
    Name: 'TaskRelation';
    Fields: Fields$TaskRelation;
    ParentReferences: ParentReferences$TaskRelation;
    ChildRelationships: ChildRelationships$TaskRelation;
  }

type Fields$TaskRelationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RelationId: string | null;
  TaskId: string | null;
  IsWhat: boolean;
  AccountId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$TaskRelationChangeEvent = {
  //
};

type ChildRelationships$TaskRelationChangeEvent = {
  //
};

interface SObjectDefinition$TaskRelationChangeEvent extends SObjectDefinition<'TaskRelationChangeEvent'> {
    Name: 'TaskRelationChangeEvent';
    Fields: Fields$TaskRelationChangeEvent;
    ParentReferences: ParentReferences$TaskRelationChangeEvent;
    ChildRelationships: ChildRelationships$TaskRelationChangeEvent;
  }

type Fields$TaskStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsClosed: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$TaskStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskStatus = {
  //
};

interface SObjectDefinition$TaskStatus extends SObjectDefinition<'TaskStatus'> {
    Name: 'TaskStatus';
    Fields: Fields$TaskStatus;
    ParentReferences: ParentReferences$TaskStatus;
    ChildRelationships: ChildRelationships$TaskStatus;
  }

type Fields$TaskWhoRelation = {
  //
  Id: string;
  RelationId: string | null;
  TaskId: string | null;
  AccountId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$TaskWhoRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Task: SObjectDefinition$Task | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskWhoRelation = {
  //
};

interface SObjectDefinition$TaskWhoRelation extends SObjectDefinition<'TaskWhoRelation'> {
    Name: 'TaskWhoRelation';
    Fields: Fields$TaskWhoRelation;
    ParentReferences: ParentReferences$TaskWhoRelation;
    ChildRelationships: ChildRelationships$TaskWhoRelation;
  }

type Fields$Testata_Errore__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$Testata_Errore__ChangeEvent = {
  //
};

type ChildRelationships$Testata_Errore__ChangeEvent = {
  //
};

interface SObjectDefinition$Testata_Errore__ChangeEvent extends SObjectDefinition<'Testata_Errore__ChangeEvent'> {
    Name: 'Testata_Errore__ChangeEvent';
    Fields: Fields$Testata_Errore__ChangeEvent;
    ParentReferences: ParentReferences$Testata_Errore__ChangeEvent;
    ChildRelationships: ChildRelationships$Testata_Errore__ChangeEvent;
  }

type Fields$Testata_Errore__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Testata_Errore__History = {
  //
  Parent: SObjectDefinition$Testata_Errore__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Testata_Errore__History = {
  //
};

interface SObjectDefinition$Testata_Errore__History extends SObjectDefinition<'Testata_Errore__History'> {
    Name: 'Testata_Errore__History';
    Fields: Fields$Testata_Errore__History;
    ParentReferences: ParentReferences$Testata_Errore__History;
    ChildRelationships: ChildRelationships$Testata_Errore__History;
  }

type Fields$Testata_Errore__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$Testata_Errore__Share = {
  //
  Parent: SObjectDefinition$Testata_Errore__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Testata_Errore__Share = {
  //
};

interface SObjectDefinition$Testata_Errore__Share extends SObjectDefinition<'Testata_Errore__Share'> {
    Name: 'Testata_Errore__Share';
    Fields: Fields$Testata_Errore__Share;
    ParentReferences: ParentReferences$Testata_Errore__Share;
    ChildRelationships: ChildRelationships$Testata_Errore__Share;
  }

type Fields$Testata_Errore__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
};

type ParentReferences$Testata_Errore__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Testata_Errore__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  Histories: SObjectDefinition$Testata_Errore__History;
  Shares: SObjectDefinition$Testata_Errore__Share;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$Testata_Errore__c extends SObjectDefinition<'Testata_Errore__c'> {
    Name: 'Testata_Errore__c';
    Fields: Fields$Testata_Errore__c;
    ParentReferences: ParentReferences$Testata_Errore__c;
    ChildRelationships: ChildRelationships$Testata_Errore__c;
  }

type Fields$ThirdPartyAccountLink = {
  //
  Id: string;
  ThirdPartyAccountLinkKey: string | null;
  UserId: string | null;
  Handle: string | null;
  RemoteIdentifier: string | null;
  Provider: string | null;
  SsoProviderName: string | null;
  IsNotSsoUsable: boolean;
};

type ParentReferences$ThirdPartyAccountLink = {
  //
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ThirdPartyAccountLink = {
  //
};

interface SObjectDefinition$ThirdPartyAccountLink extends SObjectDefinition<'ThirdPartyAccountLink'> {
    Name: 'ThirdPartyAccountLink';
    Fields: Fields$ThirdPartyAccountLink;
    ParentReferences: ParentReferences$ThirdPartyAccountLink;
    ChildRelationships: ChildRelationships$ThirdPartyAccountLink;
  }

type Fields$TodayGoal = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Value: number | null;
  UserId: string;
};

type ParentReferences$TodayGoal = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
};

type ChildRelationships$TodayGoal = {
  //
  Shares: SObjectDefinition$TodayGoalShare;
};

interface SObjectDefinition$TodayGoal extends SObjectDefinition<'TodayGoal'> {
    Name: 'TodayGoal';
    Fields: Fields$TodayGoal;
    ParentReferences: ParentReferences$TodayGoal;
    ChildRelationships: ChildRelationships$TodayGoal;
  }

type Fields$TodayGoalShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$TodayGoalShare = {
  //
  Parent: SObjectDefinition$TodayGoal;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TodayGoalShare = {
  //
};

interface SObjectDefinition$TodayGoalShare extends SObjectDefinition<'TodayGoalShare'> {
    Name: 'TodayGoalShare';
    Fields: Fields$TodayGoalShare;
    ParentReferences: ParentReferences$TodayGoalShare;
    ChildRelationships: ChildRelationships$TodayGoalShare;
  }

type Fields$Topic = {
  //
  Id: string;
  NetworkId: string | null;
  Name: string;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  TalkingAbout: number;
  ManagedTopicType: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$Topic = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Topic = {
  //
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  CustomBrands: SObjectDefinition$CustomBrand;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ListEmailRecipientSources: SObjectDefinition$ListEmailRecipientSource;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$TopicFeed;
  Localization: SObjectDefinition$TopicLocalization;
};

interface SObjectDefinition$Topic extends SObjectDefinition<'Topic'> {
    Name: 'Topic';
    Fields: Fields$Topic;
    ParentReferences: ParentReferences$Topic;
    ChildRelationships: ChildRelationships$Topic;
  }

type Fields$TopicAssignment = {
  //
  Id: string;
  NetworkId: string | null;
  TopicId: string;
  EntityId: string;
  EntityKeyPrefix: string;
  EntityType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
};

type ParentReferences$TopicAssignment = {
  //
  Topic: SObjectDefinition$Topic;
  Entity: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$TopicAssignment = {
  //
};

interface SObjectDefinition$TopicAssignment extends SObjectDefinition<'TopicAssignment'> {
    Name: 'TopicAssignment';
    Fields: Fields$TopicAssignment;
    ParentReferences: ParentReferences$TopicAssignment;
    ChildRelationships: ChildRelationships$TopicAssignment;
  }

type Fields$TopicFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$TopicFeed = {
  //
  Parent: SObjectDefinition$Topic;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$TopicFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$TopicFeed extends SObjectDefinition<'TopicFeed'> {
    Name: 'TopicFeed';
    Fields: Fields$TopicFeed;
    ParentReferences: ParentReferences$TopicFeed;
    ChildRelationships: ChildRelationships$TopicFeed;
  }

type Fields$TopicLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$TopicLocalization = {
  //
  Parent: SObjectDefinition$Topic;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TopicLocalization = {
  //
};

interface SObjectDefinition$TopicLocalization extends SObjectDefinition<'TopicLocalization'> {
    Name: 'TopicLocalization';
    Fields: Fields$TopicLocalization;
    ParentReferences: ParentReferences$TopicLocalization;
    ChildRelationships: ChildRelationships$TopicLocalization;
  }

type Fields$TrainingCourseParticipant = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ContactId: string | null;
  InstitutionName: string | null;
  Result: string | null;
  CourseOfferingId: string | null;
  VerificationStatus: string | null;
  VerificationDateTime: DateString | null;
};

type ParentReferences$TrainingCourseParticipant = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact: SObjectDefinition$Contact | null;
  CourseOffering: SObjectDefinition$CourseOffering | null;
};

type ChildRelationships$TrainingCourseParticipant = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$TrainingCourseParticipantFeed;
  Histories: SObjectDefinition$TrainingCourseParticipantHistory;
  Shares: SObjectDefinition$TrainingCourseParticipantShare;
};

interface SObjectDefinition$TrainingCourseParticipant extends SObjectDefinition<'TrainingCourseParticipant'> {
    Name: 'TrainingCourseParticipant';
    Fields: Fields$TrainingCourseParticipant;
    ParentReferences: ParentReferences$TrainingCourseParticipant;
    ChildRelationships: ChildRelationships$TrainingCourseParticipant;
  }

type Fields$TrainingCourseParticipantFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$TrainingCourseParticipantFeed = {
  //
  Parent: SObjectDefinition$TrainingCourseParticipant;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$TrainingCourseParticipantFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$TrainingCourseParticipantFeed extends SObjectDefinition<'TrainingCourseParticipantFeed'> {
    Name: 'TrainingCourseParticipantFeed';
    Fields: Fields$TrainingCourseParticipantFeed;
    ParentReferences: ParentReferences$TrainingCourseParticipantFeed;
    ChildRelationships: ChildRelationships$TrainingCourseParticipantFeed;
  }

type Fields$TrainingCourseParticipantHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  TrainingCourseParticipantId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$TrainingCourseParticipantHistory = {
  //
  TrainingCourseParticipant: SObjectDefinition$TrainingCourseParticipant;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$TrainingCourseParticipantHistory = {
  //
};

interface SObjectDefinition$TrainingCourseParticipantHistory extends SObjectDefinition<'TrainingCourseParticipantHistory'> {
    Name: 'TrainingCourseParticipantHistory';
    Fields: Fields$TrainingCourseParticipantHistory;
    ParentReferences: ParentReferences$TrainingCourseParticipantHistory;
    ChildRelationships: ChildRelationships$TrainingCourseParticipantHistory;
  }

type Fields$TrainingCourseParticipantShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$TrainingCourseParticipantShare = {
  //
  Parent: SObjectDefinition$TrainingCourseParticipant;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TrainingCourseParticipantShare = {
  //
};

interface SObjectDefinition$TrainingCourseParticipantShare extends SObjectDefinition<'TrainingCourseParticipantShare'> {
    Name: 'TrainingCourseParticipantShare';
    Fields: Fields$TrainingCourseParticipantShare;
    ParentReferences: ParentReferences$TrainingCourseParticipantShare;
    ChildRelationships: ChildRelationships$TrainingCourseParticipantShare;
  }

type Fields$TransactionJournal = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  JournalTypeId: string | null;
  ActivityDate: DateString;
  ExternalTransactionNumber: string | null;
  UsageType: string | null;
  BookingDate: DateString | null;
  TransactionAmount: number | null;
  PaymentMethod: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$TransactionJournal = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  JournalType: SObjectDefinition$JournalType | null;
};

type ChildRelationships$TransactionJournal = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$TransactionJournal extends SObjectDefinition<'TransactionJournal'> {
    Name: 'TransactionJournal';
    Fields: Fields$TransactionJournal;
    ParentReferences: ParentReferences$TransactionJournal;
    ChildRelationships: ChildRelationships$TransactionJournal;
  }

type Fields$TransactionJournalChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CreatedById: string | null;
  CreatedDate: DateString | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  JournalTypeId: string | null;
  ActivityDate: DateString | null;
  ExternalTransactionNumber: string | null;
  UsageType: string | null;
  BookingDate: DateString | null;
  TransactionAmount: number | null;
  PaymentMethod: string | null;
};

type ParentReferences$TransactionJournalChangeEvent = {
  //
};

type ChildRelationships$TransactionJournalChangeEvent = {
  //
};

interface SObjectDefinition$TransactionJournalChangeEvent extends SObjectDefinition<'TransactionJournalChangeEvent'> {
    Name: 'TransactionJournalChangeEvent';
    Fields: Fields$TransactionJournalChangeEvent;
    ParentReferences: ParentReferences$TransactionJournalChangeEvent;
    ChildRelationships: ChildRelationships$TransactionJournalChangeEvent;
  }

type Fields$Translation = {
  //
  Id: string;
  Language: string;
  IsActive: boolean;
  CanManage: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Translation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Translation = {
  //
};

interface SObjectDefinition$Translation extends SObjectDefinition<'Translation'> {
    Name: 'Translation';
    Fields: Fields$Translation;
    ParentReferences: ParentReferences$Translation;
    ChildRelationships: ChildRelationships$Translation;
  }

type Fields$TrnCourse = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  Status: string | null;
  TotalCredits: number | null;
  TotalHours: number | null;
};

type ParentReferences$TrnCourse = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TrnCourse = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  CourseOfferingTrnCourse: SObjectDefinition$CourseOffering;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$TrnCourseFeed;
  Histories: SObjectDefinition$TrnCourseHistory;
  Shares: SObjectDefinition$TrnCourseShare;
};

interface SObjectDefinition$TrnCourse extends SObjectDefinition<'TrnCourse'> {
    Name: 'TrnCourse';
    Fields: Fields$TrnCourse;
    ParentReferences: ParentReferences$TrnCourse;
    ChildRelationships: ChildRelationships$TrnCourse;
  }

type Fields$TrnCourseFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$TrnCourseFeed = {
  //
  Parent: SObjectDefinition$TrnCourse;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$TrnCourseFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$TrnCourseFeed extends SObjectDefinition<'TrnCourseFeed'> {
    Name: 'TrnCourseFeed';
    Fields: Fields$TrnCourseFeed;
    ParentReferences: ParentReferences$TrnCourseFeed;
    ChildRelationships: ChildRelationships$TrnCourseFeed;
  }

type Fields$TrnCourseHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  TrnCourseId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$TrnCourseHistory = {
  //
  TrnCourse: SObjectDefinition$TrnCourse;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$TrnCourseHistory = {
  //
};

interface SObjectDefinition$TrnCourseHistory extends SObjectDefinition<'TrnCourseHistory'> {
    Name: 'TrnCourseHistory';
    Fields: Fields$TrnCourseHistory;
    ParentReferences: ParentReferences$TrnCourseHistory;
    ChildRelationships: ChildRelationships$TrnCourseHistory;
  }

type Fields$TrnCourseShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$TrnCourseShare = {
  //
  Parent: SObjectDefinition$TrnCourse;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TrnCourseShare = {
  //
};

interface SObjectDefinition$TrnCourseShare extends SObjectDefinition<'TrnCourseShare'> {
    Name: 'TrnCourseShare';
    Fields: Fields$TrnCourseShare;
    ParentReferences: ParentReferences$TrnCourseShare;
    ChildRelationships: ChildRelationships$TrnCourseShare;
  }

type Fields$UiFormulaCriterion = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RuleId: string;
  LeftHandSide: string;
  OperatorId: string | null;
  RightHandSide: string | null;
  ParentKeyPrefix: string | null;
};

type ParentReferences$UiFormulaCriterion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Rule: SObjectDefinition$UiFormulaRule;
};

type ChildRelationships$UiFormulaCriterion = {
  //
};

interface SObjectDefinition$UiFormulaCriterion extends SObjectDefinition<'UiFormulaCriterion'> {
    Name: 'UiFormulaCriterion';
    Fields: Fields$UiFormulaCriterion;
    ParentReferences: ParentReferences$UiFormulaCriterion;
    ChildRelationships: ChildRelationships$UiFormulaCriterion;
  }

type Fields$UiFormulaRule = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AssociatedElementId: string | null;
  BooleanFilter: string | null;
  Formula: string | null;
  ParentKeyPrefix: string | null;
};

type ParentReferences$UiFormulaRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AssociatedElement: SObjectDefinition$PromptVersion | null;
};

type ChildRelationships$UiFormulaRule = {
  //
};

interface SObjectDefinition$UiFormulaRule extends SObjectDefinition<'UiFormulaRule'> {
    Name: 'UiFormulaRule';
    Fields: Fields$UiFormulaRule;
    ParentReferences: ParentReferences$UiFormulaRule;
    ChildRelationships: ChildRelationships$UiFormulaRule;
  }

type Fields$UndecidedEventRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$UndecidedEventRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UndecidedEventRelation = {
  //
};

interface SObjectDefinition$UndecidedEventRelation extends SObjectDefinition<'UndecidedEventRelation'> {
    Name: 'UndecidedEventRelation';
    Fields: Fields$UndecidedEventRelation;
    ParentReferences: ParentReferences$UndecidedEventRelation;
    ChildRelationships: ChildRelationships$UndecidedEventRelation;
  }

type Fields$UnitOfMeasure = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  UnitCode: string;
  Type: string;
};

type ParentReferences$UnitOfMeasure = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UnitOfMeasure = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$UnitOfMeasureShare;
};

interface SObjectDefinition$UnitOfMeasure extends SObjectDefinition<'UnitOfMeasure'> {
    Name: 'UnitOfMeasure';
    Fields: Fields$UnitOfMeasure;
    ParentReferences: ParentReferences$UnitOfMeasure;
    ChildRelationships: ChildRelationships$UnitOfMeasure;
  }

type Fields$UnitOfMeasureShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UnitOfMeasureShare = {
  //
  Parent: SObjectDefinition$UnitOfMeasure;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UnitOfMeasureShare = {
  //
};

interface SObjectDefinition$UnitOfMeasureShare extends SObjectDefinition<'UnitOfMeasureShare'> {
    Name: 'UnitOfMeasureShare';
    Fields: Fields$UnitOfMeasureShare;
    ParentReferences: ParentReferences$UnitOfMeasureShare;
    ChildRelationships: ChildRelationships$UnitOfMeasureShare;
  }

type Fields$User = {
  //
  Id: string;
  Username: string;
  LastName: string;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  CompanyName: string | null;
  Division: string | null;
  Department: string | null;
  Title: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Email: string;
  EmailPreferencesAutoBcc: boolean;
  EmailPreferencesAutoBccStayInTouch: boolean;
  EmailPreferencesStayInTouchReminder: boolean;
  SenderEmail: string | null;
  SenderName: string | null;
  Signature: string | null;
  StayInTouchSubject: string | null;
  StayInTouchSignature: string | null;
  StayInTouchNote: string | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  Alias: string;
  CommunityNickname: string;
  BadgeText: string | null;
  IsActive: boolean;
  TimeZoneSidKey: string;
  UserRoleId: string | null;
  LocaleSidKey: string;
  ReceivesInfoEmails: boolean;
  ReceivesAdminInfoEmails: boolean;
  EmailEncodingKey: string;
  UserType: string | null;
  StartDay: string | null;
  EndDay: string | null;
  LanguageLocaleKey: string;
  EmployeeNumber: string | null;
  DelegatedApproverId: string | null;
  ManagerId: string | null;
  LastLoginDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PasswordExpirationDate: DateString | null;
  SuAccessExpirationDate: DateString | null;
  OfflineTrialExpirationDate: DateString | null;
  OfflinePdaTrialExpirationDate: DateString | null;
  UserPermissionsMarketingUser: boolean;
  UserPermissionsOfflineUser: boolean;
  UserPermissionsAvantgoUser: boolean;
  UserPermissionsCallCenterAutoLogin: boolean;
  UserPermissionsSFContentUser: boolean;
  UserPermissionsKnowledgeUser: boolean;
  UserPermissionsInteractionUser: boolean;
  UserPermissionsSupportUser: boolean;
  UserPermissionsLiveAgentUser: boolean;
  ForecastEnabled: boolean;
  UserPreferencesDisableAllFeedsEmail: boolean;
  UserPreferencesDisableFollowersEmail: boolean;
  UserPreferencesDisableProfilePostEmail: boolean;
  UserPreferencesDisableChangeCommentEmail: boolean;
  UserPreferencesDisableLaterCommentEmail: boolean;
  UserPreferencesDisProfPostCommentEmail: boolean;
  UserPreferencesContentNoEmail: boolean;
  UserPreferencesContentEmailAsAndWhen: boolean;
  UserPreferencesHideCSNGetChatterMobileTask: boolean;
  UserPreferencesDisableMentionsPostEmail: boolean;
  UserPreferencesDisMentionsCommentEmail: boolean;
  UserPreferencesHideCSNDesktopTask: boolean;
  UserPreferencesHideChatterOnboardingSplash: boolean;
  UserPreferencesHideSecondChatterOnboardingSplash: boolean;
  UserPreferencesDisCommentAfterLikeEmail: boolean;
  UserPreferencesDisableLikeEmail: boolean;
  UserPreferencesSortFeedByComment: boolean;
  UserPreferencesDisableMessageEmail: boolean;
  UserPreferencesDisableBookmarkEmail: boolean;
  UserPreferencesDisableSharePostEmail: boolean;
  UserPreferencesEnableAutoSubForFeeds: boolean;
  UserPreferencesDisableFileShareNotificationsForApi: boolean;
  UserPreferencesShowTitleToExternalUsers: boolean;
  UserPreferencesShowManagerToExternalUsers: boolean;
  UserPreferencesShowEmailToExternalUsers: boolean;
  UserPreferencesShowWorkPhoneToExternalUsers: boolean;
  UserPreferencesShowMobilePhoneToExternalUsers: boolean;
  UserPreferencesShowFaxToExternalUsers: boolean;
  UserPreferencesShowStreetAddressToExternalUsers: boolean;
  UserPreferencesShowCityToExternalUsers: boolean;
  UserPreferencesShowStateToExternalUsers: boolean;
  UserPreferencesShowPostalCodeToExternalUsers: boolean;
  UserPreferencesShowCountryToExternalUsers: boolean;
  UserPreferencesShowProfilePicToGuestUsers: boolean;
  UserPreferencesShowTitleToGuestUsers: boolean;
  UserPreferencesShowCityToGuestUsers: boolean;
  UserPreferencesShowStateToGuestUsers: boolean;
  UserPreferencesShowPostalCodeToGuestUsers: boolean;
  UserPreferencesShowCountryToGuestUsers: boolean;
  UserPreferencesHideInvoicesRedirectConfirmation: boolean;
  UserPreferencesHideStatementsRedirectConfirmation: boolean;
  UserPreferencesHideS1BrowserUI: boolean;
  UserPreferencesDisableEndorsementEmail: boolean;
  UserPreferencesPathAssistantCollapsed: boolean;
  UserPreferencesCacheDiagnostics: boolean;
  UserPreferencesShowEmailToGuestUsers: boolean;
  UserPreferencesShowManagerToGuestUsers: boolean;
  UserPreferencesShowWorkPhoneToGuestUsers: boolean;
  UserPreferencesShowMobilePhoneToGuestUsers: boolean;
  UserPreferencesShowFaxToGuestUsers: boolean;
  UserPreferencesShowStreetAddressToGuestUsers: boolean;
  UserPreferencesLightningExperiencePreferred: boolean;
  UserPreferencesHideEndUserOnboardingAssistantModal: boolean;
  UserPreferencesHideLightningMigrationModal: boolean;
  UserPreferencesHideSfxWelcomeMat: boolean;
  UserPreferencesHideBiggerPhotoCallout: boolean;
  UserPreferencesGlobalNavBarWTShown: boolean;
  UserPreferencesGlobalNavGridMenuWTShown: boolean;
  UserPreferencesCreateLEXAppsWTShown: boolean;
  UserPreferencesFavoritesWTShown: boolean;
  UserPreferencesRecordHomeSectionCollapseWTShown: boolean;
  UserPreferencesRecordHomeReservedWTShown: boolean;
  UserPreferencesFavoritesShowTopFavorites: boolean;
  UserPreferencesExcludeMailAppAttachments: boolean;
  UserPreferencesSuppressTaskSFXReminders: boolean;
  UserPreferencesSuppressEventSFXReminders: boolean;
  UserPreferencesPreviewCustomTheme: boolean;
  UserPreferencesHasCelebrationBadge: boolean;
  UserPreferencesUserDebugModePref: boolean;
  UserPreferencesSRHOverrideActivities: boolean;
  UserPreferencesNewLightningReportRunPageEnabled: boolean;
  UserPreferencesNativeEmailClient: boolean;
  UserPreferencesHideBrowseProductRedirectConfirmation: boolean;
  ContactId: string | null;
  AccountId: string | null;
  CallCenterId: string | null;
  Extension: string | null;
  PortalRole: string | null;
  IsPortalEnabled: boolean;
  FederationIdentifier: string | null;
  AboutMe: string | null;
  FullPhotoUrl: string | null;
  SmallPhotoUrl: string | null;
  IsExtIndicatorVisible: boolean;
  OutOfOfficeMessage: string | null;
  MediumPhotoUrl: string | null;
  DigestFrequency: string;
  DefaultGroupNotificationFrequency: string;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  BannerPhotoUrl: string | null;
  SmallBannerPhotoUrl: string | null;
  MediumBannerPhotoUrl: string | null;
  IsProfilePhotoActive: boolean;
  IndividualId: string | null;
  Last_Login_Provider__c: string | null;
  Citta_di_nascita__c: string | null;
  Data_DPCM__c: DateString | null;
  Data_di_nascita__c: DateString | null;
  Provincia_di_nascita__c: string | null;
};

type ParentReferences$User = {
  //
  UserRole: SObjectDefinition$UserRole | null;
  Manager: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  Individual: SObjectDefinition$Individual | null;
};

type ChildRelationships$User = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  GroupMemberships: SObjectDefinition$CollaborationGroupMember;
  GroupMembershipRequests: SObjectDefinition$CollaborationGroupMemberRequest;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractsSigned: SObjectDefinition$Contract;
  ConversationEntries: SObjectDefinition$ConversationEntry;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  ParentId: SObjectDefinition$DelegatedAccount;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  FeedSubscriptions: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  InstalledMobileApps: SObjectDefinition$InstalledMobileApp;
  LiveChatTranscripts: SObjectDefinition$LiveAgentSession;
  LiveChatTranscriptEvents: SObjectDefinition$LiveChatTranscriptEvent;
  NetworkMemberUsers: SObjectDefinition$NetworkMember;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
  OwnedContentDocuments: SObjectDefinition$OwnedContentDocument;
  UserProfileSkillUserEndorsements: SObjectDefinition$ProfileSkillEndorsement;
  UserProfileSkillChildren: SObjectDefinition$ProfileSkillUser;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  ServiceResources: SObjectDefinition$ServiceResource;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
  DelegatedUsers: SObjectDefinition$User;
  ManagedUsers: SObjectDefinition$User;
  PersonRecord: SObjectDefinition$UserEmailPreferredPerson;
  Feeds: SObjectDefinition$UserFeed;
  UserLogins: SObjectDefinition$UserLogin;
  UserPreferences: SObjectDefinition$UserPreference;
  Shares: SObjectDefinition$UserShare;
  VoiceCalls: SObjectDefinition$VoiceCall;
  Badges: SObjectDefinition$WorkBadge;
  GivenThanks: SObjectDefinition$WorkThanks;
};

interface SObjectDefinition$User extends SObjectDefinition<'User'> {
    Name: 'User';
    Fields: Fields$User;
    ParentReferences: ParentReferences$User;
    ChildRelationships: ChildRelationships$User;
  }

type Fields$UserAppInfo = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  FormFactor: string;
  AppDefinitionId: string | null;
};

type ParentReferences$UserAppInfo = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  AppDefinition: SObjectDefinition$AppDefinition | null;
};

type ChildRelationships$UserAppInfo = {
  //
};

interface SObjectDefinition$UserAppInfo extends SObjectDefinition<'UserAppInfo'> {
    Name: 'UserAppInfo';
    Fields: Fields$UserAppInfo;
    ParentReferences: ParentReferences$UserAppInfo;
    ChildRelationships: ChildRelationships$UserAppInfo;
  }

type Fields$UserAppMenuCustomization = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApplicationId: string | null;
  SortOrder: number | null;
};

type ParentReferences$UserAppMenuCustomization = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Application: SObjectDefinition$Name | null;
};

type ChildRelationships$UserAppMenuCustomization = {
  //
  Shares: SObjectDefinition$UserAppMenuCustomizationShare;
};

interface SObjectDefinition$UserAppMenuCustomization extends SObjectDefinition<'UserAppMenuCustomization'> {
    Name: 'UserAppMenuCustomization';
    Fields: Fields$UserAppMenuCustomization;
    ParentReferences: ParentReferences$UserAppMenuCustomization;
    ChildRelationships: ChildRelationships$UserAppMenuCustomization;
  }

type Fields$UserAppMenuCustomizationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UserAppMenuCustomizationShare = {
  //
  Parent: SObjectDefinition$UserAppMenuCustomization;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserAppMenuCustomizationShare = {
  //
};

interface SObjectDefinition$UserAppMenuCustomizationShare extends SObjectDefinition<'UserAppMenuCustomizationShare'> {
    Name: 'UserAppMenuCustomizationShare';
    Fields: Fields$UserAppMenuCustomizationShare;
    ParentReferences: ParentReferences$UserAppMenuCustomizationShare;
    ChildRelationships: ChildRelationships$UserAppMenuCustomizationShare;
  }

type Fields$UserAppMenuItem = {
  //
  Id: string;
  AppMenuItemId: string | null;
  ApplicationId: string | null;
  Label: string | null;
  Description: string | null;
  Name: string | null;
  UserSortOrder: number | null;
  SortOrder: number | null;
  Type: string | null;
  LogoUrl: string | null;
  IconUrl: string | null;
  InfoUrl: string | null;
  StartUrl: string | null;
  MobileStartUrl: string | null;
  IsVisible: boolean;
  IsUsingAdminAuthorization: boolean;
};

type ParentReferences$UserAppMenuItem = {
  //
};

type ChildRelationships$UserAppMenuItem = {
  //
};

interface SObjectDefinition$UserAppMenuItem extends SObjectDefinition<'UserAppMenuItem'> {
    Name: 'UserAppMenuItem';
    Fields: Fields$UserAppMenuItem;
    ParentReferences: ParentReferences$UserAppMenuItem;
    ChildRelationships: ChildRelationships$UserAppMenuItem;
  }

type Fields$UserChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Username: string | null;
  LastName: string | null;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  CompanyName: string | null;
  Division: string | null;
  Department: string | null;
  Title: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Email: string | null;
  EmailPreferencesAutoBcc: boolean;
  EmailPreferencesAutoBccStayInTouch: boolean;
  EmailPreferencesStayInTouchReminder: boolean;
  SenderEmail: string | null;
  SenderName: string | null;
  Signature: string | null;
  StayInTouchSubject: string | null;
  StayInTouchSignature: string | null;
  StayInTouchNote: string | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  Alias: string | null;
  CommunityNickname: string | null;
  IsActive: boolean;
  TimeZoneSidKey: string | null;
  UserRoleId: string | null;
  LocaleSidKey: string | null;
  ReceivesInfoEmails: boolean;
  ReceivesAdminInfoEmails: boolean;
  EmailEncodingKey: string | null;
  UserType: string | null;
  LanguageLocaleKey: string | null;
  EmployeeNumber: string | null;
  DelegatedApproverId: string | null;
  ManagerId: string | null;
  LastLoginDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  OfflineTrialExpirationDate: DateString | null;
  OfflinePdaTrialExpirationDate: DateString | null;
  UserPermissionsMarketingUser: boolean;
  UserPermissionsOfflineUser: boolean;
  UserPermissionsAvantgoUser: boolean;
  UserPermissionsCallCenterAutoLogin: boolean;
  UserPermissionsSFContentUser: boolean;
  UserPermissionsKnowledgeUser: boolean;
  UserPermissionsInteractionUser: boolean;
  UserPermissionsSupportUser: boolean;
  UserPermissionsLiveAgentUser: boolean;
  ForecastEnabled: boolean;
  UserPreferencesDisableAllFeedsEmail: boolean;
  UserPreferencesDisableFollowersEmail: boolean;
  UserPreferencesDisableProfilePostEmail: boolean;
  UserPreferencesDisableChangeCommentEmail: boolean;
  UserPreferencesDisableLaterCommentEmail: boolean;
  UserPreferencesDisProfPostCommentEmail: boolean;
  UserPreferencesContentNoEmail: boolean;
  UserPreferencesContentEmailAsAndWhen: boolean;
  UserPreferencesHideCSNGetChatterMobileTask: boolean;
  UserPreferencesDisableMentionsPostEmail: boolean;
  UserPreferencesDisMentionsCommentEmail: boolean;
  UserPreferencesHideCSNDesktopTask: boolean;
  UserPreferencesHideChatterOnboardingSplash: boolean;
  UserPreferencesHideSecondChatterOnboardingSplash: boolean;
  UserPreferencesDisCommentAfterLikeEmail: boolean;
  UserPreferencesDisableLikeEmail: boolean;
  UserPreferencesSortFeedByComment: boolean;
  UserPreferencesDisableMessageEmail: boolean;
  UserPreferencesDisableBookmarkEmail: boolean;
  UserPreferencesDisableSharePostEmail: boolean;
  UserPreferencesEnableAutoSubForFeeds: boolean;
  UserPreferencesDisableFileShareNotificationsForApi: boolean;
  UserPreferencesShowTitleToExternalUsers: boolean;
  UserPreferencesShowManagerToExternalUsers: boolean;
  UserPreferencesShowEmailToExternalUsers: boolean;
  UserPreferencesShowWorkPhoneToExternalUsers: boolean;
  UserPreferencesShowMobilePhoneToExternalUsers: boolean;
  UserPreferencesShowFaxToExternalUsers: boolean;
  UserPreferencesShowStreetAddressToExternalUsers: boolean;
  UserPreferencesShowCityToExternalUsers: boolean;
  UserPreferencesShowStateToExternalUsers: boolean;
  UserPreferencesShowPostalCodeToExternalUsers: boolean;
  UserPreferencesShowCountryToExternalUsers: boolean;
  UserPreferencesShowProfilePicToGuestUsers: boolean;
  UserPreferencesShowTitleToGuestUsers: boolean;
  UserPreferencesShowCityToGuestUsers: boolean;
  UserPreferencesShowStateToGuestUsers: boolean;
  UserPreferencesShowPostalCodeToGuestUsers: boolean;
  UserPreferencesShowCountryToGuestUsers: boolean;
  UserPreferencesHideInvoicesRedirectConfirmation: boolean;
  UserPreferencesHideStatementsRedirectConfirmation: boolean;
  UserPreferencesHideS1BrowserUI: boolean;
  UserPreferencesDisableEndorsementEmail: boolean;
  UserPreferencesPathAssistantCollapsed: boolean;
  UserPreferencesCacheDiagnostics: boolean;
  UserPreferencesShowEmailToGuestUsers: boolean;
  UserPreferencesShowManagerToGuestUsers: boolean;
  UserPreferencesShowWorkPhoneToGuestUsers: boolean;
  UserPreferencesShowMobilePhoneToGuestUsers: boolean;
  UserPreferencesShowFaxToGuestUsers: boolean;
  UserPreferencesShowStreetAddressToGuestUsers: boolean;
  UserPreferencesLightningExperiencePreferred: boolean;
  UserPreferencesHideEndUserOnboardingAssistantModal: boolean;
  UserPreferencesHideLightningMigrationModal: boolean;
  UserPreferencesHideSfxWelcomeMat: boolean;
  UserPreferencesHideBiggerPhotoCallout: boolean;
  UserPreferencesGlobalNavBarWTShown: boolean;
  UserPreferencesGlobalNavGridMenuWTShown: boolean;
  UserPreferencesCreateLEXAppsWTShown: boolean;
  UserPreferencesFavoritesWTShown: boolean;
  UserPreferencesRecordHomeSectionCollapseWTShown: boolean;
  UserPreferencesRecordHomeReservedWTShown: boolean;
  UserPreferencesFavoritesShowTopFavorites: boolean;
  UserPreferencesExcludeMailAppAttachments: boolean;
  UserPreferencesSuppressTaskSFXReminders: boolean;
  UserPreferencesSuppressEventSFXReminders: boolean;
  UserPreferencesPreviewCustomTheme: boolean;
  UserPreferencesHasCelebrationBadge: boolean;
  UserPreferencesUserDebugModePref: boolean;
  UserPreferencesSRHOverrideActivities: boolean;
  UserPreferencesNewLightningReportRunPageEnabled: boolean;
  UserPreferencesNativeEmailClient: boolean;
  UserPreferencesHideBrowseProductRedirectConfirmation: boolean;
  ContactId: string | null;
  AccountId: string | null;
  CallCenterId: string | null;
  Extension: string | null;
  FederationIdentifier: string | null;
  AboutMe: string | null;
  DigestFrequency: string | null;
  DefaultGroupNotificationFrequency: string | null;
  IsProfilePhotoActive: boolean;
  IndividualId: string | null;
  Last_Login_Provider__c: string | null;
  Citta_di_nascita__c: string | null;
  Data_DPCM__c: DateString | null;
  Data_di_nascita__c: DateString | null;
  Provincia_di_nascita__c: string | null;
};

type ParentReferences$UserChangeEvent = {
  //
};

type ChildRelationships$UserChangeEvent = {
  //
};

interface SObjectDefinition$UserChangeEvent extends SObjectDefinition<'UserChangeEvent'> {
    Name: 'UserChangeEvent';
    Fields: Fields$UserChangeEvent;
    ParentReferences: ParentReferences$UserChangeEvent;
    ChildRelationships: ChildRelationships$UserChangeEvent;
  }

type Fields$UserConfigTransferButton = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LiveChatUserConfigId: string;
  LiveChatButtonId: string | null;
};

type ParentReferences$UserConfigTransferButton = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LiveChatUserConfig: SObjectDefinition$LiveChatUserConfig;
  LiveChatButton: SObjectDefinition$LiveChatButton | null;
};

type ChildRelationships$UserConfigTransferButton = {
  //
};

interface SObjectDefinition$UserConfigTransferButton extends SObjectDefinition<'UserConfigTransferButton'> {
    Name: 'UserConfigTransferButton';
    Fields: Fields$UserConfigTransferButton;
    ParentReferences: ParentReferences$UserConfigTransferButton;
    ChildRelationships: ChildRelationships$UserConfigTransferButton;
  }

type Fields$UserCustomBadge = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string | null;
  BadgeType: string;
  CustomText: string | null;
};

type ParentReferences$UserCustomBadge = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Network | null;
};

type ChildRelationships$UserCustomBadge = {
  //
  Localization: SObjectDefinition$UserCustomBadgeLocalization;
};

interface SObjectDefinition$UserCustomBadge extends SObjectDefinition<'UserCustomBadge'> {
    Name: 'UserCustomBadge';
    Fields: Fields$UserCustomBadge;
    ParentReferences: ParentReferences$UserCustomBadge;
    ChildRelationships: ChildRelationships$UserCustomBadge;
  }

type Fields$UserCustomBadgeLocalization = {
  //
  Id: string;
  ParentId: string;
  Language: string;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$UserCustomBadgeLocalization = {
  //
  Parent: SObjectDefinition$UserCustomBadge;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserCustomBadgeLocalization = {
  //
};

interface SObjectDefinition$UserCustomBadgeLocalization extends SObjectDefinition<'UserCustomBadgeLocalization'> {
    Name: 'UserCustomBadgeLocalization';
    Fields: Fields$UserCustomBadgeLocalization;
    ParentReferences: ParentReferences$UserCustomBadgeLocalization;
    ChildRelationships: ChildRelationships$UserCustomBadgeLocalization;
  }

type Fields$UserEmailPreferredPerson = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Email: string;
  PersonRecordId: string;
};

type ParentReferences$UserEmailPreferredPerson = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PersonRecord: SObjectDefinition$Name;
};

type ChildRelationships$UserEmailPreferredPerson = {
  //
  Shares: SObjectDefinition$UserEmailPreferredPersonShare;
};

interface SObjectDefinition$UserEmailPreferredPerson extends SObjectDefinition<'UserEmailPreferredPerson'> {
    Name: 'UserEmailPreferredPerson';
    Fields: Fields$UserEmailPreferredPerson;
    ParentReferences: ParentReferences$UserEmailPreferredPerson;
    ChildRelationships: ChildRelationships$UserEmailPreferredPerson;
  }

type Fields$UserEmailPreferredPersonShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UserEmailPreferredPersonShare = {
  //
  Parent: SObjectDefinition$UserEmailPreferredPerson;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserEmailPreferredPersonShare = {
  //
};

interface SObjectDefinition$UserEmailPreferredPersonShare extends SObjectDefinition<'UserEmailPreferredPersonShare'> {
    Name: 'UserEmailPreferredPersonShare';
    Fields: Fields$UserEmailPreferredPersonShare;
    ParentReferences: ParentReferences$UserEmailPreferredPersonShare;
    ChildRelationships: ChildRelationships$UserEmailPreferredPersonShare;
  }

type Fields$UserFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$UserFeed = {
  //
  Parent: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$UserFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$UserFeed extends SObjectDefinition<'UserFeed'> {
    Name: 'UserFeed';
    Fields: Fields$UserFeed;
    ParentReferences: ParentReferences$UserFeed;
    ChildRelationships: ChildRelationships$UserFeed;
  }

type Fields$UserListView = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  ListViewId: string;
  SobjectType: string | null;
  LastViewedChart: string | null;
};

type ParentReferences$UserListView = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  ListView: SObjectDefinition$ListView;
};

type ChildRelationships$UserListView = {
  //
};

interface SObjectDefinition$UserListView extends SObjectDefinition<'UserListView'> {
    Name: 'UserListView';
    Fields: Fields$UserListView;
    ParentReferences: ParentReferences$UserListView;
    ChildRelationships: ChildRelationships$UserListView;
  }

type Fields$UserListViewCriterion = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserListViewId: string;
  SortOrder: number;
  ColumnName: string;
  Operation: string;
  Value: string | null;
};

type ParentReferences$UserListViewCriterion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserListView: SObjectDefinition$UserListView;
};

type ChildRelationships$UserListViewCriterion = {
  //
};

interface SObjectDefinition$UserListViewCriterion extends SObjectDefinition<'UserListViewCriterion'> {
    Name: 'UserListViewCriterion';
    Fields: Fields$UserListViewCriterion;
    ParentReferences: ParentReferences$UserListViewCriterion;
    ChildRelationships: ChildRelationships$UserListViewCriterion;
  }

type Fields$UserLogin = {
  //
  Id: string;
  UserId: string | null;
  IsFrozen: boolean;
  IsPasswordLocked: boolean;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$UserLogin = {
  //
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserLogin = {
  //
};

interface SObjectDefinition$UserLogin extends SObjectDefinition<'UserLogin'> {
    Name: 'UserLogin';
    Fields: Fields$UserLogin;
    ParentReferences: ParentReferences$UserLogin;
    ChildRelationships: ChildRelationships$UserLogin;
  }

type Fields$UserPermissionAccess = {
  //
  Id: string;
  LastCacheUpdate: DateString | null;
  PermissionsEmailSingle: boolean;
  PermissionsEmailMass: boolean;
  PermissionsEditTask: boolean;
  PermissionsEditEvent: boolean;
  PermissionsExportReport: boolean;
  PermissionsImportPersonal: boolean;
  PermissionsDataExport: boolean;
  PermissionsManageUsers: boolean;
  PermissionsEditPublicFilters: boolean;
  PermissionsEditPublicTemplates: boolean;
  PermissionsModifyAllData: boolean;
  PermissionsEditBillingInfo: boolean;
  PermissionsManageCases: boolean;
  PermissionsMassInlineEdit: boolean;
  PermissionsEditKnowledge: boolean;
  PermissionsManageKnowledge: boolean;
  PermissionsManageSolutions: boolean;
  PermissionsCustomizeApplication: boolean;
  PermissionsEditReadonlyFields: boolean;
  PermissionsRunReports: boolean;
  PermissionsViewSetup: boolean;
  PermissionsTransferAnyEntity: boolean;
  PermissionsNewReportBuilder: boolean;
  PermissionsManageCssUsers: boolean;
  PermissionsActivateContract: boolean;
  PermissionsActivateOrder: boolean;
  PermissionsImportLeads: boolean;
  PermissionsManageLeads: boolean;
  PermissionsTransferAnyLead: boolean;
  PermissionsViewAllData: boolean;
  PermissionsEditPublicDocuments: boolean;
  PermissionsViewEncryptedData: boolean;
  PermissionsEditBrandTemplates: boolean;
  PermissionsEditHtmlTemplates: boolean;
  PermissionsChatterInternalUser: boolean;
  PermissionsManageTranslation: boolean;
  PermissionsManageEncryptionKeys: boolean;
  PermissionsDeleteActivatedContract: boolean;
  PermissionsChatterInviteExternalUsers: boolean;
  PermissionsSendSitRequests: boolean;
  PermissionsOverrideForecasts: boolean;
  PermissionsViewAllForecasts: boolean;
  PermissionsApiUserOnly: boolean;
  PermissionsManageRemoteAccess: boolean;
  PermissionsCanUseNewDashboardBuilder: boolean;
  PermissionsManageCategories: boolean;
  PermissionsConvertLeads: boolean;
  PermissionsPasswordNeverExpires: boolean;
  PermissionsUseTeamReassignWizards: boolean;
  PermissionsEditActivatedOrders: boolean;
  PermissionsInstallPackaging: boolean;
  PermissionsPublishPackaging: boolean;
  PermissionsManagePartners: boolean;
  PermissionsChatterOwnGroups: boolean;
  PermissionsEditOppLineItemUnitPrice: boolean;
  PermissionsCreatePackaging: boolean;
  PermissionsBulkApiHardDelete: boolean;
  PermissionsInboundMigrationToolsUser: boolean;
  PermissionsSolutionImport: boolean;
  PermissionsManageCallCenters: boolean;
  PermissionsPortalSuperUser: boolean;
  PermissionsManageSynonyms: boolean;
  PermissionsOutboundMigrationToolsUser: boolean;
  PermissionsDelegatedPortalUserAdmin: boolean;
  PermissionsViewContent: boolean;
  PermissionsManageEmailClientConfig: boolean;
  PermissionsEnableNotifications: boolean;
  PermissionsManageDataIntegrations: boolean;
  PermissionsDistributeFromPersWksp: boolean;
  PermissionsViewDataCategories: boolean;
  PermissionsManageDataCategories: boolean;
  PermissionsAuthorApex: boolean;
  PermissionsManageMobile: boolean;
  PermissionsApiEnabled: boolean;
  PermissionsManageCustomReportTypes: boolean;
  PermissionsEditCaseComments: boolean;
  PermissionsTransferAnyCase: boolean;
  PermissionsContentAdministrator: boolean;
  PermissionsCreateWorkspaces: boolean;
  PermissionsManageContentPermissions: boolean;
  PermissionsManageContentProperties: boolean;
  PermissionsManageContentTypes: boolean;
  PermissionsScheduleJob: boolean;
  PermissionsManageExchangeConfig: boolean;
  PermissionsManageAnalyticSnapshots: boolean;
  PermissionsScheduleReports: boolean;
  PermissionsManageBusinessHourHolidays: boolean;
  PermissionsManageEntitlements: boolean;
  PermissionsManageDynamicDashboards: boolean;
  PermissionsCustomSidebarOnAllPages: boolean;
  PermissionsManageInteraction: boolean;
  PermissionsViewMyTeamsDashboards: boolean;
  PermissionsModerateChatter: boolean;
  PermissionsResetPasswords: boolean;
  PermissionsFlowUFLRequired: boolean;
  PermissionsCanInsertFeedSystemFields: boolean;
  PermissionsActivitiesAccess: boolean;
  PermissionsManageKnowledgeImportExport: boolean;
  PermissionsEmailTemplateManagement: boolean;
  PermissionsEmailAdministration: boolean;
  PermissionsManageChatterMessages: boolean;
  PermissionsAllowEmailIC: boolean;
  PermissionsChatterFileLink: boolean;
  PermissionsForceTwoFactor: boolean;
  PermissionsViewEventLogFiles: boolean;
  PermissionsManageNetworks: boolean;
  PermissionsViewCaseInteraction: boolean;
  PermissionsManageAuthProviders: boolean;
  PermissionsRunFlow: boolean;
  PermissionsViewGlobalHeader: boolean;
  PermissionsManageQuotas: boolean;
  PermissionsCreateCustomizeDashboards: boolean;
  PermissionsCreateDashboardFolders: boolean;
  PermissionsViewPublicDashboards: boolean;
  PermissionsManageDashbdsInPubFolders: boolean;
  PermissionsCreateCustomizeReports: boolean;
  PermissionsCreateReportFolders: boolean;
  PermissionsViewPublicReports: boolean;
  PermissionsManageReportsInPubFolders: boolean;
  PermissionsEditMyDashboards: boolean;
  PermissionsEditMyReports: boolean;
  PermissionsViewAllUsers: boolean;
  PermissionsBypassEmailApproval: boolean;
  PermissionsAllowUniversalSearch: boolean;
  PermissionsConnectOrgToEnvironmentHub: boolean;
  PermissionsCreateCustomizeFilters: boolean;
  PermissionsContentHubUser: boolean;
  PermissionsModerateNetworkFeeds: boolean;
  PermissionsModerateNetworkFiles: boolean;
  PermissionsGovernNetworks: boolean;
  PermissionsSalesConsole: boolean;
  PermissionsTwoFactorApi: boolean;
  PermissionsDeleteTopics: boolean;
  PermissionsEditTopics: boolean;
  PermissionsCreateTopics: boolean;
  PermissionsAssignTopics: boolean;
  PermissionsIdentityEnabled: boolean;
  PermissionsIdentityConnect: boolean;
  PermissionsAllowViewKnowledge: boolean;
  PermissionsContentWorkspaces: boolean;
  PermissionsCreateWorkBadgeDefinition: boolean;
  PermissionsManageSearchPromotionRules: boolean;
  PermissionsCustomMobileAppsAccess: boolean;
  PermissionsViewHelpLink: boolean;
  PermissionsManageProfilesPermissionsets: boolean;
  PermissionsAssignPermissionSets: boolean;
  PermissionsManageRoles: boolean;
  PermissionsManageIpAddresses: boolean;
  PermissionsManageSharing: boolean;
  PermissionsManageInternalUsers: boolean;
  PermissionsManagePasswordPolicies: boolean;
  PermissionsManageLoginAccessPolicies: boolean;
  PermissionsViewPlatformEvents: boolean;
  PermissionsManageCustomPermissions: boolean;
  PermissionsCanVerifyComment: boolean;
  PermissionsManageUnlistedGroups: boolean;
  PermissionsStdAutomaticActivityCapture: boolean;
  PermissionsInsightsAppDashboardEditor: boolean;
  PermissionsShareFilesWithNetworks: boolean;
  PermissionsManageTwoFactor: boolean;
  PermissionsInsightsAppUser: boolean;
  PermissionsInsightsAppAdmin: boolean;
  PermissionsInsightsAppEltEditor: boolean;
  PermissionsInsightsAppUploadUser: boolean;
  PermissionsInsightsCreateApplication: boolean;
  PermissionsLightningExperienceUser: boolean;
  PermissionsViewDataLeakageEvents: boolean;
  PermissionsConfigCustomRecs: boolean;
  PermissionsSubmitMacrosAllowed: boolean;
  PermissionsBulkMacrosAllowed: boolean;
  PermissionsShareInternalArticles: boolean;
  PermissionsModerateNetworkMessages: boolean;
  PermissionsManageSessionPermissionSets: boolean;
  PermissionsManageTemplatedApp: boolean;
  PermissionsUseTemplatedApp: boolean;
  PermissionsSendAnnouncementEmails: boolean;
  PermissionsChatterEditOwnPost: boolean;
  PermissionsChatterEditOwnRecordPost: boolean;
  PermissionsSalesAnalyticsUser: boolean;
  PermissionsAdminAnalyticsUser: boolean;
  PermissionsServiceAnalyticsUser: boolean;
  PermissionsAssignUserToSkill: boolean;
  PermissionsWaveTabularDownload: boolean;
  PermissionsWaveCommunityUser: boolean;
  PermissionsManageSandboxes: boolean;
  PermissionsAutomaticActivityCapture: boolean;
  PermissionsImportCustomObjects: boolean;
  PermissionsSalesforceIQInbox: boolean;
  PermissionsDelegatedTwoFactor: boolean;
  PermissionsChatterComposeUiCodesnippet: boolean;
  PermissionsSelectFilesFromSalesforce: boolean;
  PermissionsModerateNetworkUsers: boolean;
  PermissionsMergeTopics: boolean;
  PermissionsSubscribeToLightningReports: boolean;
  PermissionsManagePvtRptsAndDashbds: boolean;
  PermissionsCampaignInfluence2: boolean;
  PermissionsViewDataAssessment: boolean;
  PermissionsRemoveDirectMessageMembers: boolean;
  PermissionsCanApproveFeedPost: boolean;
  PermissionsAddDirectMessageMembers: boolean;
  PermissionsAllowViewEditConvertedLeads: boolean;
  PermissionsShowCompanyNameAsUserBadge: boolean;
  PermissionsAccessCMC: boolean;
  PermissionsArchiveArticles: boolean;
  PermissionsPublishArticles: boolean;
  PermissionsViewHealthCheck: boolean;
  PermissionsManageHealthCheck: boolean;
  PermissionsPackaging2: boolean;
  PermissionsManageCertificates: boolean;
  PermissionsCreateReportInLightning: boolean;
  PermissionsPreventClassicExperience: boolean;
  PermissionsHideReadByList: boolean;
  PermissionsSubmitForTranslation: boolean;
  PermissionsEditTranslation: boolean;
  PermissionsPublishTranslation: boolean;
  PermissionsListEmailSend: boolean;
  PermissionsFeedPinning: boolean;
  PermissionsChangeDashboardColors: boolean;
  PermissionsManageRecommendationStrategies: boolean;
  PermissionsManagePropositions: boolean;
  PermissionsCloseConversations: boolean;
  PermissionsSubscribeReportRolesGrps: boolean;
  PermissionsSubscribeDashboardRolesGrps: boolean;
  PermissionsUseWebLink: boolean;
  PermissionsHasUnlimitedNBAExecutions: boolean;
  PermissionsViewOnlyEmbeddedAppUser: boolean;
  PermissionsAdoptionAnalyticsUser: boolean;
  PermissionsViewAllActivities: boolean;
  PermissionsSubscribeReportToOtherUsers: boolean;
  PermissionsLightningConsoleAllowedForUser: boolean;
  PermissionsSubscribeReportsRunAsUser: boolean;
  PermissionsSubscribeToLightningDashboards: boolean;
  PermissionsSubscribeDashboardToOtherUsers: boolean;
  PermissionsCreateLtngTempInPub: boolean;
  PermissionsTransactionalEmailSend: boolean;
  PermissionsViewPrivateStaticResources: boolean;
  PermissionsViewCustomerSentiment: boolean;
  PermissionsCreateLtngTempFolder: boolean;
  PermissionsApexRestServices: boolean;
  PermissionsActionPlansUserAccess: boolean;
  PermissionsGiveRecognitionBadge: boolean;
  PermissionsAllowObjectDetection: boolean;
  PermissionsSalesforceIQInternal: boolean;
  PermissionsUseMySearch: boolean;
  PermissionsLtngPromoReserved01UserPerm: boolean;
  PermissionsManageSubscriptions: boolean;
  PermissionsWaveManagePrivateAssetsUser: boolean;
  PermissionsAllowObjectDetectionTraining: boolean;
  PermissionsCanEditDataPrepRecipe: boolean;
  PermissionsAddAnalyticsRemoteConnections: boolean;
  PermissionsManageSurveys: boolean;
  PermissionsUseAssistantDialog: boolean;
  PermissionsUseQuerySuggestions: boolean;
  PermissionsRecordVisibilityAPI: boolean;
  PermissionsViewRoles: boolean;
  PermissionsCanManageMaps: boolean;
  PermissionsLMOutboundMessagingUserPerm: boolean;
  PermissionsModifyDataClassification: boolean;
  PermissionsPrivacyDataAccess: boolean;
  PermissionsQueryAllFiles: boolean;
  PermissionsModifyMetadata: boolean;
  PermissionsManageCMS: boolean;
  PermissionsSandboxTestingInCommunityApp: boolean;
  PermissionsViewFlowUsageAndFlowEventData: boolean;
  PermissionsCanEditPrompts: boolean;
  PermissionsViewUserPII: boolean;
  PermissionsMobileAppSecurity: boolean;
  PermissionsViewDraftArticles: boolean;
  PermissionsViewArchivedArticles: boolean;
  PermissionsManageHubConnections: boolean;
  PermissionsIndustryMilestonePlatformUser: boolean;
  PermissionsB2BMarketingAnalyticsUser: boolean;
  PermissionsTraceXdsQueries: boolean;
  PermissionsViewAllCustomSettings: boolean;
  PermissionsManageIndustriesVisit: boolean;
  PermissionsViewAllForeignKeyNames: boolean;
  PermissionsAddWaveNotificationRecipients: boolean;
  PermissionsHeadlessCMSAccess: boolean;
  PermissionsLMEndMessagingSessionUserPerm: boolean;
  PermissionsPublicSectorCmtyAccess: boolean;
  PermissionsConsentApiUpdate: boolean;
  PermissionsManageMobileAppSecurity: boolean;
  PermissionsAccessContentBuilder: boolean;
  PermissionsUseCompliantDataSharing: boolean;
  PermissionsERMUserAccess: boolean;
  PermissionsEmployeeExperience: boolean;
  PermissionsAccountSwitcherUser: boolean;
  PermissionsViewAnomalyEvents: boolean;
  PermissionsManageC360AConnections: boolean;
  PermissionsManageReleaseUpdates: boolean;
  PermissionsVolunteerMgmtUserAccess: boolean;
  PermissionsViewAllProfiles: boolean;
  PermissionsSkipIdentityConfirmation: boolean;
  PermissionsPublicSectorPlatformUserAccess: boolean;
  PermissionsLPICommunityAccess: boolean;
  PermissionsConfigCompliantDataSharing: boolean;
  PermissionsHealthCloudCmtyAccess: boolean;
  PermissionsSendCustomNotifications: boolean;
  PermissionsPackaging2Delete: boolean;
  PermissionsCallCoachingUser: boolean;
  PermissionsViewRestrictionAndScopingRules: boolean;
  PermissionsDocumentChecklistUserAccess: boolean;
  PermissionsFinancialServices2UserAccess: boolean;
  PermissionsManageTrustMeasures: boolean;
  PermissionsViewTrustMeasures: boolean;
  PermissionsIsotopeCToCUser: boolean;
  PermissionsHasUnlimitedErbScoringRequests: boolean;
  PermissionsIsotopeAccess: boolean;
  PermissionsIsotopeLEX: boolean;
  PermissionsQuipMetricsAccess: boolean;
  PermissionsQuipUserEngagementMetrics: boolean;
  PermissionsManageExternalConnections: boolean;
  PermissionsUseSubscriptionEmails: boolean;
  PermissionsAIViewInsightObjects: boolean;
  PermissionsAICreateInsightObjects: boolean;
  PermissionsNativeWebviewScrolling: boolean;
};

type ParentReferences$UserPermissionAccess = {
  //
};

type ChildRelationships$UserPermissionAccess = {
  //
};

interface SObjectDefinition$UserPermissionAccess extends SObjectDefinition<'UserPermissionAccess'> {
    Name: 'UserPermissionAccess';
    Fields: Fields$UserPermissionAccess;
    ParentReferences: ParentReferences$UserPermissionAccess;
    ChildRelationships: ChildRelationships$UserPermissionAccess;
  }

type Fields$UserPreference = {
  //
  Id: string;
  UserId: string;
  Preference: string;
  Value: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$UserPreference = {
  //
};

type ChildRelationships$UserPreference = {
  //
};

interface SObjectDefinition$UserPreference extends SObjectDefinition<'UserPreference'> {
    Name: 'UserPreference';
    Fields: Fields$UserPreference;
    ParentReferences: ParentReferences$UserPreference;
    ChildRelationships: ChildRelationships$UserPreference;
  }

type Fields$UserRecordAccess = {
  //
  Id: string;
  UserId: string;
  RecordId: string;
  HasReadAccess: boolean;
  HasEditAccess: boolean;
  HasDeleteAccess: boolean;
  HasTransferAccess: boolean;
  HasAllAccess: boolean;
  MaxAccessLevel: string | null;
};

type ParentReferences$UserRecordAccess = {
  //
};

type ChildRelationships$UserRecordAccess = {
  //
};

interface SObjectDefinition$UserRecordAccess extends SObjectDefinition<'UserRecordAccess'> {
    Name: 'UserRecordAccess';
    Fields: Fields$UserRecordAccess;
    ParentReferences: ParentReferences$UserRecordAccess;
    ChildRelationships: ChildRelationships$UserRecordAccess;
  }

type Fields$UserRole = {
  //
  Id: string;
  Name: string;
  ParentRoleId: string | null;
  RollupDescription: string | null;
  OpportunityAccessForAccountOwner: string;
  CaseAccessForAccountOwner: string | null;
  ContactAccessForAccountOwner: string | null;
  ForecastUserId: string | null;
  MayForecastManagerShare: boolean;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DeveloperName: string | null;
  PortalAccountId: string | null;
  PortalType: string | null;
  PortalRole: string | null;
  PortalAccountOwnerId: string | null;
};

type ParentReferences$UserRole = {
  //
  ParentRole: SObjectDefinition$UserRole | null;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserRole = {
  //
  Users: SObjectDefinition$User;
};

interface SObjectDefinition$UserRole extends SObjectDefinition<'UserRole'> {
    Name: 'UserRole';
    Fields: Fields$UserRole;
    ParentReferences: ParentReferences$UserRole;
    ChildRelationships: ChildRelationships$UserRole;
  }

type Fields$UserServicePresence = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  ServicePresenceStatusId: string | null;
  StatusStartDate: DateString | null;
  ConfiguredCapacity: number | null;
  StatusEndDate: DateString | null;
  IsAway: boolean;
  IdleDuration: number | null;
  AtCapacityDuration: number | null;
  AverageCapacity: number | null;
  IsCurrentState: boolean;
  StatusDuration: number | null;
};

type ParentReferences$UserServicePresence = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  ServicePresenceStatus: SObjectDefinition$ServicePresenceStatus | null;
};

type ChildRelationships$UserServicePresence = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$UserServicePresenceShare;
};

interface SObjectDefinition$UserServicePresence extends SObjectDefinition<'UserServicePresence'> {
    Name: 'UserServicePresence';
    Fields: Fields$UserServicePresence;
    ParentReferences: ParentReferences$UserServicePresence;
    ChildRelationships: ChildRelationships$UserServicePresence;
  }

type Fields$UserServicePresenceShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UserServicePresenceShare = {
  //
  Parent: SObjectDefinition$UserServicePresence;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserServicePresenceShare = {
  //
};

interface SObjectDefinition$UserServicePresenceShare extends SObjectDefinition<'UserServicePresenceShare'> {
    Name: 'UserServicePresenceShare';
    Fields: Fields$UserServicePresenceShare;
    ParentReferences: ParentReferences$UserServicePresenceShare;
    ChildRelationships: ChildRelationships$UserServicePresenceShare;
  }

type Fields$UserSetupEntityAccess = {
  //
  Id: string;
  DurableId: string | null;
  SetupEntityId: string | null;
  KeyPrefix: string | null;
  DeveloperName: string | null;
  NamespacePrefix: string | null;
  LastCacheUpdate: DateString | null;
};

type ParentReferences$UserSetupEntityAccess = {
  //
};

type ChildRelationships$UserSetupEntityAccess = {
  //
};

interface SObjectDefinition$UserSetupEntityAccess extends SObjectDefinition<'UserSetupEntityAccess'> {
    Name: 'UserSetupEntityAccess';
    Fields: Fields$UserSetupEntityAccess;
    ParentReferences: ParentReferences$UserSetupEntityAccess;
    ChildRelationships: ChildRelationships$UserSetupEntityAccess;
  }

type Fields$UserShare = {
  //
  Id: string;
  UserId: string;
  UserOrGroupId: string;
  UserAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsActive: boolean;
};

type ParentReferences$UserShare = {
  //
  User: SObjectDefinition$User;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserShare = {
  //
};

interface SObjectDefinition$UserShare extends SObjectDefinition<'UserShare'> {
    Name: 'UserShare';
    Fields: Fields$UserShare;
    ParentReferences: ParentReferences$UserShare;
    ChildRelationships: ChildRelationships$UserShare;
  }

type Fields$ViolationEnforcementAction = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ViolationId: string;
  Description: string | null;
  Type: string;
  Status: string | null;
  Priority: string | null;
  DateCreated: DateString;
  ComplianceDueDate: DateString | null;
  DateResolved: DateString | null;
  DaysOpen: number | null;
  ResolutionNotes: string | null;
};

type ParentReferences$ViolationEnforcementAction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Violation: SObjectDefinition$RegulatoryCodeViolation;
};

type ChildRelationships$ViolationEnforcementAction = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$ViolationEnforcementActionFeed;
  Histories: SObjectDefinition$ViolationEnforcementActionHistory;
};

interface SObjectDefinition$ViolationEnforcementAction extends SObjectDefinition<'ViolationEnforcementAction'> {
    Name: 'ViolationEnforcementAction';
    Fields: Fields$ViolationEnforcementAction;
    ParentReferences: ParentReferences$ViolationEnforcementAction;
    ChildRelationships: ChildRelationships$ViolationEnforcementAction;
  }

type Fields$ViolationEnforcementActionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ViolationEnforcementActionFeed = {
  //
  Parent: SObjectDefinition$ViolationEnforcementAction;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ViolationEnforcementActionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ViolationEnforcementActionFeed extends SObjectDefinition<'ViolationEnforcementActionFeed'> {
    Name: 'ViolationEnforcementActionFeed';
    Fields: Fields$ViolationEnforcementActionFeed;
    ParentReferences: ParentReferences$ViolationEnforcementActionFeed;
    ChildRelationships: ChildRelationships$ViolationEnforcementActionFeed;
  }

type Fields$ViolationEnforcementActionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ViolationEnforcementActionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ViolationEnforcementActionHistory = {
  //
  ViolationEnforcementAction: SObjectDefinition$ViolationEnforcementAction;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ViolationEnforcementActionHistory = {
  //
};

interface SObjectDefinition$ViolationEnforcementActionHistory extends SObjectDefinition<'ViolationEnforcementActionHistory'> {
    Name: 'ViolationEnforcementActionHistory';
    Fields: Fields$ViolationEnforcementActionHistory;
    ParentReferences: ParentReferences$ViolationEnforcementActionHistory;
    ChildRelationships: ChildRelationships$ViolationEnforcementActionHistory;
  }

type Fields$ViolationType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  Type: string;
  Severity: string;
};

type ParentReferences$ViolationType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ViolationType = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RegCodeViolationType: SObjectDefinition$RegulatoryCodeViolation;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$ViolationTypeFeed;
  Histories: SObjectDefinition$ViolationTypeHistory;
  Shares: SObjectDefinition$ViolationTypeShare;
};

interface SObjectDefinition$ViolationType extends SObjectDefinition<'ViolationType'> {
    Name: 'ViolationType';
    Fields: Fields$ViolationType;
    ParentReferences: ParentReferences$ViolationType;
    ChildRelationships: ChildRelationships$ViolationType;
  }

type Fields$ViolationTypeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ViolationTypeFeed = {
  //
  Parent: SObjectDefinition$ViolationType;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ViolationTypeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ViolationTypeFeed extends SObjectDefinition<'ViolationTypeFeed'> {
    Name: 'ViolationTypeFeed';
    Fields: Fields$ViolationTypeFeed;
    ParentReferences: ParentReferences$ViolationTypeFeed;
    ChildRelationships: ChildRelationships$ViolationTypeFeed;
  }

type Fields$ViolationTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ViolationTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ViolationTypeHistory = {
  //
  ViolationType: SObjectDefinition$ViolationType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ViolationTypeHistory = {
  //
};

interface SObjectDefinition$ViolationTypeHistory extends SObjectDefinition<'ViolationTypeHistory'> {
    Name: 'ViolationTypeHistory';
    Fields: Fields$ViolationTypeHistory;
    ParentReferences: ParentReferences$ViolationTypeHistory;
    ChildRelationships: ChildRelationships$ViolationTypeHistory;
  }

type Fields$ViolationTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ViolationTypeShare = {
  //
  Parent: SObjectDefinition$ViolationType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ViolationTypeShare = {
  //
};

interface SObjectDefinition$ViolationTypeShare extends SObjectDefinition<'ViolationTypeShare'> {
    Name: 'ViolationTypeShare';
    Fields: Fields$ViolationTypeShare;
    ParentReferences: ParentReferences$ViolationTypeShare;
    ChildRelationships: ChildRelationships$ViolationTypeShare;
  }

type Fields$VoiceCall = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  OwnerId: string;
  CallStartDateTime: DateString;
  CallEndDateTime: DateString;
  FromPhoneNumber: string;
  ToPhoneNumber: string;
  CallDurationInSeconds: number | null;
  VendorCallKey: string | null;
  Price: number | null;
  CurrencyCode: string | null;
  CallDisposition: string | null;
  CallType: string;
  VendorParentCallKey: string | null;
  UserId: string | null;
  RelatedRecordId: string | null;
  VendorType: string | null;
  ConferenceKey: string | null;
  CallerIdType: string | null;
  IsRecorded: boolean;
  ActivityId: string | null;
  CallConnectDateTime: DateString | null;
  MediaProviderId: string | null;
};

type ParentReferences$VoiceCall = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$Name;
  User: SObjectDefinition$User | null;
  RelatedRecord: SObjectDefinition$Name | null;
  Activity: SObjectDefinition$Task | null;
  MediaProvider: SObjectDefinition$CallCoachingMediaProvider | null;
};

type ChildRelationships$VoiceCall = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ConversationEntries: SObjectDefinition$ConversationEntry;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SharingRecordCollectionItems: SObjectDefinition$SharingRecordCollectionItem;
  Feeds: SObjectDefinition$VoiceCallFeed;
  Shares: SObjectDefinition$VoiceCallShare;
};

interface SObjectDefinition$VoiceCall extends SObjectDefinition<'VoiceCall'> {
    Name: 'VoiceCall';
    Fields: Fields$VoiceCall;
    ParentReferences: ParentReferences$VoiceCall;
    ChildRelationships: ChildRelationships$VoiceCall;
  }

type Fields$VoiceCallChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CreatedById: string | null;
  CreatedDate: DateString | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  OwnerId: string | null;
  CallStartDateTime: DateString | null;
  CallEndDateTime: DateString | null;
  FromPhoneNumber: string | null;
  ToPhoneNumber: string | null;
  CallDurationInSeconds: number | null;
  VendorCallKey: string | null;
  Price: number | null;
  CurrencyCode: string | null;
  CallDisposition: string | null;
  CallType: string | null;
  VendorParentCallKey: string | null;
  UserId: string | null;
  RelatedRecordId: string | null;
  VendorType: string | null;
  ConferenceKey: string | null;
  CallerIdType: string | null;
  IsRecorded: boolean;
  ActivityId: string | null;
  CallConnectDateTime: DateString | null;
  MediaProviderId: string | null;
};

type ParentReferences$VoiceCallChangeEvent = {
  //
};

type ChildRelationships$VoiceCallChangeEvent = {
  //
};

interface SObjectDefinition$VoiceCallChangeEvent extends SObjectDefinition<'VoiceCallChangeEvent'> {
    Name: 'VoiceCallChangeEvent';
    Fields: Fields$VoiceCallChangeEvent;
    ParentReferences: ParentReferences$VoiceCallChangeEvent;
    ChildRelationships: ChildRelationships$VoiceCallChangeEvent;
  }

type Fields$VoiceCallFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$VoiceCallFeed = {
  //
  Parent: SObjectDefinition$VoiceCall;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$VoiceCallFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$VoiceCallFeed extends SObjectDefinition<'VoiceCallFeed'> {
    Name: 'VoiceCallFeed';
    Fields: Fields$VoiceCallFeed;
    ParentReferences: ParentReferences$VoiceCallFeed;
    ChildRelationships: ChildRelationships$VoiceCallFeed;
  }

type Fields$VoiceCallShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$VoiceCallShare = {
  //
  Parent: SObjectDefinition$VoiceCall;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$VoiceCallShare = {
  //
};

interface SObjectDefinition$VoiceCallShare extends SObjectDefinition<'VoiceCallShare'> {
    Name: 'VoiceCallShare';
    Fields: Fields$VoiceCallShare;
    ParentReferences: ParentReferences$VoiceCallShare;
    ChildRelationships: ChildRelationships$VoiceCallShare;
  }

type Fields$VoiceVendorInfo = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  VendorAccountKey: string;
  VendorProviderName: string;
  VendorType: string;
  IsActive: boolean;
  CorporateNumber: string | null;
  LocalPresenceDefaultNumber: string | null;
};

type ParentReferences$VoiceVendorInfo = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$VoiceVendorInfo = {
  //
};

interface SObjectDefinition$VoiceVendorInfo extends SObjectDefinition<'VoiceVendorInfo'> {
    Name: 'VoiceVendorInfo';
    Fields: Fields$VoiceVendorInfo;
    ParentReferences: ParentReferences$VoiceVendorInfo;
    ChildRelationships: ChildRelationships$VoiceVendorInfo;
  }

type Fields$VolunteerProject = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LocationId: string | null;
  CanceledById: string | null;
  Status: string;
  StartDateTime: DateString;
  EndDateTime: DateString;
  IsPublishedOnWeb: boolean;
  VolunteersRequired: number;
  CanceledTime: DateString | null;
  CancelationReason: string | null;
  Description: string | null;
  ExternalDescription: string | null;
};

type ParentReferences$VolunteerProject = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Location: SObjectDefinition$Location | null;
  CanceledBy: SObjectDefinition$Name | null;
};

type ChildRelationships$VolunteerProject = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$VolunteerProjectFeed;
  Histories: SObjectDefinition$VolunteerProjectHistory;
  Shares: SObjectDefinition$VolunteerProjectShare;
};

interface SObjectDefinition$VolunteerProject extends SObjectDefinition<'VolunteerProject'> {
    Name: 'VolunteerProject';
    Fields: Fields$VolunteerProject;
    ParentReferences: ParentReferences$VolunteerProject;
    ChildRelationships: ChildRelationships$VolunteerProject;
  }

type Fields$VolunteerProjectFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$VolunteerProjectFeed = {
  //
  Parent: SObjectDefinition$VolunteerProject;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$VolunteerProjectFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$VolunteerProjectFeed extends SObjectDefinition<'VolunteerProjectFeed'> {
    Name: 'VolunteerProjectFeed';
    Fields: Fields$VolunteerProjectFeed;
    ParentReferences: ParentReferences$VolunteerProjectFeed;
    ChildRelationships: ChildRelationships$VolunteerProjectFeed;
  }

type Fields$VolunteerProjectHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  VolunteerProjectId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$VolunteerProjectHistory = {
  //
  VolunteerProject: SObjectDefinition$VolunteerProject;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$VolunteerProjectHistory = {
  //
};

interface SObjectDefinition$VolunteerProjectHistory extends SObjectDefinition<'VolunteerProjectHistory'> {
    Name: 'VolunteerProjectHistory';
    Fields: Fields$VolunteerProjectHistory;
    ParentReferences: ParentReferences$VolunteerProjectHistory;
    ChildRelationships: ChildRelationships$VolunteerProjectHistory;
  }

type Fields$VolunteerProjectShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$VolunteerProjectShare = {
  //
  Parent: SObjectDefinition$VolunteerProject;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$VolunteerProjectShare = {
  //
};

interface SObjectDefinition$VolunteerProjectShare extends SObjectDefinition<'VolunteerProjectShare'> {
    Name: 'VolunteerProjectShare';
    Fields: Fields$VolunteerProjectShare;
    ParentReferences: ParentReferences$VolunteerProjectShare;
    ChildRelationships: ChildRelationships$VolunteerProjectShare;
  }

type Fields$Vote = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Type: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Vote = {
  //
  Parent: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Vote = {
  //
};

interface SObjectDefinition$Vote extends SObjectDefinition<'Vote'> {
    Name: 'Vote';
    Fields: Fields$Vote;
    ParentReferences: ParentReferences$Vote;
    ChildRelationships: ChildRelationships$Vote;
  }

type Fields$WorkAccess = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  AccessType: string;
};

type ParentReferences$WorkAccess = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$WorkBadgeDefinition;
};

type ChildRelationships$WorkAccess = {
  //
  Shares: SObjectDefinition$WorkAccessShare;
};

interface SObjectDefinition$WorkAccess extends SObjectDefinition<'WorkAccess'> {
    Name: 'WorkAccess';
    Fields: Fields$WorkAccess;
    ParentReferences: ParentReferences$WorkAccess;
    ChildRelationships: ChildRelationships$WorkAccess;
  }

type Fields$WorkAccessShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkAccessShare = {
  //
  Parent: SObjectDefinition$WorkAccess;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkAccessShare = {
  //
};

interface SObjectDefinition$WorkAccessShare extends SObjectDefinition<'WorkAccessShare'> {
    Name: 'WorkAccessShare';
    Fields: Fields$WorkAccessShare;
    ParentReferences: ParentReferences$WorkAccessShare;
    ChildRelationships: ChildRelationships$WorkAccessShare;
  }

type Fields$WorkBadge = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SourceId: string;
  DefinitionId: string;
  RecipientId: string;
  NetworkId: string | null;
  GiverId: string | null;
  ImageUrl: string | null;
  Description: string | null;
  Message: string | null;
};

type ParentReferences$WorkBadge = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Source: SObjectDefinition$WorkThanks;
  Definition: SObjectDefinition$WorkBadgeDefinition;
  Recipient: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
  Giver: SObjectDefinition$User | null;
};

type ChildRelationships$WorkBadge = {
  //
};

interface SObjectDefinition$WorkBadge extends SObjectDefinition<'WorkBadge'> {
    Name: 'WorkBadge';
    Fields: Fields$WorkBadge;
    ParentReferences: ParentReferences$WorkBadge;
    ChildRelationships: ChildRelationships$WorkBadge;
  }

type Fields$WorkBadgeDefinition = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsCompanyWide: boolean;
  Description: string;
  ImageUrl: string;
  IsActive: boolean;
  NetworkId: string | null;
  LimitNumber: number | null;
  IsLimitPerUser: boolean;
  LimitStartDate: DateString | null;
  GivenBadgeCount: number | null;
  IsRewardBadge: boolean;
};

type ParentReferences$WorkBadgeDefinition = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
};

type ChildRelationships$WorkBadgeDefinition = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  WorkAccesses: SObjectDefinition$WorkAccess;
  Badges: SObjectDefinition$WorkBadge;
  Feeds: SObjectDefinition$WorkBadgeDefinitionFeed;
  Histories: SObjectDefinition$WorkBadgeDefinitionHistory;
  Shares: SObjectDefinition$WorkBadgeDefinitionShare;
};

interface SObjectDefinition$WorkBadgeDefinition extends SObjectDefinition<'WorkBadgeDefinition'> {
    Name: 'WorkBadgeDefinition';
    Fields: Fields$WorkBadgeDefinition;
    ParentReferences: ParentReferences$WorkBadgeDefinition;
    ChildRelationships: ChildRelationships$WorkBadgeDefinition;
  }

type Fields$WorkBadgeDefinitionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$WorkBadgeDefinitionFeed = {
  //
  Parent: SObjectDefinition$WorkBadgeDefinition;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$WorkBadgeDefinitionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$WorkBadgeDefinitionFeed extends SObjectDefinition<'WorkBadgeDefinitionFeed'> {
    Name: 'WorkBadgeDefinitionFeed';
    Fields: Fields$WorkBadgeDefinitionFeed;
    ParentReferences: ParentReferences$WorkBadgeDefinitionFeed;
    ChildRelationships: ChildRelationships$WorkBadgeDefinitionFeed;
  }

type Fields$WorkBadgeDefinitionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  WorkBadgeDefinitionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$WorkBadgeDefinitionHistory = {
  //
  WorkBadgeDefinition: SObjectDefinition$WorkBadgeDefinition;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkBadgeDefinitionHistory = {
  //
};

interface SObjectDefinition$WorkBadgeDefinitionHistory extends SObjectDefinition<'WorkBadgeDefinitionHistory'> {
    Name: 'WorkBadgeDefinitionHistory';
    Fields: Fields$WorkBadgeDefinitionHistory;
    ParentReferences: ParentReferences$WorkBadgeDefinitionHistory;
    ChildRelationships: ChildRelationships$WorkBadgeDefinitionHistory;
  }

type Fields$WorkBadgeDefinitionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkBadgeDefinitionShare = {
  //
  Parent: SObjectDefinition$WorkBadgeDefinition;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkBadgeDefinitionShare = {
  //
};

interface SObjectDefinition$WorkBadgeDefinitionShare extends SObjectDefinition<'WorkBadgeDefinitionShare'> {
    Name: 'WorkBadgeDefinitionShare';
    Fields: Fields$WorkBadgeDefinitionShare;
    ParentReferences: ParentReferences$WorkBadgeDefinitionShare;
    ChildRelationships: ChildRelationships$WorkBadgeDefinitionShare;
  }

type Fields$WorkOrder = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  WorkOrderNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AccountId: string | null;
  ContactId: string | null;
  CaseId: string | null;
  EntitlementId: string | null;
  ServiceContractId: string | null;
  AssetId: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Description: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Subject: string | null;
  RootWorkOrderId: string | null;
  Status: string | null;
  Priority: string | null;
  Tax: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  Pricebook2Id: string | null;
  Discount: number | null;
  GrandTotal: number | null;
  ParentWorkOrderId: string | null;
  IsClosed: boolean;
  IsStopped: boolean;
  StopStartDate: DateString | null;
  SlaStartDate: DateString | null;
  SlaExitDate: DateString | null;
  BusinessHoursId: string | null;
  MilestoneStatus: string | null;
  Duration: number | null;
  DurationType: string | null;
  DurationInMinutes: number | null;
  ServiceAppointmentCount: number | null;
  StatusCategory: string | null;
  LocationId: string | null;
};

type ParentReferences$WorkOrder = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account | null;
  Contact: SObjectDefinition$Contact | null;
  Case: SObjectDefinition$Case | null;
  Entitlement: SObjectDefinition$Entitlement | null;
  ServiceContract: SObjectDefinition$ServiceContract | null;
  Asset: SObjectDefinition$Asset | null;
  RootWorkOrder: SObjectDefinition$WorkOrder | null;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  ParentWorkOrder: SObjectDefinition$WorkOrder | null;
  BusinessHours: SObjectDefinition$BusinessHours | null;
  Location: SObjectDefinition$Location | null;
};

type ChildRelationships$WorkOrder = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DigitalSignatures: SObjectDefinition$DigitalSignature;
  Emails: SObjectDefinition$EmailMessage;
  EntityMilestones: SObjectDefinition$EntityMilestone;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  ChildWorkOrders: SObjectDefinition$WorkOrder;
  DescendantWorkOrders: SObjectDefinition$WorkOrder;
  Feeds: SObjectDefinition$WorkOrderFeed;
  Histories: SObjectDefinition$WorkOrderHistory;
  WorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
  Shares: SObjectDefinition$WorkOrderShare;
  WorkPlans: SObjectDefinition$WorkPlan;
  WorkSteps: SObjectDefinition$WorkStep;
};

interface SObjectDefinition$WorkOrder extends SObjectDefinition<'WorkOrder'> {
    Name: 'WorkOrder';
    Fields: Fields$WorkOrder;
    ParentReferences: ParentReferences$WorkOrder;
    ChildRelationships: ChildRelationships$WorkOrder;
  }

type Fields$WorkOrderChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  WorkOrderNumber: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  AccountId: string | null;
  ContactId: string | null;
  CaseId: string | null;
  EntitlementId: string | null;
  ServiceContractId: string | null;
  AssetId: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Description: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Subject: string | null;
  RootWorkOrderId: string | null;
  Status: string | null;
  Priority: string | null;
  Tax: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  Pricebook2Id: string | null;
  ParentWorkOrderId: string | null;
  IsClosed: boolean;
  IsStopped: boolean;
  StopStartDate: DateString | null;
  SlaStartDate: DateString | null;
  SlaExitDate: DateString | null;
  BusinessHoursId: string | null;
  Duration: number | null;
  DurationType: string | null;
  DurationInMinutes: number | null;
  StatusCategory: string | null;
  LocationId: string | null;
};

type ParentReferences$WorkOrderChangeEvent = {
  //
};

type ChildRelationships$WorkOrderChangeEvent = {
  //
};

interface SObjectDefinition$WorkOrderChangeEvent extends SObjectDefinition<'WorkOrderChangeEvent'> {
    Name: 'WorkOrderChangeEvent';
    Fields: Fields$WorkOrderChangeEvent;
    ParentReferences: ParentReferences$WorkOrderChangeEvent;
    ChildRelationships: ChildRelationships$WorkOrderChangeEvent;
  }

type Fields$WorkOrderFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$WorkOrderFeed = {
  //
  Parent: SObjectDefinition$WorkOrder;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$WorkOrderFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$WorkOrderFeed extends SObjectDefinition<'WorkOrderFeed'> {
    Name: 'WorkOrderFeed';
    Fields: Fields$WorkOrderFeed;
    ParentReferences: ParentReferences$WorkOrderFeed;
    ChildRelationships: ChildRelationships$WorkOrderFeed;
  }

type Fields$WorkOrderHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  WorkOrderId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$WorkOrderHistory = {
  //
  WorkOrder: SObjectDefinition$WorkOrder;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkOrderHistory = {
  //
};

interface SObjectDefinition$WorkOrderHistory extends SObjectDefinition<'WorkOrderHistory'> {
    Name: 'WorkOrderHistory';
    Fields: Fields$WorkOrderHistory;
    ParentReferences: ParentReferences$WorkOrderHistory;
    ChildRelationships: ChildRelationships$WorkOrderHistory;
  }

type Fields$WorkOrderLineItem = {
  //
  Id: string;
  IsDeleted: boolean;
  LineItemNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  WorkOrderId: string;
  ParentWorkOrderLineItemId: string | null;
  Product2Id: string | null;
  AssetId: string | null;
  OrderId: string | null;
  RootWorkOrderLineItemId: string | null;
  Description: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Status: string | null;
  PricebookEntryId: string | null;
  Quantity: number | null;
  UnitPrice: number | null;
  Discount: number | null;
  ListPrice: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  Duration: number | null;
  DurationType: string | null;
  DurationInMinutes: number | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Subject: string | null;
  StatusCategory: string | null;
  IsClosed: boolean;
  Priority: string | null;
  ServiceAppointmentCount: number | null;
  LocationId: string | null;
};

type ParentReferences$WorkOrderLineItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkOrder: SObjectDefinition$WorkOrder;
  ParentWorkOrderLineItem: SObjectDefinition$WorkOrderLineItem | null;
  Product2: SObjectDefinition$Product2 | null;
  Asset: SObjectDefinition$Asset | null;
  Order: SObjectDefinition$Order | null;
  RootWorkOrderLineItem: SObjectDefinition$WorkOrderLineItem | null;
  PricebookEntry: SObjectDefinition$PricebookEntry | null;
  Location: SObjectDefinition$Location | null;
};

type ChildRelationships$WorkOrderLineItem = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DigitalSignatures: SObjectDefinition$DigitalSignature;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  LinkedArticles: SObjectDefinition$LinkedArticle;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  ChildWorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
  DescendantWorkOrderLineItems: SObjectDefinition$WorkOrderLineItem;
  Feeds: SObjectDefinition$WorkOrderLineItemFeed;
  Histories: SObjectDefinition$WorkOrderLineItemHistory;
  WorkPlans: SObjectDefinition$WorkPlan;
  WorkSteps: SObjectDefinition$WorkStep;
};

interface SObjectDefinition$WorkOrderLineItem extends SObjectDefinition<'WorkOrderLineItem'> {
    Name: 'WorkOrderLineItem';
    Fields: Fields$WorkOrderLineItem;
    ParentReferences: ParentReferences$WorkOrderLineItem;
    ChildRelationships: ChildRelationships$WorkOrderLineItem;
  }

type Fields$WorkOrderLineItemChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  LineItemNumber: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  WorkOrderId: string | null;
  ParentWorkOrderLineItemId: string | null;
  Product2Id: string | null;
  AssetId: string | null;
  OrderId: string | null;
  RootWorkOrderLineItemId: string | null;
  Description: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Status: string | null;
  PricebookEntryId: string | null;
  Quantity: number | null;
  UnitPrice: number | null;
  Discount: number | null;
  Duration: number | null;
  DurationType: string | null;
  DurationInMinutes: number | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Subject: string | null;
  StatusCategory: string | null;
  IsClosed: boolean;
  Priority: string | null;
  LocationId: string | null;
};

type ParentReferences$WorkOrderLineItemChangeEvent = {
  //
};

type ChildRelationships$WorkOrderLineItemChangeEvent = {
  //
};

interface SObjectDefinition$WorkOrderLineItemChangeEvent extends SObjectDefinition<'WorkOrderLineItemChangeEvent'> {
    Name: 'WorkOrderLineItemChangeEvent';
    Fields: Fields$WorkOrderLineItemChangeEvent;
    ParentReferences: ParentReferences$WorkOrderLineItemChangeEvent;
    ChildRelationships: ChildRelationships$WorkOrderLineItemChangeEvent;
  }

type Fields$WorkOrderLineItemFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$WorkOrderLineItemFeed = {
  //
  Parent: SObjectDefinition$WorkOrderLineItem;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$WorkOrderLineItemFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$WorkOrderLineItemFeed extends SObjectDefinition<'WorkOrderLineItemFeed'> {
    Name: 'WorkOrderLineItemFeed';
    Fields: Fields$WorkOrderLineItemFeed;
    ParentReferences: ParentReferences$WorkOrderLineItemFeed;
    ChildRelationships: ChildRelationships$WorkOrderLineItemFeed;
  }

type Fields$WorkOrderLineItemHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  WorkOrderLineItemId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$WorkOrderLineItemHistory = {
  //
  WorkOrderLineItem: SObjectDefinition$WorkOrderLineItem;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkOrderLineItemHistory = {
  //
};

interface SObjectDefinition$WorkOrderLineItemHistory extends SObjectDefinition<'WorkOrderLineItemHistory'> {
    Name: 'WorkOrderLineItemHistory';
    Fields: Fields$WorkOrderLineItemHistory;
    ParentReferences: ParentReferences$WorkOrderLineItemHistory;
    ChildRelationships: ChildRelationships$WorkOrderLineItemHistory;
  }

type Fields$WorkOrderLineItemStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$WorkOrderLineItemStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkOrderLineItemStatus = {
  //
};

interface SObjectDefinition$WorkOrderLineItemStatus extends SObjectDefinition<'WorkOrderLineItemStatus'> {
    Name: 'WorkOrderLineItemStatus';
    Fields: Fields$WorkOrderLineItemStatus;
    ParentReferences: ParentReferences$WorkOrderLineItemStatus;
    ChildRelationships: ChildRelationships$WorkOrderLineItemStatus;
  }

type Fields$WorkOrderShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkOrderShare = {
  //
  Parent: SObjectDefinition$WorkOrder;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkOrderShare = {
  //
};

interface SObjectDefinition$WorkOrderShare extends SObjectDefinition<'WorkOrderShare'> {
    Name: 'WorkOrderShare';
    Fields: Fields$WorkOrderShare;
    ParentReferences: ParentReferences$WorkOrderShare;
    ChildRelationships: ChildRelationships$WorkOrderShare;
  }

type Fields$WorkOrderStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$WorkOrderStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkOrderStatus = {
  //
};

interface SObjectDefinition$WorkOrderStatus extends SObjectDefinition<'WorkOrderStatus'> {
    Name: 'WorkOrderStatus';
    Fields: Fields$WorkOrderStatus;
    ParentReferences: ParentReferences$WorkOrderStatus;
    ChildRelationships: ChildRelationships$WorkOrderStatus;
  }

type Fields$WorkPlan = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  WorkOrderId: string | null;
  ExecutionOrder: number | null;
  Description: string | null;
  WorkOrderLineItemId: string | null;
};

type ParentReferences$WorkPlan = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkOrder: SObjectDefinition$WorkOrder | null;
  WorkOrderLineItem: SObjectDefinition$WorkOrderLineItem | null;
};

type ChildRelationships$WorkPlan = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$WorkPlanFeed;
  Histories: SObjectDefinition$WorkPlanHistory;
  Shares: SObjectDefinition$WorkPlanShare;
  WorkSteps: SObjectDefinition$WorkStep;
};

interface SObjectDefinition$WorkPlan extends SObjectDefinition<'WorkPlan'> {
    Name: 'WorkPlan';
    Fields: Fields$WorkPlan;
    ParentReferences: ParentReferences$WorkPlan;
    ChildRelationships: ChildRelationships$WorkPlan;
  }

type Fields$WorkPlanFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$WorkPlanFeed = {
  //
  Parent: SObjectDefinition$WorkPlan;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$WorkPlanFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$WorkPlanFeed extends SObjectDefinition<'WorkPlanFeed'> {
    Name: 'WorkPlanFeed';
    Fields: Fields$WorkPlanFeed;
    ParentReferences: ParentReferences$WorkPlanFeed;
    ChildRelationships: ChildRelationships$WorkPlanFeed;
  }

type Fields$WorkPlanHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  WorkPlanId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$WorkPlanHistory = {
  //
  WorkPlan: SObjectDefinition$WorkPlan;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkPlanHistory = {
  //
};

interface SObjectDefinition$WorkPlanHistory extends SObjectDefinition<'WorkPlanHistory'> {
    Name: 'WorkPlanHistory';
    Fields: Fields$WorkPlanHistory;
    ParentReferences: ParentReferences$WorkPlanHistory;
    ChildRelationships: ChildRelationships$WorkPlanHistory;
  }

type Fields$WorkPlanShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkPlanShare = {
  //
  Parent: SObjectDefinition$WorkPlan;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkPlanShare = {
  //
};

interface SObjectDefinition$WorkPlanShare extends SObjectDefinition<'WorkPlanShare'> {
    Name: 'WorkPlanShare';
    Fields: Fields$WorkPlanShare;
    ParentReferences: ParentReferences$WorkPlanShare;
    ChildRelationships: ChildRelationships$WorkPlanShare;
  }

type Fields$WorkPlanTemplate = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsActive: boolean;
  Description: string | null;
  RelativeExecutionOrder: number | null;
};

type ParentReferences$WorkPlanTemplate = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkPlanTemplate = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  WorkStepTemplates: SObjectDefinition$WorkPlanTemplateEntry;
  Shares: SObjectDefinition$WorkPlanTemplateShare;
};

interface SObjectDefinition$WorkPlanTemplate extends SObjectDefinition<'WorkPlanTemplate'> {
    Name: 'WorkPlanTemplate';
    Fields: Fields$WorkPlanTemplate;
    ParentReferences: ParentReferences$WorkPlanTemplate;
    ChildRelationships: ChildRelationships$WorkPlanTemplate;
  }

type Fields$WorkPlanTemplateEntry = {
  //
  Id: string;
  IsDeleted: boolean;
  WorkPlanTemplateEntryNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  WorkPlanTemplateId: string;
  WorkStepTemplateId: string;
  ExecutionOrder: number | null;
};

type ParentReferences$WorkPlanTemplateEntry = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkPlanTemplate: SObjectDefinition$WorkPlanTemplate;
  WorkStepTemplate: SObjectDefinition$WorkStepTemplate;
};

type ChildRelationships$WorkPlanTemplateEntry = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$WorkPlanTemplateEntry extends SObjectDefinition<'WorkPlanTemplateEntry'> {
    Name: 'WorkPlanTemplateEntry';
    Fields: Fields$WorkPlanTemplateEntry;
    ParentReferences: ParentReferences$WorkPlanTemplateEntry;
    ChildRelationships: ChildRelationships$WorkPlanTemplateEntry;
  }

type Fields$WorkPlanTemplateShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkPlanTemplateShare = {
  //
  Parent: SObjectDefinition$WorkPlanTemplate;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkPlanTemplateShare = {
  //
};

interface SObjectDefinition$WorkPlanTemplateShare extends SObjectDefinition<'WorkPlanTemplateShare'> {
    Name: 'WorkPlanTemplateShare';
    Fields: Fields$WorkPlanTemplateShare;
    ParentReferences: ParentReferences$WorkPlanTemplateShare;
    ChildRelationships: ChildRelationships$WorkPlanTemplateShare;
  }

type Fields$WorkStep = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  WorkPlanId: string;
  WorkOrderId: string | null;
  WorkOrderLineItemId: string | null;
  Description: string | null;
  ExecutionOrder: number | null;
  WorkPlanExecutionOrder: number | null;
  StartTime: DateString | null;
  EndTime: DateString | null;
  PausedFlowInterviewId: string | null;
  ActionDefinition: string | null;
  ActionType: string | null;
  Status: string | null;
  StatusCategory: string | null;
};

type ParentReferences$WorkStep = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkPlan: SObjectDefinition$WorkPlan;
  WorkOrder: SObjectDefinition$WorkOrder | null;
  WorkOrderLineItem: SObjectDefinition$WorkOrderLineItem | null;
  PausedFlowInterview: SObjectDefinition$FlowInterview | null;
};

type ChildRelationships$WorkStep = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$WorkStep extends SObjectDefinition<'WorkStep'> {
    Name: 'WorkStep';
    Fields: Fields$WorkStep;
    ParentReferences: ParentReferences$WorkStep;
    ChildRelationships: ChildRelationships$WorkStep;
  }

type Fields$WorkStepStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$WorkStepStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkStepStatus = {
  //
};

interface SObjectDefinition$WorkStepStatus extends SObjectDefinition<'WorkStepStatus'> {
    Name: 'WorkStepStatus';
    Fields: Fields$WorkStepStatus;
    ParentReferences: ParentReferences$WorkStepStatus;
    ChildRelationships: ChildRelationships$WorkStepStatus;
  }

type Fields$WorkStepTemplate = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsActive: boolean;
  Description: string | null;
  ActionDefinition: string | null;
  ActionType: string | null;
};

type ParentReferences$WorkStepTemplate = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkStepTemplate = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  WorkPlanTemplates: SObjectDefinition$WorkPlanTemplateEntry;
  Shares: SObjectDefinition$WorkStepTemplateShare;
};

interface SObjectDefinition$WorkStepTemplate extends SObjectDefinition<'WorkStepTemplate'> {
    Name: 'WorkStepTemplate';
    Fields: Fields$WorkStepTemplate;
    ParentReferences: ParentReferences$WorkStepTemplate;
    ChildRelationships: ChildRelationships$WorkStepTemplate;
  }

type Fields$WorkStepTemplateShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkStepTemplateShare = {
  //
  Parent: SObjectDefinition$WorkStepTemplate;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkStepTemplateShare = {
  //
};

interface SObjectDefinition$WorkStepTemplateShare extends SObjectDefinition<'WorkStepTemplateShare'> {
    Name: 'WorkStepTemplateShare';
    Fields: Fields$WorkStepTemplateShare;
    ParentReferences: ParentReferences$WorkStepTemplateShare;
    ChildRelationships: ChildRelationships$WorkStepTemplateShare;
  }

type Fields$WorkThanks = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  GiverId: string;
  NetworkId: string | null;
  Message: string;
  FeedItemId: string | null;
};

type ParentReferences$WorkThanks = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Giver: SObjectDefinition$User;
  Network: SObjectDefinition$Network | null;
  FeedItem: SObjectDefinition$FeedItem | null;
};

type ChildRelationships$WorkThanks = {
  //
  Badges: SObjectDefinition$WorkBadge;
  Shares: SObjectDefinition$WorkThanksShare;
};

interface SObjectDefinition$WorkThanks extends SObjectDefinition<'WorkThanks'> {
    Name: 'WorkThanks';
    Fields: Fields$WorkThanks;
    ParentReferences: ParentReferences$WorkThanks;
    ChildRelationships: ChildRelationships$WorkThanks;
  }

type Fields$WorkThanksShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkThanksShare = {
  //
  Parent: SObjectDefinition$WorkThanks;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkThanksShare = {
  //
};

interface SObjectDefinition$WorkThanksShare extends SObjectDefinition<'WorkThanksShare'> {
    Name: 'WorkThanksShare';
    Fields: Fields$WorkThanksShare;
    ParentReferences: ParentReferences$WorkThanksShare;
    ChildRelationships: ChildRelationships$WorkThanksShare;
  }

type Fields$et4ae5__AggregateLink__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__Unique_Link_ID__c: string | null;
};

type ParentReferences$et4ae5__AggregateLink__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__AggregateLink__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__AggregateLink__ChangeEvent extends SObjectDefinition<'et4ae5__AggregateLink__ChangeEvent'> {
    Name: 'et4ae5__AggregateLink__ChangeEvent';
    Fields: Fields$et4ae5__AggregateLink__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__AggregateLink__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__AggregateLink__ChangeEvent;
  }

type Fields$et4ae5__AggregateLink__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__AggregateLink__Share = {
  //
  Parent: SObjectDefinition$et4ae5__AggregateLink__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__AggregateLink__Share = {
  //
};

interface SObjectDefinition$et4ae5__AggregateLink__Share extends SObjectDefinition<'et4ae5__AggregateLink__Share'> {
    Name: 'et4ae5__AggregateLink__Share';
    Fields: Fields$et4ae5__AggregateLink__Share;
    ParentReferences: ParentReferences$et4ae5__AggregateLink__Share;
    ChildRelationships: ChildRelationships$et4ae5__AggregateLink__Share;
  }

type Fields$et4ae5__AggregateLink__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  et4ae5__Unique_Link_ID__c: string;
};

type ParentReferences$et4ae5__AggregateLink__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__AggregateLink__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__AggregateLink__Share;
};

interface SObjectDefinition$et4ae5__AggregateLink__c extends SObjectDefinition<'et4ae5__AggregateLink__c'> {
    Name: 'et4ae5__AggregateLink__c';
    Fields: Fields$et4ae5__AggregateLink__c;
    ParentReferences: ParentReferences$et4ae5__AggregateLink__c;
    ChildRelationships: ChildRelationships$et4ae5__AggregateLink__c;
  }

type Fields$et4ae5__Automated_Send__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__Automated_Send__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__Automated_Send__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__Automated_Send__ChangeEvent extends SObjectDefinition<'et4ae5__Automated_Send__ChangeEvent'> {
    Name: 'et4ae5__Automated_Send__ChangeEvent';
    Fields: Fields$et4ae5__Automated_Send__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__Automated_Send__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__Automated_Send__ChangeEvent;
  }

type Fields$et4ae5__Automated_Send__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$et4ae5__Automated_Send__History = {
  //
  Parent: SObjectDefinition$et4ae5__Automated_Send__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Automated_Send__History = {
  //
};

interface SObjectDefinition$et4ae5__Automated_Send__History extends SObjectDefinition<'et4ae5__Automated_Send__History'> {
    Name: 'et4ae5__Automated_Send__History';
    Fields: Fields$et4ae5__Automated_Send__History;
    ParentReferences: ParentReferences$et4ae5__Automated_Send__History;
    ChildRelationships: ChildRelationships$et4ae5__Automated_Send__History;
  }

type Fields$et4ae5__Automated_Send__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__Automated_Send__Share = {
  //
  Parent: SObjectDefinition$et4ae5__Automated_Send__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Automated_Send__Share = {
  //
};

interface SObjectDefinition$et4ae5__Automated_Send__Share extends SObjectDefinition<'et4ae5__Automated_Send__Share'> {
    Name: 'et4ae5__Automated_Send__Share';
    Fields: Fields$et4ae5__Automated_Send__Share;
    ParentReferences: ParentReferences$et4ae5__Automated_Send__Share;
    ChildRelationships: ChildRelationships$et4ae5__Automated_Send__Share;
  }

type Fields$et4ae5__Automated_Send__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__Automated_Send__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Automated_Send__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Histories: SObjectDefinition$et4ae5__Automated_Send__History;
  Shares: SObjectDefinition$et4ae5__Automated_Send__Share;
};

interface SObjectDefinition$et4ae5__Automated_Send__c extends SObjectDefinition<'et4ae5__Automated_Send__c'> {
    Name: 'et4ae5__Automated_Send__c';
    Fields: Fields$et4ae5__Automated_Send__c;
    ParentReferences: ParentReferences$et4ae5__Automated_Send__c;
    ChildRelationships: ChildRelationships$et4ae5__Automated_Send__c;
  }

type Fields$et4ae5__Business_Unit__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__Business_Unit__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__Business_Unit__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__Business_Unit__ChangeEvent extends SObjectDefinition<'et4ae5__Business_Unit__ChangeEvent'> {
    Name: 'et4ae5__Business_Unit__ChangeEvent';
    Fields: Fields$et4ae5__Business_Unit__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__Business_Unit__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__Business_Unit__ChangeEvent;
  }

type Fields$et4ae5__Business_Unit__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__Business_Unit__Share = {
  //
  Parent: SObjectDefinition$et4ae5__Business_Unit__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Business_Unit__Share = {
  //
};

interface SObjectDefinition$et4ae5__Business_Unit__Share extends SObjectDefinition<'et4ae5__Business_Unit__Share'> {
    Name: 'et4ae5__Business_Unit__Share';
    Fields: Fields$et4ae5__Business_Unit__Share;
    ParentReferences: ParentReferences$et4ae5__Business_Unit__Share;
    ChildRelationships: ChildRelationships$et4ae5__Business_Unit__Share;
  }

type Fields$et4ae5__Business_Unit__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__Business_Unit__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Business_Unit__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__Business_Unit__Share;
};

interface SObjectDefinition$et4ae5__Business_Unit__c extends SObjectDefinition<'et4ae5__Business_Unit__c'> {
    Name: 'et4ae5__Business_Unit__c';
    Fields: Fields$et4ae5__Business_Unit__c;
    ParentReferences: ParentReferences$et4ae5__Business_Unit__c;
    ChildRelationships: ChildRelationships$et4ae5__Business_Unit__c;
  }

type Fields$et4ae5__Campaign_Member_Configuration__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__Campaign_Member_Configuration__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__Campaign_Member_Configuration__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__Campaign_Member_Configuration__ChangeEvent extends SObjectDefinition<'et4ae5__Campaign_Member_Configuration__ChangeEvent'> {
    Name: 'et4ae5__Campaign_Member_Configuration__ChangeEvent';
    Fields: Fields$et4ae5__Campaign_Member_Configuration__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__Campaign_Member_Configuration__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__Campaign_Member_Configuration__ChangeEvent;
  }

type Fields$et4ae5__Campaign_Member_Configuration__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__Campaign_Member_Configuration__Share = {
  //
  Parent: SObjectDefinition$et4ae5__Campaign_Member_Configuration__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Campaign_Member_Configuration__Share = {
  //
};

interface SObjectDefinition$et4ae5__Campaign_Member_Configuration__Share extends SObjectDefinition<'et4ae5__Campaign_Member_Configuration__Share'> {
    Name: 'et4ae5__Campaign_Member_Configuration__Share';
    Fields: Fields$et4ae5__Campaign_Member_Configuration__Share;
    ParentReferences: ParentReferences$et4ae5__Campaign_Member_Configuration__Share;
    ChildRelationships: ChildRelationships$et4ae5__Campaign_Member_Configuration__Share;
  }

type Fields$et4ae5__Campaign_Member_Configuration__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__Campaign_Member_Configuration__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Campaign_Member_Configuration__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__Campaign_Member_Configuration__Share;
};

interface SObjectDefinition$et4ae5__Campaign_Member_Configuration__c extends SObjectDefinition<'et4ae5__Campaign_Member_Configuration__c'> {
    Name: 'et4ae5__Campaign_Member_Configuration__c';
    Fields: Fields$et4ae5__Campaign_Member_Configuration__c;
    ParentReferences: ParentReferences$et4ae5__Campaign_Member_Configuration__c;
    ChildRelationships: ChildRelationships$et4ae5__Campaign_Member_Configuration__c;
  }

type Fields$et4ae5__Configuration__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__Configuration__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__Configuration__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__Configuration__ChangeEvent extends SObjectDefinition<'et4ae5__Configuration__ChangeEvent'> {
    Name: 'et4ae5__Configuration__ChangeEvent';
    Fields: Fields$et4ae5__Configuration__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__Configuration__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__Configuration__ChangeEvent;
  }

type Fields$et4ae5__Configuration__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__Configuration__Share = {
  //
  Parent: SObjectDefinition$et4ae5__Configuration__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Configuration__Share = {
  //
};

interface SObjectDefinition$et4ae5__Configuration__Share extends SObjectDefinition<'et4ae5__Configuration__Share'> {
    Name: 'et4ae5__Configuration__Share';
    Fields: Fields$et4ae5__Configuration__Share;
    ParentReferences: ParentReferences$et4ae5__Configuration__Share;
    ChildRelationships: ChildRelationships$et4ae5__Configuration__Share;
  }

type Fields$et4ae5__Configuration__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$et4ae5__Configuration__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Configuration__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__Configuration__Share;
};

interface SObjectDefinition$et4ae5__Configuration__c extends SObjectDefinition<'et4ae5__Configuration__c'> {
    Name: 'et4ae5__Configuration__c';
    Fields: Fields$et4ae5__Configuration__c;
    ParentReferences: ParentReferences$et4ae5__Configuration__c;
    ChildRelationships: ChildRelationships$et4ae5__Configuration__c;
  }

type Fields$et4ae5__Email_Linkage__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__Email_Linkage__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__Email_Linkage__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__Email_Linkage__ChangeEvent extends SObjectDefinition<'et4ae5__Email_Linkage__ChangeEvent'> {
    Name: 'et4ae5__Email_Linkage__ChangeEvent';
    Fields: Fields$et4ae5__Email_Linkage__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__Email_Linkage__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__Email_Linkage__ChangeEvent;
  }

type Fields$et4ae5__Email_Linkage__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__Email_Linkage__Share = {
  //
  Parent: SObjectDefinition$et4ae5__Email_Linkage__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Email_Linkage__Share = {
  //
};

interface SObjectDefinition$et4ae5__Email_Linkage__Share extends SObjectDefinition<'et4ae5__Email_Linkage__Share'> {
    Name: 'et4ae5__Email_Linkage__Share';
    Fields: Fields$et4ae5__Email_Linkage__Share;
    ParentReferences: ParentReferences$et4ae5__Email_Linkage__Share;
    ChildRelationships: ChildRelationships$et4ae5__Email_Linkage__Share;
  }

type Fields$et4ae5__Email_Linkage__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__Email_Linkage__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Email_Linkage__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__Email_Linkage__Share;
};

interface SObjectDefinition$et4ae5__Email_Linkage__c extends SObjectDefinition<'et4ae5__Email_Linkage__c'> {
    Name: 'et4ae5__Email_Linkage__c';
    Fields: Fields$et4ae5__Email_Linkage__c;
    ParentReferences: ParentReferences$et4ae5__Email_Linkage__c;
    ChildRelationships: ChildRelationships$et4ae5__Email_Linkage__c;
  }

type Fields$et4ae5__IndividualEmailResult__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__IndividualEmailResult__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__IndividualEmailResult__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__IndividualEmailResult__ChangeEvent extends SObjectDefinition<'et4ae5__IndividualEmailResult__ChangeEvent'> {
    Name: 'et4ae5__IndividualEmailResult__ChangeEvent';
    Fields: Fields$et4ae5__IndividualEmailResult__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__IndividualEmailResult__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__IndividualEmailResult__ChangeEvent;
  }

type Fields$et4ae5__IndividualEmailResult__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__IndividualEmailResult__Share = {
  //
  Parent: SObjectDefinition$et4ae5__IndividualEmailResult__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__IndividualEmailResult__Share = {
  //
};

interface SObjectDefinition$et4ae5__IndividualEmailResult__Share extends SObjectDefinition<'et4ae5__IndividualEmailResult__Share'> {
    Name: 'et4ae5__IndividualEmailResult__Share';
    Fields: Fields$et4ae5__IndividualEmailResult__Share;
    ParentReferences: ParentReferences$et4ae5__IndividualEmailResult__Share;
    ChildRelationships: ChildRelationships$et4ae5__IndividualEmailResult__Share;
  }

type Fields$et4ae5__IndividualEmailResult__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__IndividualEmailResult__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__IndividualEmailResult__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__IndividualEmailResult__Share;
};

interface SObjectDefinition$et4ae5__IndividualEmailResult__c extends SObjectDefinition<'et4ae5__IndividualEmailResult__c'> {
    Name: 'et4ae5__IndividualEmailResult__c';
    Fields: Fields$et4ae5__IndividualEmailResult__c;
    ParentReferences: ParentReferences$et4ae5__IndividualEmailResult__c;
    ChildRelationships: ChildRelationships$et4ae5__IndividualEmailResult__c;
  }

type Fields$et4ae5__IndividualLink__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__Unique_Link_ID__c: string | null;
};

type ParentReferences$et4ae5__IndividualLink__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__IndividualLink__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__IndividualLink__ChangeEvent extends SObjectDefinition<'et4ae5__IndividualLink__ChangeEvent'> {
    Name: 'et4ae5__IndividualLink__ChangeEvent';
    Fields: Fields$et4ae5__IndividualLink__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__IndividualLink__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__IndividualLink__ChangeEvent;
  }

type Fields$et4ae5__IndividualLink__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__IndividualLink__Share = {
  //
  Parent: SObjectDefinition$et4ae5__IndividualLink__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__IndividualLink__Share = {
  //
};

interface SObjectDefinition$et4ae5__IndividualLink__Share extends SObjectDefinition<'et4ae5__IndividualLink__Share'> {
    Name: 'et4ae5__IndividualLink__Share';
    Fields: Fields$et4ae5__IndividualLink__Share;
    ParentReferences: ParentReferences$et4ae5__IndividualLink__Share;
    ChildRelationships: ChildRelationships$et4ae5__IndividualLink__Share;
  }

type Fields$et4ae5__IndividualLink__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  et4ae5__Unique_Link_ID__c: string;
};

type ParentReferences$et4ae5__IndividualLink__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__IndividualLink__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__IndividualLink__Share;
};

interface SObjectDefinition$et4ae5__IndividualLink__c extends SObjectDefinition<'et4ae5__IndividualLink__c'> {
    Name: 'et4ae5__IndividualLink__c';
    Fields: Fields$et4ae5__IndividualLink__c;
    ParentReferences: ParentReferences$et4ae5__IndividualLink__c;
    ChildRelationships: ChildRelationships$et4ae5__IndividualLink__c;
  }

type Fields$et4ae5__JB_CDC_Event__e = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  et4ae5__ChangeResults__c: string | null;
};

type ParentReferences$et4ae5__JB_CDC_Event__e = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__JB_CDC_Event__e = {
  //
};

interface SObjectDefinition$et4ae5__JB_CDC_Event__e extends SObjectDefinition<'et4ae5__JB_CDC_Event__e'> {
    Name: 'et4ae5__JB_CDC_Event__e';
    Fields: Fields$et4ae5__JB_CDC_Event__e;
    ParentReferences: ParentReferences$et4ae5__JB_CDC_Event__e;
    ChildRelationships: ChildRelationships$et4ae5__JB_CDC_Event__e;
  }

type Fields$et4ae5__JB_Event__e = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  et4ae5__FutureContext__c: string | null;
  et4ae5__IdList__c: string | null;
  et4ae5__Payload__c: string | null;
};

type ParentReferences$et4ae5__JB_Event__e = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__JB_Event__e = {
  //
};

interface SObjectDefinition$et4ae5__JB_Event__e extends SObjectDefinition<'et4ae5__JB_Event__e'> {
    Name: 'et4ae5__JB_Event__e';
    Fields: Fields$et4ae5__JB_Event__e;
    ParentReferences: ParentReferences$et4ae5__JB_Event__e;
    ChildRelationships: ChildRelationships$et4ae5__JB_Event__e;
  }

type Fields$et4ae5__JB_Flow_Event__e = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  et4ae5__FutureContext__c: string | null;
  et4ae5__IdList__c: string | null;
  et4ae5__Payload__c: string | null;
};

type ParentReferences$et4ae5__JB_Flow_Event__e = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__JB_Flow_Event__e = {
  //
};

interface SObjectDefinition$et4ae5__JB_Flow_Event__e extends SObjectDefinition<'et4ae5__JB_Flow_Event__e'> {
    Name: 'et4ae5__JB_Flow_Event__e';
    Fields: Fields$et4ae5__JB_Flow_Event__e;
    ParentReferences: ParentReferences$et4ae5__JB_Flow_Event__e;
    ChildRelationships: ChildRelationships$et4ae5__JB_Flow_Event__e;
  }

type Fields$et4ae5__MC_CDC_Journey__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__MC_CDC_Journey__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__MC_CDC_Journey__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__MC_CDC_Journey__ChangeEvent extends SObjectDefinition<'et4ae5__MC_CDC_Journey__ChangeEvent'> {
    Name: 'et4ae5__MC_CDC_Journey__ChangeEvent';
    Fields: Fields$et4ae5__MC_CDC_Journey__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__MC_CDC_Journey__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__MC_CDC_Journey__ChangeEvent;
  }

type Fields$et4ae5__MC_CDC_Journey__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__MC_CDC_Journey__Share = {
  //
  Parent: SObjectDefinition$et4ae5__MC_CDC_Journey__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__MC_CDC_Journey__Share = {
  //
};

interface SObjectDefinition$et4ae5__MC_CDC_Journey__Share extends SObjectDefinition<'et4ae5__MC_CDC_Journey__Share'> {
    Name: 'et4ae5__MC_CDC_Journey__Share';
    Fields: Fields$et4ae5__MC_CDC_Journey__Share;
    ParentReferences: ParentReferences$et4ae5__MC_CDC_Journey__Share;
    ChildRelationships: ChildRelationships$et4ae5__MC_CDC_Journey__Share;
  }

type Fields$et4ae5__MC_CDC_Journey__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__MC_CDC_Journey__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__MC_CDC_Journey__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__MC_CDC_Journey__Share;
};

interface SObjectDefinition$et4ae5__MC_CDC_Journey__c extends SObjectDefinition<'et4ae5__MC_CDC_Journey__c'> {
    Name: 'et4ae5__MC_CDC_Journey__c';
    Fields: Fields$et4ae5__MC_CDC_Journey__c;
    ParentReferences: ParentReferences$et4ae5__MC_CDC_Journey__c;
    ChildRelationships: ChildRelationships$et4ae5__MC_CDC_Journey__c;
  }

type Fields$et4ae5__SMSDefinition__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__SMSDefinition__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__SMSDefinition__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__SMSDefinition__ChangeEvent extends SObjectDefinition<'et4ae5__SMSDefinition__ChangeEvent'> {
    Name: 'et4ae5__SMSDefinition__ChangeEvent';
    Fields: Fields$et4ae5__SMSDefinition__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__SMSDefinition__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__SMSDefinition__ChangeEvent;
  }

type Fields$et4ae5__SMSDefinition__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$et4ae5__SMSDefinition__History = {
  //
  Parent: SObjectDefinition$et4ae5__SMSDefinition__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__SMSDefinition__History = {
  //
};

interface SObjectDefinition$et4ae5__SMSDefinition__History extends SObjectDefinition<'et4ae5__SMSDefinition__History'> {
    Name: 'et4ae5__SMSDefinition__History';
    Fields: Fields$et4ae5__SMSDefinition__History;
    ParentReferences: ParentReferences$et4ae5__SMSDefinition__History;
    ChildRelationships: ChildRelationships$et4ae5__SMSDefinition__History;
  }

type Fields$et4ae5__SMSDefinition__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__SMSDefinition__Share = {
  //
  Parent: SObjectDefinition$et4ae5__SMSDefinition__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__SMSDefinition__Share = {
  //
};

interface SObjectDefinition$et4ae5__SMSDefinition__Share extends SObjectDefinition<'et4ae5__SMSDefinition__Share'> {
    Name: 'et4ae5__SMSDefinition__Share';
    Fields: Fields$et4ae5__SMSDefinition__Share;
    ParentReferences: ParentReferences$et4ae5__SMSDefinition__Share;
    ChildRelationships: ChildRelationships$et4ae5__SMSDefinition__Share;
  }

type Fields$et4ae5__SMSDefinition__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$et4ae5__SMSDefinition__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__SMSDefinition__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Histories: SObjectDefinition$et4ae5__SMSDefinition__History;
  Shares: SObjectDefinition$et4ae5__SMSDefinition__Share;
};

interface SObjectDefinition$et4ae5__SMSDefinition__c extends SObjectDefinition<'et4ae5__SMSDefinition__c'> {
    Name: 'et4ae5__SMSDefinition__c';
    Fields: Fields$et4ae5__SMSDefinition__c;
    ParentReferences: ParentReferences$et4ae5__SMSDefinition__c;
    ChildRelationships: ChildRelationships$et4ae5__SMSDefinition__c;
  }

type Fields$et4ae5__SMSJunction__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__Campaign__c: string | null;
  et4ae5__SMSDefinition__c: string | null;
};

type ParentReferences$et4ae5__SMSJunction__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__SMSJunction__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__SMSJunction__ChangeEvent extends SObjectDefinition<'et4ae5__SMSJunction__ChangeEvent'> {
    Name: 'et4ae5__SMSJunction__ChangeEvent';
    Fields: Fields$et4ae5__SMSJunction__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__SMSJunction__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__SMSJunction__ChangeEvent;
  }

type Fields$et4ae5__SMSJunction__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  et4ae5__Campaign__c: string;
  et4ae5__SMSDefinition__c: string;
};

type ParentReferences$et4ae5__SMSJunction__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  et4ae5__Campaign__r: SObjectDefinition$Campaign;
  et4ae5__SMSDefinition__r: SObjectDefinition$et4ae5__SMSDefinition__c;
};

type ChildRelationships$et4ae5__SMSJunction__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$et4ae5__SMSJunction__c extends SObjectDefinition<'et4ae5__SMSJunction__c'> {
    Name: 'et4ae5__SMSJunction__c';
    Fields: Fields$et4ae5__SMSJunction__c;
    ParentReferences: ParentReferences$et4ae5__SMSJunction__c;
    ChildRelationships: ChildRelationships$et4ae5__SMSJunction__c;
  }

type Fields$et4ae5__SendDefinition__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__SendDefinition__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__SendDefinition__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__SendDefinition__ChangeEvent extends SObjectDefinition<'et4ae5__SendDefinition__ChangeEvent'> {
    Name: 'et4ae5__SendDefinition__ChangeEvent';
    Fields: Fields$et4ae5__SendDefinition__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__SendDefinition__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__SendDefinition__ChangeEvent;
  }

type Fields$et4ae5__SendDefinition__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$et4ae5__SendDefinition__History = {
  //
  Parent: SObjectDefinition$et4ae5__SendDefinition__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__SendDefinition__History = {
  //
};

interface SObjectDefinition$et4ae5__SendDefinition__History extends SObjectDefinition<'et4ae5__SendDefinition__History'> {
    Name: 'et4ae5__SendDefinition__History';
    Fields: Fields$et4ae5__SendDefinition__History;
    ParentReferences: ParentReferences$et4ae5__SendDefinition__History;
    ChildRelationships: ChildRelationships$et4ae5__SendDefinition__History;
  }

type Fields$et4ae5__SendDefinition__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__SendDefinition__Share = {
  //
  Parent: SObjectDefinition$et4ae5__SendDefinition__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__SendDefinition__Share = {
  //
};

interface SObjectDefinition$et4ae5__SendDefinition__Share extends SObjectDefinition<'et4ae5__SendDefinition__Share'> {
    Name: 'et4ae5__SendDefinition__Share';
    Fields: Fields$et4ae5__SendDefinition__Share;
    ParentReferences: ParentReferences$et4ae5__SendDefinition__Share;
    ChildRelationships: ChildRelationships$et4ae5__SendDefinition__Share;
  }

type Fields$et4ae5__SendDefinition__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$et4ae5__SendDefinition__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__SendDefinition__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Histories: SObjectDefinition$et4ae5__SendDefinition__History;
  Shares: SObjectDefinition$et4ae5__SendDefinition__Share;
};

interface SObjectDefinition$et4ae5__SendDefinition__c extends SObjectDefinition<'et4ae5__SendDefinition__c'> {
    Name: 'et4ae5__SendDefinition__c';
    Fields: Fields$et4ae5__SendDefinition__c;
    ParentReferences: ParentReferences$et4ae5__SendDefinition__c;
    ChildRelationships: ChildRelationships$et4ae5__SendDefinition__c;
  }

type Fields$et4ae5__SendJunction__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__Campaign__c: string | null;
  et4ae5__SendDefinition__c: string | null;
};

type ParentReferences$et4ae5__SendJunction__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__SendJunction__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__SendJunction__ChangeEvent extends SObjectDefinition<'et4ae5__SendJunction__ChangeEvent'> {
    Name: 'et4ae5__SendJunction__ChangeEvent';
    Fields: Fields$et4ae5__SendJunction__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__SendJunction__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__SendJunction__ChangeEvent;
  }

type Fields$et4ae5__SendJunction__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  et4ae5__Campaign__c: string;
  et4ae5__SendDefinition__c: string;
};

type ParentReferences$et4ae5__SendJunction__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  et4ae5__Campaign__r: SObjectDefinition$Campaign;
  et4ae5__SendDefinition__r: SObjectDefinition$et4ae5__SendDefinition__c;
};

type ChildRelationships$et4ae5__SendJunction__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$et4ae5__SendJunction__c extends SObjectDefinition<'et4ae5__SendJunction__c'> {
    Name: 'et4ae5__SendJunction__c';
    Fields: Fields$et4ae5__SendJunction__c;
    ParentReferences: ParentReferences$et4ae5__SendJunction__c;
    ChildRelationships: ChildRelationships$et4ae5__SendJunction__c;
  }

type Fields$et4ae5__SupportRequest__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__Send_Definition__c: string | null;
};

type ParentReferences$et4ae5__SupportRequest__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__SupportRequest__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__SupportRequest__ChangeEvent extends SObjectDefinition<'et4ae5__SupportRequest__ChangeEvent'> {
    Name: 'et4ae5__SupportRequest__ChangeEvent';
    Fields: Fields$et4ae5__SupportRequest__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__SupportRequest__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__SupportRequest__ChangeEvent;
  }

type Fields$et4ae5__SupportRequest__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  et4ae5__Send_Definition__c: string;
};

type ParentReferences$et4ae5__SupportRequest__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  et4ae5__Send_Definition__r: SObjectDefinition$et4ae5__SendDefinition__c;
};

type ChildRelationships$et4ae5__SupportRequest__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$et4ae5__SupportRequest__c extends SObjectDefinition<'et4ae5__SupportRequest__c'> {
    Name: 'et4ae5__SupportRequest__c';
    Fields: Fields$et4ae5__SupportRequest__c;
    ParentReferences: ParentReferences$et4ae5__SupportRequest__c;
    ChildRelationships: ChildRelationships$et4ae5__SupportRequest__c;
  }

type Fields$et4ae5__Triggered_Send_Execution__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__Triggered_Send__c: string | null;
};

type ParentReferences$et4ae5__Triggered_Send_Execution__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__Triggered_Send_Execution__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__Triggered_Send_Execution__ChangeEvent extends SObjectDefinition<'et4ae5__Triggered_Send_Execution__ChangeEvent'> {
    Name: 'et4ae5__Triggered_Send_Execution__ChangeEvent';
    Fields: Fields$et4ae5__Triggered_Send_Execution__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__Triggered_Send_Execution__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__Triggered_Send_Execution__ChangeEvent;
  }

type Fields$et4ae5__Triggered_Send_Execution__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__Triggered_Send_Execution__Share = {
  //
  Parent: SObjectDefinition$et4ae5__Triggered_Send_Execution__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__Triggered_Send_Execution__Share = {
  //
};

interface SObjectDefinition$et4ae5__Triggered_Send_Execution__Share extends SObjectDefinition<'et4ae5__Triggered_Send_Execution__Share'> {
    Name: 'et4ae5__Triggered_Send_Execution__Share';
    Fields: Fields$et4ae5__Triggered_Send_Execution__Share;
    ParentReferences: ParentReferences$et4ae5__Triggered_Send_Execution__Share;
    ChildRelationships: ChildRelationships$et4ae5__Triggered_Send_Execution__Share;
  }

type Fields$et4ae5__Triggered_Send_Execution__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  et4ae5__Triggered_Send__c: string;
};

type ParentReferences$et4ae5__Triggered_Send_Execution__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  et4ae5__Triggered_Send__r: SObjectDefinition$et4ae5__Automated_Send__c;
};

type ChildRelationships$et4ae5__Triggered_Send_Execution__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__Triggered_Send_Execution__Share;
};

interface SObjectDefinition$et4ae5__Triggered_Send_Execution__c extends SObjectDefinition<'et4ae5__Triggered_Send_Execution__c'> {
    Name: 'et4ae5__Triggered_Send_Execution__c';
    Fields: Fields$et4ae5__Triggered_Send_Execution__c;
    ParentReferences: ParentReferences$et4ae5__Triggered_Send_Execution__c;
    ChildRelationships: ChildRelationships$et4ae5__Triggered_Send_Execution__c;
  }

type Fields$et4ae5__UEBU__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  et4ae5__BU__c: string | null;
};

type ParentReferences$et4ae5__UEBU__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__UEBU__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__UEBU__ChangeEvent extends SObjectDefinition<'et4ae5__UEBU__ChangeEvent'> {
    Name: 'et4ae5__UEBU__ChangeEvent';
    Fields: Fields$et4ae5__UEBU__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__UEBU__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__UEBU__ChangeEvent;
  }

type Fields$et4ae5__UEBU__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  et4ae5__BU__c: string;
};

type ParentReferences$et4ae5__UEBU__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  et4ae5__BU__r: SObjectDefinition$et4ae5__Business_Unit__c;
};

type ChildRelationships$et4ae5__UEBU__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$et4ae5__UEBU__c extends SObjectDefinition<'et4ae5__UEBU__c'> {
    Name: 'et4ae5__UEBU__c';
    Fields: Fields$et4ae5__UEBU__c;
    ParentReferences: ParentReferences$et4ae5__UEBU__c;
    ChildRelationships: ChildRelationships$et4ae5__UEBU__c;
  }

type Fields$et4ae5__abTest__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$et4ae5__abTest__ChangeEvent = {
  //
};

type ChildRelationships$et4ae5__abTest__ChangeEvent = {
  //
};

interface SObjectDefinition$et4ae5__abTest__ChangeEvent extends SObjectDefinition<'et4ae5__abTest__ChangeEvent'> {
    Name: 'et4ae5__abTest__ChangeEvent';
    Fields: Fields$et4ae5__abTest__ChangeEvent;
    ParentReferences: ParentReferences$et4ae5__abTest__ChangeEvent;
    ChildRelationships: ChildRelationships$et4ae5__abTest__ChangeEvent;
  }

type Fields$et4ae5__abTest__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$et4ae5__abTest__Share = {
  //
  Parent: SObjectDefinition$et4ae5__abTest__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__abTest__Share = {
  //
};

interface SObjectDefinition$et4ae5__abTest__Share extends SObjectDefinition<'et4ae5__abTest__Share'> {
    Name: 'et4ae5__abTest__Share';
    Fields: Fields$et4ae5__abTest__Share;
    ParentReferences: ParentReferences$et4ae5__abTest__Share;
    ChildRelationships: ChildRelationships$et4ae5__abTest__Share;
  }

type Fields$et4ae5__abTest__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$et4ae5__abTest__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$et4ae5__abTest__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$et4ae5__abTest__Share;
};

interface SObjectDefinition$et4ae5__abTest__c extends SObjectDefinition<'et4ae5__abTest__c'> {
    Name: 'et4ae5__abTest__c';
    Fields: Fields$et4ae5__abTest__c;
    ParentReferences: ParentReferences$et4ae5__abTest__c;
    ChildRelationships: ChildRelationships$et4ae5__abTest__c;
  }

type Fields$omnistudio__CardFrameworkConfiguration__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__DisableCache__c: boolean;
  omnistudio__DisableDatasourceApexRemote__c: boolean;
  omnistudio__DisableDatasourceDataRaptor__c: boolean;
  omnistudio__DisableDatasourceIntegrationProcedures__c: boolean;
  omnistudio__DisableDatasourceQuery__c: boolean;
  omnistudio__DisableDatasourceREST__c: boolean;
  omnistudio__DisableDatasourceSearch__c: boolean;
  omnistudio__DisableStreamingAPI__c: boolean;
  omnistudio__EnableFutureMethod__c: boolean;
};

type ParentReferences$omnistudio__CardFrameworkConfiguration__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__CardFrameworkConfiguration__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__CardFrameworkConfiguration__ChangeEvent extends SObjectDefinition<'omnistudio__CardFrameworkConfiguration__ChangeEvent'> {
    Name: 'omnistudio__CardFrameworkConfiguration__ChangeEvent';
    Fields: Fields$omnistudio__CardFrameworkConfiguration__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__CardFrameworkConfiguration__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__CardFrameworkConfiguration__ChangeEvent;
  }

type Fields$omnistudio__CardFrameworkConfiguration__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__DisableCache__c: boolean;
  omnistudio__DisableDatasourceApexRemote__c: boolean;
  omnistudio__DisableDatasourceDataRaptor__c: boolean;
  omnistudio__DisableDatasourceIntegrationProcedures__c: boolean;
  omnistudio__DisableDatasourceQuery__c: boolean;
  omnistudio__DisableDatasourceREST__c: boolean;
  omnistudio__DisableDatasourceSearch__c: boolean;
  omnistudio__DisableStreamingAPI__c: boolean;
  omnistudio__EnableFutureMethod__c: boolean;
};

type ParentReferences$omnistudio__CardFrameworkConfiguration__c = {
  //
  SetupOwner: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__CardFrameworkConfiguration__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$omnistudio__CardFrameworkConfiguration__c extends SObjectDefinition<'omnistudio__CardFrameworkConfiguration__c'> {
    Name: 'omnistudio__CardFrameworkConfiguration__c';
    Fields: Fields$omnistudio__CardFrameworkConfiguration__c;
    ParentReferences: ParentReferences$omnistudio__CardFrameworkConfiguration__c;
    ChildRelationships: ChildRelationships$omnistudio__CardFrameworkConfiguration__c;
  }

type Fields$omnistudio__DRBatchQueue__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__Action__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRStatus__c: string | null;
};

type ParentReferences$omnistudio__DRBatchQueue__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__DRBatchQueue__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__DRBatchQueue__ChangeEvent extends SObjectDefinition<'omnistudio__DRBatchQueue__ChangeEvent'> {
    Name: 'omnistudio__DRBatchQueue__ChangeEvent';
    Fields: Fields$omnistudio__DRBatchQueue__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__DRBatchQueue__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__DRBatchQueue__ChangeEvent;
  }

type Fields$omnistudio__DRBatchQueue__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__DRBatchQueue__Share = {
  //
  Parent: SObjectDefinition$omnistudio__DRBatchQueue__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__DRBatchQueue__Share = {
  //
};

interface SObjectDefinition$omnistudio__DRBatchQueue__Share extends SObjectDefinition<'omnistudio__DRBatchQueue__Share'> {
    Name: 'omnistudio__DRBatchQueue__Share';
    Fields: Fields$omnistudio__DRBatchQueue__Share;
    ParentReferences: ParentReferences$omnistudio__DRBatchQueue__Share;
    ChildRelationships: ChildRelationships$omnistudio__DRBatchQueue__Share;
  }

type Fields$omnistudio__DRBatchQueue__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__Action__c: string;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRStatus__c: string | null;
};

type ParentReferences$omnistudio__DRBatchQueue__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__DRBatchQueue__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__DRBatchQueue__Share;
};

interface SObjectDefinition$omnistudio__DRBatchQueue__c extends SObjectDefinition<'omnistudio__DRBatchQueue__c'> {
    Name: 'omnistudio__DRBatchQueue__c';
    Fields: Fields$omnistudio__DRBatchQueue__c;
    ParentReferences: ParentReferences$omnistudio__DRBatchQueue__c;
    ChildRelationships: ChildRelationships$omnistudio__DRBatchQueue__c;
  }

type Fields$omnistudio__DRBulkData__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__BulkChunkId__c: string | null;
  omnistudio__BulkChunkStatus__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRError__c: string | null;
  omnistudio__DRProgressData__c: string | null;
  omnistudio__DRStatus__c: string | null;
  omnistudio__Data__c: string | null;
  omnistudio__GlobalKey__c: string | null;
};

type ParentReferences$omnistudio__DRBulkData__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__DRBulkData__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__DRBulkData__ChangeEvent extends SObjectDefinition<'omnistudio__DRBulkData__ChangeEvent'> {
    Name: 'omnistudio__DRBulkData__ChangeEvent';
    Fields: Fields$omnistudio__DRBulkData__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__DRBulkData__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__DRBulkData__ChangeEvent;
  }

type Fields$omnistudio__DRBulkData__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__DRBulkData__Share = {
  //
  Parent: SObjectDefinition$omnistudio__DRBulkData__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__DRBulkData__Share = {
  //
};

interface SObjectDefinition$omnistudio__DRBulkData__Share extends SObjectDefinition<'omnistudio__DRBulkData__Share'> {
    Name: 'omnistudio__DRBulkData__Share';
    Fields: Fields$omnistudio__DRBulkData__Share;
    ParentReferences: ParentReferences$omnistudio__DRBulkData__Share;
    ChildRelationships: ChildRelationships$omnistudio__DRBulkData__Share;
  }

type Fields$omnistudio__DRBulkData__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__BulkChunkId__c: string | null;
  omnistudio__BulkChunkStatus__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRError__c: string | null;
  omnistudio__DRProgressData__c: string | null;
  omnistudio__DRStatus__c: string | null;
  omnistudio__Data__c: string | null;
  omnistudio__GlobalKey__c: string | null;
};

type ParentReferences$omnistudio__DRBulkData__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__DRBulkData__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__DRBulkData__Share;
};

interface SObjectDefinition$omnistudio__DRBulkData__c extends SObjectDefinition<'omnistudio__DRBulkData__c'> {
    Name: 'omnistudio__DRBulkData__c';
    Fields: Fields$omnistudio__DRBulkData__c;
    ParentReferences: ParentReferences$omnistudio__DRBulkData__c;
    ChildRelationships: ChildRelationships$omnistudio__DRBulkData__c;
  }

type Fields$omnistudio__DREncryption__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__PreventQueryOfEncryptedFields__c: boolean;
};

type ParentReferences$omnistudio__DREncryption__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__DREncryption__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__DREncryption__ChangeEvent extends SObjectDefinition<'omnistudio__DREncryption__ChangeEvent'> {
    Name: 'omnistudio__DREncryption__ChangeEvent';
    Fields: Fields$omnistudio__DREncryption__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__DREncryption__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__DREncryption__ChangeEvent;
  }

type Fields$omnistudio__DREncryption__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__PreventQueryOfEncryptedFields__c: boolean;
};

type ParentReferences$omnistudio__DREncryption__c = {
  //
  SetupOwner: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__DREncryption__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$omnistudio__DREncryption__c extends SObjectDefinition<'omnistudio__DREncryption__c'> {
    Name: 'omnistudio__DREncryption__c';
    Fields: Fields$omnistudio__DREncryption__c;
    ParentReferences: ParentReferences$omnistudio__DREncryption__c;
    ChildRelationships: ChildRelationships$omnistudio__DREncryption__c;
  }

type Fields$omnistudio__DRWorker__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__Action__c: string | null;
  omnistudio__ApexJobId__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRObjectName__c: string | null;
  omnistudio__DRStatus__c: string | null;
  omnistudio__StartedAt__c: DateString | null;
};

type ParentReferences$omnistudio__DRWorker__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__DRWorker__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__DRWorker__ChangeEvent extends SObjectDefinition<'omnistudio__DRWorker__ChangeEvent'> {
    Name: 'omnistudio__DRWorker__ChangeEvent';
    Fields: Fields$omnistudio__DRWorker__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__DRWorker__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__DRWorker__ChangeEvent;
  }

type Fields$omnistudio__DRWorker__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__Action__c: string | null;
  omnistudio__ApexJobId__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRObjectName__c: string | null;
  omnistudio__DRStatus__c: string | null;
  omnistudio__StartedAt__c: DateString | null;
};

type ParentReferences$omnistudio__DRWorker__c = {
  //
  SetupOwner: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__DRWorker__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$omnistudio__DRWorker__c extends SObjectDefinition<'omnistudio__DRWorker__c'> {
    Name: 'omnistudio__DRWorker__c';
    Fields: Fields$omnistudio__DRWorker__c;
    ParentReferences: ParentReferences$omnistudio__DRWorker__c;
    ChildRelationships: ChildRelationships$omnistudio__DRWorker__c;
  }

type Fields$omnistudio__Interface_DRGeneric__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__Column001__c: string | null;
  omnistudio__Column002__c: string | null;
  omnistudio__Column003__c: string | null;
  omnistudio__Column004__c: string | null;
  omnistudio__Column005__c: string | null;
  omnistudio__Column006__c: string | null;
  omnistudio__Column007__c: string | null;
  omnistudio__Column008__c: string | null;
  omnistudio__Column009__c: string | null;
  omnistudio__Column010__c: string | null;
  omnistudio__Column011__c: string | null;
  omnistudio__Column012__c: string | null;
  omnistudio__Column013__c: string | null;
  omnistudio__Column014__c: string | null;
  omnistudio__Column015__c: string | null;
  omnistudio__Column016__c: string | null;
  omnistudio__Column017__c: string | null;
  omnistudio__Column018__c: string | null;
  omnistudio__Column019__c: string | null;
  omnistudio__Column020__c: string | null;
  omnistudio__Column021__c: string | null;
  omnistudio__Column022__c: string | null;
  omnistudio__Column023__c: string | null;
  omnistudio__Column024__c: string | null;
  omnistudio__Column025__c: string | null;
  omnistudio__Column026__c: string | null;
  omnistudio__Column027__c: string | null;
  omnistudio__Column028__c: string | null;
  omnistudio__Column029__c: string | null;
  omnistudio__Column030__c: string | null;
  omnistudio__Column031__c: string | null;
  omnistudio__Column032__c: string | null;
  omnistudio__Column033__c: string | null;
  omnistudio__Column034__c: string | null;
  omnistudio__Column035__c: string | null;
  omnistudio__Column036__c: string | null;
  omnistudio__Column037__c: string | null;
  omnistudio__Column038__c: string | null;
  omnistudio__Column039__c: string | null;
  omnistudio__Column040__c: string | null;
  omnistudio__Column041__c: string | null;
  omnistudio__Column042__c: string | null;
  omnistudio__Column043__c: string | null;
  omnistudio__Column044__c: string | null;
  omnistudio__Column045__c: string | null;
  omnistudio__Column046__c: string | null;
  omnistudio__Column047__c: string | null;
  omnistudio__Column048__c: string | null;
  omnistudio__Column049__c: string | null;
  omnistudio__Column050__c: string | null;
  omnistudio__Column051__c: string | null;
  omnistudio__Column052__c: string | null;
  omnistudio__Column053__c: string | null;
  omnistudio__Column054__c: string | null;
  omnistudio__Column055__c: string | null;
  omnistudio__Column056__c: string | null;
  omnistudio__Column057__c: string | null;
  omnistudio__Column058__c: string | null;
  omnistudio__Column059__c: string | null;
  omnistudio__Column060__c: string | null;
  omnistudio__Column061__c: string | null;
  omnistudio__Column062__c: string | null;
  omnistudio__Column063__c: string | null;
  omnistudio__Column064__c: string | null;
  omnistudio__Column065__c: string | null;
  omnistudio__Column066__c: string | null;
  omnistudio__Column067__c: string | null;
  omnistudio__Column068__c: string | null;
  omnistudio__Column069__c: string | null;
  omnistudio__Column070__c: string | null;
  omnistudio__Column071__c: string | null;
  omnistudio__Column072__c: string | null;
  omnistudio__Column073__c: string | null;
  omnistudio__Column074__c: string | null;
  omnistudio__Column075__c: string | null;
  omnistudio__Column076__c: string | null;
  omnistudio__Column077__c: string | null;
  omnistudio__Column078__c: string | null;
  omnistudio__Column079__c: string | null;
  omnistudio__Column080__c: string | null;
  omnistudio__Column081__c: string | null;
  omnistudio__Column082__c: string | null;
  omnistudio__Column083__c: string | null;
  omnistudio__Column084__c: string | null;
  omnistudio__Column085__c: string | null;
  omnistudio__Column086__c: string | null;
  omnistudio__Column087__c: string | null;
  omnistudio__Column088__c: string | null;
  omnistudio__Column089__c: string | null;
  omnistudio__Column090__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRError__c: string | null;
  omnistudio__DRProgressData__c: string | null;
  omnistudio__DRStatus__c: string | null;
  omnistudio__LargeData__c: string | null;
};

type ParentReferences$omnistudio__Interface_DRGeneric__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__Interface_DRGeneric__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__Interface_DRGeneric__ChangeEvent extends SObjectDefinition<'omnistudio__Interface_DRGeneric__ChangeEvent'> {
    Name: 'omnistudio__Interface_DRGeneric__ChangeEvent';
    Fields: Fields$omnistudio__Interface_DRGeneric__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__Interface_DRGeneric__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__Interface_DRGeneric__ChangeEvent;
  }

type Fields$omnistudio__Interface_DRGeneric__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__Interface_DRGeneric__Share = {
  //
  Parent: SObjectDefinition$omnistudio__Interface_DRGeneric__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__Interface_DRGeneric__Share = {
  //
};

interface SObjectDefinition$omnistudio__Interface_DRGeneric__Share extends SObjectDefinition<'omnistudio__Interface_DRGeneric__Share'> {
    Name: 'omnistudio__Interface_DRGeneric__Share';
    Fields: Fields$omnistudio__Interface_DRGeneric__Share;
    ParentReferences: ParentReferences$omnistudio__Interface_DRGeneric__Share;
    ChildRelationships: ChildRelationships$omnistudio__Interface_DRGeneric__Share;
  }

type Fields$omnistudio__Interface_DRGeneric__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__Column001__c: string | null;
  omnistudio__Column002__c: string | null;
  omnistudio__Column003__c: string | null;
  omnistudio__Column004__c: string | null;
  omnistudio__Column005__c: string | null;
  omnistudio__Column006__c: string | null;
  omnistudio__Column007__c: string | null;
  omnistudio__Column008__c: string | null;
  omnistudio__Column009__c: string | null;
  omnistudio__Column010__c: string | null;
  omnistudio__Column011__c: string | null;
  omnistudio__Column012__c: string | null;
  omnistudio__Column013__c: string | null;
  omnistudio__Column014__c: string | null;
  omnistudio__Column015__c: string | null;
  omnistudio__Column016__c: string | null;
  omnistudio__Column017__c: string | null;
  omnistudio__Column018__c: string | null;
  omnistudio__Column019__c: string | null;
  omnistudio__Column020__c: string | null;
  omnistudio__Column021__c: string | null;
  omnistudio__Column022__c: string | null;
  omnistudio__Column023__c: string | null;
  omnistudio__Column024__c: string | null;
  omnistudio__Column025__c: string | null;
  omnistudio__Column026__c: string | null;
  omnistudio__Column027__c: string | null;
  omnistudio__Column028__c: string | null;
  omnistudio__Column029__c: string | null;
  omnistudio__Column030__c: string | null;
  omnistudio__Column031__c: string | null;
  omnistudio__Column032__c: string | null;
  omnistudio__Column033__c: string | null;
  omnistudio__Column034__c: string | null;
  omnistudio__Column035__c: string | null;
  omnistudio__Column036__c: string | null;
  omnistudio__Column037__c: string | null;
  omnistudio__Column038__c: string | null;
  omnistudio__Column039__c: string | null;
  omnistudio__Column040__c: string | null;
  omnistudio__Column041__c: string | null;
  omnistudio__Column042__c: string | null;
  omnistudio__Column043__c: string | null;
  omnistudio__Column044__c: string | null;
  omnistudio__Column045__c: string | null;
  omnistudio__Column046__c: string | null;
  omnistudio__Column047__c: string | null;
  omnistudio__Column048__c: string | null;
  omnistudio__Column049__c: string | null;
  omnistudio__Column050__c: string | null;
  omnistudio__Column051__c: string | null;
  omnistudio__Column052__c: string | null;
  omnistudio__Column053__c: string | null;
  omnistudio__Column054__c: string | null;
  omnistudio__Column055__c: string | null;
  omnistudio__Column056__c: string | null;
  omnistudio__Column057__c: string | null;
  omnistudio__Column058__c: string | null;
  omnistudio__Column059__c: string | null;
  omnistudio__Column060__c: string | null;
  omnistudio__Column061__c: string | null;
  omnistudio__Column062__c: string | null;
  omnistudio__Column063__c: string | null;
  omnistudio__Column064__c: string | null;
  omnistudio__Column065__c: string | null;
  omnistudio__Column066__c: string | null;
  omnistudio__Column067__c: string | null;
  omnistudio__Column068__c: string | null;
  omnistudio__Column069__c: string | null;
  omnistudio__Column070__c: string | null;
  omnistudio__Column071__c: string | null;
  omnistudio__Column072__c: string | null;
  omnistudio__Column073__c: string | null;
  omnistudio__Column074__c: string | null;
  omnistudio__Column075__c: string | null;
  omnistudio__Column076__c: string | null;
  omnistudio__Column077__c: string | null;
  omnistudio__Column078__c: string | null;
  omnistudio__Column079__c: string | null;
  omnistudio__Column080__c: string | null;
  omnistudio__Column081__c: string | null;
  omnistudio__Column082__c: string | null;
  omnistudio__Column083__c: string | null;
  omnistudio__Column084__c: string | null;
  omnistudio__Column085__c: string | null;
  omnistudio__Column086__c: string | null;
  omnistudio__Column087__c: string | null;
  omnistudio__Column088__c: string | null;
  omnistudio__Column089__c: string | null;
  omnistudio__Column090__c: string | null;
  omnistudio__DRBundleName__c: string | null;
  omnistudio__DRError__c: string | null;
  omnistudio__DRProgressData__c: string | null;
  omnistudio__DRStatus__c: string | null;
  omnistudio__LargeData__c: string | null;
};

type ParentReferences$omnistudio__Interface_DRGeneric__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__Interface_DRGeneric__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__Interface_DRGeneric__Share;
};

interface SObjectDefinition$omnistudio__Interface_DRGeneric__c extends SObjectDefinition<'omnistudio__Interface_DRGeneric__c'> {
    Name: 'omnistudio__Interface_DRGeneric__c';
    Fields: Fields$omnistudio__Interface_DRGeneric__c;
    ParentReferences: ParentReferences$omnistudio__Interface_DRGeneric__c;
    ChildRelationships: ChildRelationships$omnistudio__Interface_DRGeneric__c;
  }

type Fields$omnistudio__TestResult__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__Status__c: string | null;
  omnistudio__TestName__c: string | null;
  omnistudio__TestSuiteUniqueKey__c: string | null;
};

type ParentReferences$omnistudio__TestResult__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__TestResult__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__TestResult__ChangeEvent extends SObjectDefinition<'omnistudio__TestResult__ChangeEvent'> {
    Name: 'omnistudio__TestResult__ChangeEvent';
    Fields: Fields$omnistudio__TestResult__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__TestResult__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__TestResult__ChangeEvent;
  }

type Fields$omnistudio__TestResult__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__TestResult__Share = {
  //
  Parent: SObjectDefinition$omnistudio__TestResult__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__TestResult__Share = {
  //
};

interface SObjectDefinition$omnistudio__TestResult__Share extends SObjectDefinition<'omnistudio__TestResult__Share'> {
    Name: 'omnistudio__TestResult__Share';
    Fields: Fields$omnistudio__TestResult__Share;
    ParentReferences: ParentReferences$omnistudio__TestResult__Share;
    ChildRelationships: ChildRelationships$omnistudio__TestResult__Share;
  }

type Fields$omnistudio__TestResult__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__Status__c: string | null;
  omnistudio__TestName__c: string | null;
  omnistudio__TestSuiteUniqueKey__c: string | null;
};

type ParentReferences$omnistudio__TestResult__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__TestResult__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__TestResult__Share;
};

interface SObjectDefinition$omnistudio__TestResult__c extends SObjectDefinition<'omnistudio__TestResult__c'> {
    Name: 'omnistudio__TestResult__c';
    Fields: Fields$omnistudio__TestResult__c;
    ParentReferences: ParentReferences$omnistudio__TestResult__c;
    ChildRelationships: ChildRelationships$omnistudio__TestResult__c;
  }

type Fields$omnistudio__TriggerSetup__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__IsTriggerOn__c: boolean;
};

type ParentReferences$omnistudio__TriggerSetup__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__TriggerSetup__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__TriggerSetup__ChangeEvent extends SObjectDefinition<'omnistudio__TriggerSetup__ChangeEvent'> {
    Name: 'omnistudio__TriggerSetup__ChangeEvent';
    Fields: Fields$omnistudio__TriggerSetup__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__TriggerSetup__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__TriggerSetup__ChangeEvent;
  }

type Fields$omnistudio__TriggerSetup__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__IsTriggerOn__c: boolean;
};

type ParentReferences$omnistudio__TriggerSetup__c = {
  //
  SetupOwner: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__TriggerSetup__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$omnistudio__TriggerSetup__c extends SObjectDefinition<'omnistudio__TriggerSetup__c'> {
    Name: 'omnistudio__TriggerSetup__c';
    Fields: Fields$omnistudio__TriggerSetup__c;
    ParentReferences: ParentReferences$omnistudio__TriggerSetup__c;
    ChildRelationships: ChildRelationships$omnistudio__TriggerSetup__c;
  }

type Fields$omnistudio__UISettings__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__Key__c: string | null;
  omnistudio__Value__c: string | null;
};

type ParentReferences$omnistudio__UISettings__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__UISettings__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__UISettings__ChangeEvent extends SObjectDefinition<'omnistudio__UISettings__ChangeEvent'> {
    Name: 'omnistudio__UISettings__ChangeEvent';
    Fields: Fields$omnistudio__UISettings__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__UISettings__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__UISettings__ChangeEvent;
  }

type Fields$omnistudio__UISettings__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__Key__c: string;
  omnistudio__Value__c: string;
};

type ParentReferences$omnistudio__UISettings__c = {
  //
  SetupOwner: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__UISettings__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$omnistudio__UISettings__c extends SObjectDefinition<'omnistudio__UISettings__c'> {
    Name: 'omnistudio__UISettings__c';
    Fields: Fields$omnistudio__UISettings__c;
    ParentReferences: ParentReferences$omnistudio__UISettings__c;
    ChildRelationships: ChildRelationships$omnistudio__UISettings__c;
  }

type Fields$omnistudio__VlocityDataPack__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__ActivationStatus__c: string | null;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__AsyncApexJobType__c: string | null;
  omnistudio__Description__c: string | null;
  omnistudio__IsLastProcessed__c: boolean;
  omnistudio__LastProcessedBy__c: string | null;
  omnistudio__LastProcessedDateTime__c: DateString | null;
  omnistudio__PrimaryDataPackType__c: string | null;
  omnistudio__Source__c: string | null;
  omnistudio__Status__c: string | null;
  omnistudio__Type__c: string | null;
  omnistudio__Version__c: number | null;
};

type ParentReferences$omnistudio__VlocityDataPack__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__VlocityDataPack__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__VlocityDataPack__ChangeEvent extends SObjectDefinition<'omnistudio__VlocityDataPack__ChangeEvent'> {
    Name: 'omnistudio__VlocityDataPack__ChangeEvent';
    Fields: Fields$omnistudio__VlocityDataPack__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__VlocityDataPack__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__VlocityDataPack__ChangeEvent;
  }

type Fields$omnistudio__VlocityDataPack__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__VlocityDataPack__Share = {
  //
  Parent: SObjectDefinition$omnistudio__VlocityDataPack__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityDataPack__Share = {
  //
};

interface SObjectDefinition$omnistudio__VlocityDataPack__Share extends SObjectDefinition<'omnistudio__VlocityDataPack__Share'> {
    Name: 'omnistudio__VlocityDataPack__Share';
    Fields: Fields$omnistudio__VlocityDataPack__Share;
    ParentReferences: ParentReferences$omnistudio__VlocityDataPack__Share;
    ChildRelationships: ChildRelationships$omnistudio__VlocityDataPack__Share;
  }

type Fields$omnistudio__VlocityDataPack__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__ActivationStatus__c: string | null;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__AsyncApexJobType__c: string | null;
  omnistudio__Description__c: string | null;
  omnistudio__IsLastProcessed__c: boolean;
  omnistudio__LastProcessedBy__c: string | null;
  omnistudio__LastProcessedDateTime__c: DateString | null;
  omnistudio__PrimaryDataPackType__c: string | null;
  omnistudio__Source__c: string | null;
  omnistudio__Status__c: string | null;
  omnistudio__Type__c: string | null;
  omnistudio__Version__c: number | null;
};

type ParentReferences$omnistudio__VlocityDataPack__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  omnistudio__LastProcessedBy__r: SObjectDefinition$User | null;
};

type ChildRelationships$omnistudio__VlocityDataPack__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__VlocityDataPack__Share;
};

interface SObjectDefinition$omnistudio__VlocityDataPack__c extends SObjectDefinition<'omnistudio__VlocityDataPack__c'> {
    Name: 'omnistudio__VlocityDataPack__c';
    Fields: Fields$omnistudio__VlocityDataPack__c;
    ParentReferences: ParentReferences$omnistudio__VlocityDataPack__c;
    ChildRelationships: ChildRelationships$omnistudio__VlocityDataPack__c;
  }

type Fields$omnistudio__VlocityDocuSignTemplate__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__Description__c: string | null;
  omnistudio__DocuSignAccountId__c: string | null;
  omnistudio__RoleTabs__c: string | null;
  omnistudio__RolesData__c: string | null;
  omnistudio__TabsData__c: string | null;
  omnistudio__TemplateIdentifier__c: string | null;
};

type ParentReferences$omnistudio__VlocityDocuSignTemplate__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__VlocityDocuSignTemplate__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__VlocityDocuSignTemplate__ChangeEvent extends SObjectDefinition<'omnistudio__VlocityDocuSignTemplate__ChangeEvent'> {
    Name: 'omnistudio__VlocityDocuSignTemplate__ChangeEvent';
    Fields: Fields$omnistudio__VlocityDocuSignTemplate__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__VlocityDocuSignTemplate__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__VlocityDocuSignTemplate__ChangeEvent;
  }

type Fields$omnistudio__VlocityDocuSignTemplate__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__VlocityDocuSignTemplate__Share = {
  //
  Parent: SObjectDefinition$omnistudio__VlocityDocuSignTemplate__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityDocuSignTemplate__Share = {
  //
};

interface SObjectDefinition$omnistudio__VlocityDocuSignTemplate__Share extends SObjectDefinition<'omnistudio__VlocityDocuSignTemplate__Share'> {
    Name: 'omnistudio__VlocityDocuSignTemplate__Share';
    Fields: Fields$omnistudio__VlocityDocuSignTemplate__Share;
    ParentReferences: ParentReferences$omnistudio__VlocityDocuSignTemplate__Share;
    ChildRelationships: ChildRelationships$omnistudio__VlocityDocuSignTemplate__Share;
  }

type Fields$omnistudio__VlocityDocuSignTemplate__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__Description__c: string | null;
  omnistudio__DocuSignAccountId__c: string | null;
  omnistudio__RoleTabs__c: string | null;
  omnistudio__RolesData__c: string | null;
  omnistudio__TabsData__c: string | null;
  omnistudio__TemplateIdentifier__c: string | null;
};

type ParentReferences$omnistudio__VlocityDocuSignTemplate__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityDocuSignTemplate__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__VlocityDocuSignTemplate__Share;
};

interface SObjectDefinition$omnistudio__VlocityDocuSignTemplate__c extends SObjectDefinition<'omnistudio__VlocityDocuSignTemplate__c'> {
    Name: 'omnistudio__VlocityDocuSignTemplate__c';
    Fields: Fields$omnistudio__VlocityDocuSignTemplate__c;
    ParentReferences: ParentReferences$omnistudio__VlocityDocuSignTemplate__c;
    ChildRelationships: ChildRelationships$omnistudio__VlocityDocuSignTemplate__c;
  }

type Fields$omnistudio__VlocityErrorLogEntry__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__Action__c: string | null;
  omnistudio__ContextId__c: string | null;
  omnistudio__ErrorCode__c: string | null;
  omnistudio__ErrorMessage__c: string | null;
  omnistudio__ErrorTime__c: DateString | null;
  omnistudio__ErrorType__c: string | null;
  omnistudio__InputData__c: string | null;
  omnistudio__ObjectName__c: string | null;
  omnistudio__SourceName__c: string | null;
  omnistudio__SourceType__c: string | null;
  omnistudio__VlocityInteractionToken__c: string | null;
};

type ParentReferences$omnistudio__VlocityErrorLogEntry__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__VlocityErrorLogEntry__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__VlocityErrorLogEntry__ChangeEvent extends SObjectDefinition<'omnistudio__VlocityErrorLogEntry__ChangeEvent'> {
    Name: 'omnistudio__VlocityErrorLogEntry__ChangeEvent';
    Fields: Fields$omnistudio__VlocityErrorLogEntry__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__VlocityErrorLogEntry__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__VlocityErrorLogEntry__ChangeEvent;
  }

type Fields$omnistudio__VlocityErrorLogEntry__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__VlocityErrorLogEntry__Share = {
  //
  Parent: SObjectDefinition$omnistudio__VlocityErrorLogEntry__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityErrorLogEntry__Share = {
  //
};

interface SObjectDefinition$omnistudio__VlocityErrorLogEntry__Share extends SObjectDefinition<'omnistudio__VlocityErrorLogEntry__Share'> {
    Name: 'omnistudio__VlocityErrorLogEntry__Share';
    Fields: Fields$omnistudio__VlocityErrorLogEntry__Share;
    ParentReferences: ParentReferences$omnistudio__VlocityErrorLogEntry__Share;
    ChildRelationships: ChildRelationships$omnistudio__VlocityErrorLogEntry__Share;
  }

type Fields$omnistudio__VlocityErrorLogEntry__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__Action__c: string | null;
  omnistudio__ContextId__c: string | null;
  omnistudio__ErrorCode__c: string | null;
  omnistudio__ErrorMessage__c: string | null;
  omnistudio__ErrorTime__c: DateString | null;
  omnistudio__ErrorType__c: string | null;
  omnistudio__InputData__c: string | null;
  omnistudio__ObjectName__c: string | null;
  omnistudio__SourceName__c: string | null;
  omnistudio__SourceType__c: string | null;
  omnistudio__VlocityInteractionToken__c: string | null;
};

type ParentReferences$omnistudio__VlocityErrorLogEntry__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityErrorLogEntry__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__VlocityErrorLogEntry__Share;
};

interface SObjectDefinition$omnistudio__VlocityErrorLogEntry__c extends SObjectDefinition<'omnistudio__VlocityErrorLogEntry__c'> {
    Name: 'omnistudio__VlocityErrorLogEntry__c';
    Fields: Fields$omnistudio__VlocityErrorLogEntry__c;
    ParentReferences: ParentReferences$omnistudio__VlocityErrorLogEntry__c;
    ChildRelationships: ChildRelationships$omnistudio__VlocityErrorLogEntry__c;
  }

type Fields$omnistudio__VlocityScheduledJob__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__BatchSize__c: number | null;
  omnistudio__DataSourceData__c: string | null;
  omnistudio__DataSourceSpec__c: string | null;
  omnistudio__DataSourceType__c: string | null;
  omnistudio__Description__c: string | null;
  omnistudio__EmailAddressList__c: string | null;
  omnistudio__Frequency__c: string | null;
  omnistudio__GlobalKey__c: string | null;
  omnistudio__IsActive__c: boolean;
  omnistudio__IsInputAsList__c: boolean;
  omnistudio__JobQueue__c: string | null;
  omnistudio__LastRunDateTime__c: DateString | null;
  omnistudio__LastRunErrorMessage__c: string | null;
  omnistudio__NextRunDateTime__c: DateString | null;
  omnistudio__NextScheduledJobId__c: string | null;
  omnistudio__ProcessName__c: string | null;
  omnistudio__ProcessType__c: string | null;
  omnistudio__SendEmailOn__c: string | null;
  omnistudio__WrapUpProcessName__c: string | null;
  omnistudio__WrapUpProcessType__c: string | null;
};

type ParentReferences$omnistudio__VlocityScheduledJob__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__VlocityScheduledJob__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__VlocityScheduledJob__ChangeEvent extends SObjectDefinition<'omnistudio__VlocityScheduledJob__ChangeEvent'> {
    Name: 'omnistudio__VlocityScheduledJob__ChangeEvent';
    Fields: Fields$omnistudio__VlocityScheduledJob__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__VlocityScheduledJob__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__VlocityScheduledJob__ChangeEvent;
  }

type Fields$omnistudio__VlocityScheduledJob__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$omnistudio__VlocityScheduledJob__History = {
  //
  Parent: SObjectDefinition$omnistudio__VlocityScheduledJob__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityScheduledJob__History = {
  //
};

interface SObjectDefinition$omnistudio__VlocityScheduledJob__History extends SObjectDefinition<'omnistudio__VlocityScheduledJob__History'> {
    Name: 'omnistudio__VlocityScheduledJob__History';
    Fields: Fields$omnistudio__VlocityScheduledJob__History;
    ParentReferences: ParentReferences$omnistudio__VlocityScheduledJob__History;
    ChildRelationships: ChildRelationships$omnistudio__VlocityScheduledJob__History;
  }

type Fields$omnistudio__VlocityScheduledJob__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__VlocityScheduledJob__Share = {
  //
  Parent: SObjectDefinition$omnistudio__VlocityScheduledJob__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityScheduledJob__Share = {
  //
};

interface SObjectDefinition$omnistudio__VlocityScheduledJob__Share extends SObjectDefinition<'omnistudio__VlocityScheduledJob__Share'> {
    Name: 'omnistudio__VlocityScheduledJob__Share';
    Fields: Fields$omnistudio__VlocityScheduledJob__Share;
    ParentReferences: ParentReferences$omnistudio__VlocityScheduledJob__Share;
    ChildRelationships: ChildRelationships$omnistudio__VlocityScheduledJob__Share;
  }

type Fields$omnistudio__VlocityScheduledJob__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  omnistudio__AsyncApexJobId__c: string | null;
  omnistudio__BatchSize__c: number | null;
  omnistudio__DataSourceData__c: string | null;
  omnistudio__DataSourceSpec__c: string | null;
  omnistudio__DataSourceType__c: string | null;
  omnistudio__Description__c: string | null;
  omnistudio__EmailAddressList__c: string | null;
  omnistudio__Frequency__c: string | null;
  omnistudio__GlobalKey__c: string | null;
  omnistudio__IsActive__c: boolean;
  omnistudio__IsInputAsList__c: boolean;
  omnistudio__JobQueue__c: string | null;
  omnistudio__LastRunDateTime__c: DateString | null;
  omnistudio__LastRunErrorMessage__c: string | null;
  omnistudio__NextRunDateTime__c: DateString | null;
  omnistudio__NextScheduledJobId__c: string | null;
  omnistudio__ProcessName__c: string | null;
  omnistudio__ProcessType__c: string | null;
  omnistudio__SendEmailOn__c: string | null;
  omnistudio__WrapUpProcessName__c: string | null;
  omnistudio__WrapUpProcessType__c: string | null;
};

type ParentReferences$omnistudio__VlocityScheduledJob__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  omnistudio__NextScheduledJobId__r: SObjectDefinition$omnistudio__VlocityScheduledJob__c | null;
};

type ChildRelationships$omnistudio__VlocityScheduledJob__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Histories: SObjectDefinition$omnistudio__VlocityScheduledJob__History;
  Shares: SObjectDefinition$omnistudio__VlocityScheduledJob__Share;
};

interface SObjectDefinition$omnistudio__VlocityScheduledJob__c extends SObjectDefinition<'omnistudio__VlocityScheduledJob__c'> {
    Name: 'omnistudio__VlocityScheduledJob__c';
    Fields: Fields$omnistudio__VlocityScheduledJob__c;
    ParentReferences: ParentReferences$omnistudio__VlocityScheduledJob__c;
    ChildRelationships: ChildRelationships$omnistudio__VlocityScheduledJob__c;
  }

type Fields$omnistudio__VlocityTrackingEntry__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  omnistudio__ContextId__c: string | null;
  omnistudio__CustomerInteractionToken__c: string | null;
  omnistudio__Data__c: string | null;
  omnistudio__Timestamp__c: DateString | null;
  omnistudio__TrackingService__c: string | null;
  omnistudio__VlocityInteractionToken__c: string | null;
};

type ParentReferences$omnistudio__VlocityTrackingEntry__ChangeEvent = {
  //
};

type ChildRelationships$omnistudio__VlocityTrackingEntry__ChangeEvent = {
  //
};

interface SObjectDefinition$omnistudio__VlocityTrackingEntry__ChangeEvent extends SObjectDefinition<'omnistudio__VlocityTrackingEntry__ChangeEvent'> {
    Name: 'omnistudio__VlocityTrackingEntry__ChangeEvent';
    Fields: Fields$omnistudio__VlocityTrackingEntry__ChangeEvent;
    ParentReferences: ParentReferences$omnistudio__VlocityTrackingEntry__ChangeEvent;
    ChildRelationships: ChildRelationships$omnistudio__VlocityTrackingEntry__ChangeEvent;
  }

type Fields$omnistudio__VlocityTrackingEntry__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$omnistudio__VlocityTrackingEntry__Share = {
  //
  Parent: SObjectDefinition$omnistudio__VlocityTrackingEntry__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityTrackingEntry__Share = {
  //
};

interface SObjectDefinition$omnistudio__VlocityTrackingEntry__Share extends SObjectDefinition<'omnistudio__VlocityTrackingEntry__Share'> {
    Name: 'omnistudio__VlocityTrackingEntry__Share';
    Fields: Fields$omnistudio__VlocityTrackingEntry__Share;
    ParentReferences: ParentReferences$omnistudio__VlocityTrackingEntry__Share;
    ChildRelationships: ChildRelationships$omnistudio__VlocityTrackingEntry__Share;
  }

type Fields$omnistudio__VlocityTrackingEntry__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  omnistudio__ContextId__c: string | null;
  omnistudio__CustomerInteractionToken__c: string | null;
  omnistudio__Data__c: string | null;
  omnistudio__Timestamp__c: DateString | null;
  omnistudio__TrackingService__c: string | null;
  omnistudio__VlocityInteractionToken__c: string | null;
};

type ParentReferences$omnistudio__VlocityTrackingEntry__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$omnistudio__VlocityTrackingEntry__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$omnistudio__VlocityTrackingEntry__Share;
};

interface SObjectDefinition$omnistudio__VlocityTrackingEntry__c extends SObjectDefinition<'omnistudio__VlocityTrackingEntry__c'> {
    Name: 'omnistudio__VlocityTrackingEntry__c';
    Fields: Fields$omnistudio__VlocityTrackingEntry__c;
    ParentReferences: ParentReferences$omnistudio__VlocityTrackingEntry__c;
    ChildRelationships: ChildRelationships$omnistudio__VlocityTrackingEntry__c;
  }

type Fields$outfunds__Disbursement__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  outfunds__Funding_Request__c: string | null;
  outfunds__Amount__c: number | null;
  outfunds__Disbursement_Date__c: DateString | null;
  outfunds__Disbursement_Method__c: string | null;
  outfunds__Scheduled_Date__c: DateString | null;
  outfunds__Status__c: string | null;
  outfunds__Type__c: string | null;
};

type ParentReferences$outfunds__Disbursement__ChangeEvent = {
  //
};

type ChildRelationships$outfunds__Disbursement__ChangeEvent = {
  //
};

interface SObjectDefinition$outfunds__Disbursement__ChangeEvent extends SObjectDefinition<'outfunds__Disbursement__ChangeEvent'> {
    Name: 'outfunds__Disbursement__ChangeEvent';
    Fields: Fields$outfunds__Disbursement__ChangeEvent;
    ParentReferences: ParentReferences$outfunds__Disbursement__ChangeEvent;
    ChildRelationships: ChildRelationships$outfunds__Disbursement__ChangeEvent;
  }

type Fields$outfunds__Disbursement__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$outfunds__Disbursement__Feed = {
  //
  Parent: SObjectDefinition$outfunds__Disbursement__c;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$outfunds__Disbursement__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$outfunds__Disbursement__Feed extends SObjectDefinition<'outfunds__Disbursement__Feed'> {
    Name: 'outfunds__Disbursement__Feed';
    Fields: Fields$outfunds__Disbursement__Feed;
    ParentReferences: ParentReferences$outfunds__Disbursement__Feed;
    ChildRelationships: ChildRelationships$outfunds__Disbursement__Feed;
  }

type Fields$outfunds__Disbursement__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  outfunds__Funding_Request__c: string;
  outfunds__Amount__c: number | null;
  outfunds__Disbursement_Date__c: DateString | null;
  outfunds__Disbursement_Method__c: string | null;
  outfunds__Scheduled_Date__c: DateString | null;
  outfunds__Status__c: string | null;
  outfunds__Type__c: string | null;
};

type ParentReferences$outfunds__Disbursement__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  outfunds__Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c;
};

type ChildRelationships$outfunds__Disbursement__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Feeds: SObjectDefinition$outfunds__Disbursement__Feed;
};

interface SObjectDefinition$outfunds__Disbursement__c extends SObjectDefinition<'outfunds__Disbursement__c'> {
    Name: 'outfunds__Disbursement__c';
    Fields: Fields$outfunds__Disbursement__c;
    ParentReferences: ParentReferences$outfunds__Disbursement__c;
    ChildRelationships: ChildRelationships$outfunds__Disbursement__c;
  }

type Fields$outfunds__Funding_Program__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  outfunds__Description__c: string | null;
  outfunds__End_Date__c: DateString | null;
  outfunds__Funding_Program_Manager__c: string | null;
  outfunds__Parent_Funding_Program__c: string | null;
  outfunds__Start_Date__c: DateString | null;
  outfunds__Status__c: string | null;
  outfunds__Top_Level__c: boolean;
  outfunds__Total_Program_Amount__c: number | null;
  sfdo_grants__ApplicationForm__c: string | null;
  ALTRI_LINK__c: string | null;
  AREA_GEOGRAFICA__c: string | null;
  Budget_Impegnato__c: number | null;
  CLUSTER_COMUNI__c: string | null;
  CONTATTI__c: string | null;
  Cluster_Regioni__c: string | null;
  Cluster_Scuole__c: string | null;
  Componente__c: string | null;
  Criteri_di_Candidatura__c: string | null;
  Criteri_di_accesso__c: string | null;
  Dichiara_inoltre_sotto_la_propria_respon__c: string | null;
  Dichiara_sotto_la_propria_responsabilit__c: string | null;
  Documenti_richiesti__c: string | null;
  External_Key__c: string | null;
  Interventi_Finanziabili__c: string | null;
  Istruzioni_Candidatura__c: string | null;
  Missione__c: string | null;
  Modalita_di_Partecipazione__c: string | null;
  Numero_Documenti_da_Allegare__c: number | null;
  Oggetto_Bando__c: string | null;
  Pacchetto__c: string | null;
  Parent_amount__c: number | null;
  Platea_potenziale__c: number | null;
  SOGGETTI_DESTINATARI__c: string | null;
  Si_impegna_a__c: string | null;
  Tempistiche__c: string | null;
  Testo_Completo_Avviso__c: string | null;
  Tipologia_Misura__c: string | null;
  Oggetto_Avviso__c: string | null;
  Budget_Impegnato_Altro__c: number | null;
  Budget_Impegnato_Sud__c: number | null;
  InPreview__c: boolean;
  Program_Amount_Altro__c: number | null;
  Program_Amount_Sud__c: number | null;
  Quota_Sud__c: number | null;
  Fondi_disponibili_Altro__c: number | null;
  Fondi_disponibili_Sud__c: number | null;
  Fondi_disponibili__c: number | null;
  ID_Template__c: string | null;
  Codice_Controllo__c: string | null;
  Decode_Tipologia_Ente__c: string | null;
  Numero_Progressivo_Candidatura__c: number | null;
  Numero_Progressivo_Finestra__c: number | null;
  Numero_Progressivo__c: number | null;
  Stato_Formula__c: string | null;
  Nome_Progetto__c: string | null;
  Fondi_disponibili_Padre_1__c: number | null;
  Fondi_disponibili_Padre_2__c: number | null;
  Misura_Padre_1__c: string | null;
  Misura_Padre_2__c: string | null;
  Total_Program_Amount_Padre_1__c: number | null;
  Total_Program_Amount_Padre_2__c: number | null;
  Nuovo_Avviso_1_4_3_App_IO__c: boolean;
  Ente_promotore__c: string | null;
  Nuovo_avviso__c: boolean;
  Versione__c: string | null;
  CLUSTER_PROVINCE__c: string | null;
};

type ParentReferences$outfunds__Funding_Program__ChangeEvent = {
  //
};

type ChildRelationships$outfunds__Funding_Program__ChangeEvent = {
  //
};

interface SObjectDefinition$outfunds__Funding_Program__ChangeEvent extends SObjectDefinition<'outfunds__Funding_Program__ChangeEvent'> {
    Name: 'outfunds__Funding_Program__ChangeEvent';
    Fields: Fields$outfunds__Funding_Program__ChangeEvent;
    ParentReferences: ParentReferences$outfunds__Funding_Program__ChangeEvent;
    ChildRelationships: ChildRelationships$outfunds__Funding_Program__ChangeEvent;
  }

type Fields$outfunds__Funding_Program__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$outfunds__Funding_Program__Feed = {
  //
  Parent: SObjectDefinition$outfunds__Funding_Program__c;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$outfunds__Funding_Program__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$outfunds__Funding_Program__Feed extends SObjectDefinition<'outfunds__Funding_Program__Feed'> {
    Name: 'outfunds__Funding_Program__Feed';
    Fields: Fields$outfunds__Funding_Program__Feed;
    ParentReferences: ParentReferences$outfunds__Funding_Program__Feed;
    ChildRelationships: ChildRelationships$outfunds__Funding_Program__Feed;
  }

type Fields$outfunds__Funding_Program__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$outfunds__Funding_Program__History = {
  //
  Parent: SObjectDefinition$outfunds__Funding_Program__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Funding_Program__History = {
  //
};

interface SObjectDefinition$outfunds__Funding_Program__History extends SObjectDefinition<'outfunds__Funding_Program__History'> {
    Name: 'outfunds__Funding_Program__History';
    Fields: Fields$outfunds__Funding_Program__History;
    ParentReferences: ParentReferences$outfunds__Funding_Program__History;
    ChildRelationships: ChildRelationships$outfunds__Funding_Program__History;
  }

type Fields$outfunds__Funding_Program__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$outfunds__Funding_Program__Share = {
  //
  Parent: SObjectDefinition$outfunds__Funding_Program__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Funding_Program__Share = {
  //
};

interface SObjectDefinition$outfunds__Funding_Program__Share extends SObjectDefinition<'outfunds__Funding_Program__Share'> {
    Name: 'outfunds__Funding_Program__Share';
    Fields: Fields$outfunds__Funding_Program__Share;
    ParentReferences: ParentReferences$outfunds__Funding_Program__Share;
    ChildRelationships: ChildRelationships$outfunds__Funding_Program__Share;
  }

type Fields$outfunds__Funding_Program__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  outfunds__Description__c: string | null;
  outfunds__End_Date__c: DateString | null;
  outfunds__Funding_Program_Manager__c: string | null;
  outfunds__Parent_Funding_Program__c: string | null;
  outfunds__Start_Date__c: DateString | null;
  outfunds__Status__c: string | null;
  outfunds__Top_Level__c: boolean;
  outfunds__Total_Program_Amount__c: number | null;
  sfdo_grants__ApplicationForm__c: string | null;
  ALTRI_LINK__c: string | null;
  AREA_GEOGRAFICA__c: string | null;
  Budget_Impegnato__c: number | null;
  CLUSTER_COMUNI__c: string | null;
  CONTATTI__c: string | null;
  Cluster_Regioni__c: string | null;
  Cluster_Scuole__c: string | null;
  Componente__c: string | null;
  Criteri_di_Candidatura__c: string | null;
  Criteri_di_accesso__c: string | null;
  Dichiara_inoltre_sotto_la_propria_respon__c: string | null;
  Dichiara_sotto_la_propria_responsabilit__c: string | null;
  Documenti_richiesti__c: string | null;
  External_Key__c: string | null;
  Interventi_Finanziabili__c: string | null;
  Istruzioni_Candidatura__c: string | null;
  Missione__c: string | null;
  Modalita_di_Partecipazione__c: string | null;
  Numero_Documenti_da_Allegare__c: number | null;
  Oggetto_Bando__c: string | null;
  Pacchetto__c: string | null;
  Parent_amount__c: number | null;
  Platea_potenziale__c: number | null;
  SOGGETTI_DESTINATARI__c: string | null;
  Si_impegna_a__c: string | null;
  Tempistiche__c: string | null;
  Testo_Completo_Avviso__c: string | null;
  Tipologia_Misura__c: string | null;
  Oggetto_Avviso__c: string | null;
  Budget_Impegnato_Altro__c: number | null;
  Budget_Impegnato_Sud__c: number | null;
  InPreview__c: boolean;
  Program_Amount_Altro__c: number | null;
  Program_Amount_Sud__c: number | null;
  Quota_Sud__c: number | null;
  Fondi_disponibili_Altro__c: number | null;
  Fondi_disponibili_Sud__c: number | null;
  Fondi_disponibili__c: number | null;
  ID_Template__c: string | null;
  Codice_Controllo__c: string | null;
  Decode_Tipologia_Ente__c: string | null;
  Numero_Progressivo_Candidatura__c: number | null;
  Numero_Progressivo_Finestra__c: number | null;
  Numero_Progressivo__c: number | null;
  Stato_Formula__c: string | null;
  Nome_Progetto__c: string | null;
  Fondi_disponibili_Padre_1__c: number | null;
  Fondi_disponibili_Padre_2__c: number | null;
  Misura_Padre_1__c: string | null;
  Misura_Padre_2__c: string | null;
  Total_Program_Amount_Padre_1__c: number | null;
  Total_Program_Amount_Padre_2__c: number | null;
  Nuovo_Avviso_1_4_3_App_IO__c: boolean;
  Ente_promotore__c: string | null;
  Nuovo_avviso__c: boolean;
  Versione__c: string | null;
  CLUSTER_PROVINCE__c: string | null;
};

type ParentReferences$outfunds__Funding_Program__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  outfunds__Funding_Program_Manager__r: SObjectDefinition$User | null;
  outfunds__Parent_Funding_Program__r: SObjectDefinition$outfunds__Funding_Program__c | null;
  Misura_Padre_1__r: SObjectDefinition$outfunds__Funding_Program__c | null;
  Misura_Padre_2__r: SObjectDefinition$outfunds__Funding_Program__c | null;
};

type ChildRelationships$outfunds__Funding_Program__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Feeds: SObjectDefinition$outfunds__Funding_Program__Feed;
  Histories: SObjectDefinition$outfunds__Funding_Program__History;
  Shares: SObjectDefinition$outfunds__Funding_Program__Share;
};

interface SObjectDefinition$outfunds__Funding_Program__c extends SObjectDefinition<'outfunds__Funding_Program__c'> {
    Name: 'outfunds__Funding_Program__c';
    Fields: Fields$outfunds__Funding_Program__c;
    ParentReferences: ParentReferences$outfunds__Funding_Program__c;
    ChildRelationships: ChildRelationships$outfunds__Funding_Program__c;
  }

type Fields$outfunds__Funding_Request_Role__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  outfunds__Funding_Request__c: string | null;
  outfunds__Contact__c: string | null;
  outfunds__Role__c: string | null;
  outfunds__Status__c: string | null;
};

type ParentReferences$outfunds__Funding_Request_Role__ChangeEvent = {
  //
};

type ChildRelationships$outfunds__Funding_Request_Role__ChangeEvent = {
  //
};

interface SObjectDefinition$outfunds__Funding_Request_Role__ChangeEvent extends SObjectDefinition<'outfunds__Funding_Request_Role__ChangeEvent'> {
    Name: 'outfunds__Funding_Request_Role__ChangeEvent';
    Fields: Fields$outfunds__Funding_Request_Role__ChangeEvent;
    ParentReferences: ParentReferences$outfunds__Funding_Request_Role__ChangeEvent;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request_Role__ChangeEvent;
  }

type Fields$outfunds__Funding_Request_Role__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  outfunds__Funding_Request__c: string;
  outfunds__Contact__c: string | null;
  outfunds__Role__c: string | null;
  outfunds__Status__c: string | null;
};

type ParentReferences$outfunds__Funding_Request_Role__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  outfunds__Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c;
  outfunds__Contact__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$outfunds__Funding_Request_Role__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$outfunds__Funding_Request_Role__c extends SObjectDefinition<'outfunds__Funding_Request_Role__c'> {
    Name: 'outfunds__Funding_Request_Role__c';
    Fields: Fields$outfunds__Funding_Request_Role__c;
    ParentReferences: ParentReferences$outfunds__Funding_Request_Role__c;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request_Role__c;
  }

type Fields$outfunds__Funding_Request__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  outfunds__Application_Date__c: DateString | null;
  outfunds__Applying_Contact__c: string | null;
  outfunds__Applying_Employee__c: string | null;
  outfunds__Applying_Organization__c: string | null;
  outfunds__Awarded_Amount__c: number | null;
  outfunds__Awarded_Date__c: DateString | null;
  outfunds__Close_Date__c: DateString | null;
  outfunds__Closed_reason__c: string | null;
  outfunds__FundingProgram__c: string | null;
  outfunds__Geographical_Area_Served__c: string | null;
  outfunds__Population_Served__c: string | null;
  outfunds__Recommended_Amount__c: number | null;
  outfunds__Requested_Amount__c: number | null;
  outfunds__Requested_For__c: string | null;
  outfunds__Status__c: string | null;
  outfunds__Term_End_Date__c: DateString | null;
  outfunds__Term_Start_Date__c: DateString | null;
  outfunds__Terms__c: string | null;
  outfunds__Total_Remaining__c: number | null;
  outfunds__Total_Cancelled__c: number | null;
  outfunds__Total_Disbursed__c: number | null;
  outfunds__Unpaid_Disbursements__c: number | null;
  sfdo_grants__Identifier__c: string;
  sfdo_grants__Invited_Date__c: DateString | null;
  Ammissibilit__c: boolean;
  Base64PDF__c: string | null;
  Cluster__c: string | null;
  Codice_CUP__c: string | null;
  Codice_protocollo_candidatura__c: string | null;
  Consenso_Dichiarazioni_Inoltre__c: boolean;
  Consenso_Dichiarazioni__c: boolean;
  DataInserted__c: string | null;
  Data_Finanziamento__c: DateString | null;
  Data_Ricezione_CUP__c: DateString | null;
  Data_invio_candidatura__c: DateString | null;
  ErrorPDF__c: string | null;
  Finestra_Temporale__c: string | null;
  Flag_Dichiarazione_Responsabilita__c: boolean;
  Last_Confirmed_Step__c: number | null;
  Misura__c: string | null;
  Regione__c: string | null;
  Settimana_creazione__c: number | null;
  Step_candidatura__c: string | null;
  Tipologia_Istat__c: string | null;
  id_richiesta_di_candidatura__c: string;
  Contrattualizzazione_Fornitori__c: string | null;
  Data_conclusione__c: DateString | null;
  Descrizione_Progetto__c: string | null;
  Nome_Progetto__c: string | null;
  Stato_Progetto__c: string | null;
  sfdo_grants__CollaboratorGroupId__c: string | null;
  CLP__c: string | null;
  Data_avanzamento_in_Liquidato__c: DateString | null;
  Data_Contrattualizzazione__c: DateString | null;
  IBAN__c: string | null;
  Last_Confirmed_Step_Progetto__c: number | null;
  Stato_contrattualizzazione__c: string | null;
  Data_Inizio_Formazione__c: DateString | null;
  Data_fine_formazione__c: DateString | null;
  Dichiarazione_Conformit_Servizi_Pubblic__c: boolean;
  Dichiarazione_Conformit_Sito_Internet__c: boolean;
  Modalita_Erogazione__c: string | null;
  Numero_Medio_Partecipanti__c: number | null;
  Numero_Ore_Formazione__c: number | null;
  Url_Servizi_Pubblici_Digitali__c: string | null;
  Url_Sito_Internet__c: string | null;
  Numero_task__c: number | null;
  Attivita_completata__c: boolean;
  Cittadino_Attivo_1_Descrizione__c: string | null;
  Cittadino_Attivo_1__c: boolean;
  Cittadino_Attivo_definitiva_Descrizione__c: string | null;
  Cittadino_Attivo_definitiva__c: boolean;
  Cittadino_Attivo_n_Descrizione__c: string | null;
  Cittadino_Attivo_n__c: boolean;
  Cittadino_Informato_1__c: boolean;
  Cittadino_Informato_definitiva__c: boolean;
  Cittadino_Informato_n__c: boolean;
  Codice_Amministrativo__c: string | null;
  Criteri_Conformita_1__c: boolean;
  Criteri_Conformita_definitiva__c: boolean;
  Criteri_Conformita_n__c: boolean;
  Esperienza_Utente_1_Descrizione__c: string | null;
  Esperienza_Utente_1__c: boolean;
  Esperienza_Utente_definitiva_Descrizione__c: string | null;
  Esperienza_Utente_definitiva__c: boolean;
  Esperienza_Utente_n_Descrizione__c: string | null;
  Esperienza_Utente_n__c: boolean;
  Funzionalita_1_Descrizione__c: string | null;
  Funzionalita_1__c: boolean;
  Funzionalita_definitiva_Descrizione__c: string | null;
  Funzionalita_definitiva__c: boolean;
  Funzionalita_n_Descrizione__c: string | null;
  Funzionalita_n__c: boolean;
  ID_Crawler_Job_1__c: string | null;
  ID_Crawler_Job_Nota_1__c: string | null;
  ID_Crawler_Job_Nota_definitiva__c: string | null;
  ID_Crawler_Job_Nota_n__c: string | null;
  ID_Crawler_Job_definitiva__c: string | null;
  ID_Crawler_Job_n__c: string | null;
  ID_Crawler__c: string | null;
  Motivazione_Altro_Revoca_Progetto__c: string | null;
  Motivazione_Revoca_Progetto__c: string | null;
  Normativa_1_Descrizione__c: string | null;
  Normativa_1__c: boolean;
  Normativa_definitiva_Descrizione__c: string | null;
  Normativa_definitiva__c: boolean;
  Normativa_n_Descrizione__c: string | null;
  Normativa_n__c: boolean;
  Pacchetto_1_4_1__c: string | null;
  Prestazioni_1__c: boolean;
  Prestazioni_definitiva__c: boolean;
  Prestazioni_n__c: boolean;
  Progetto_Terminato__c: boolean;
  Raccomandazioni_1_Descrizione__c: string | null;
  Raccomandazioni_1__c: boolean;
  Raccomandazioni_definitiva_Descrizione__c: string | null;
  Raccomandazioni_definitiva__c: boolean;
  Raccomandazioni_n_Descrizione__c: string | null;
  Raccomandazioni_n__c: boolean;
  Sicurezza_1_Descrizione__c: string | null;
  Sicurezza_1__c: boolean;
  Sicurezza_definitiva_Descrizione__c: string | null;
  Sicurezza_definitiva__c: boolean;
  Sicurezza_n_Descrizione__c: string | null;
  Sicurezza_n__c: boolean;
  Status_Generale_1__c: boolean;
  Status_Generale_definitiva__c: boolean;
  Status_Generale_n__c: boolean;
  URL_Scansione_1__c: string | null;
  URL_Scansione_definitiva__c: string | null;
  URL_Scansione_n__c: string | null;
  rinuncia__c: string | null;
  Controllo_URL__c: boolean;
  Data_Job_Crawler_1__c: DateString | null;
  Data_Job_Crawler_definitiva__c: DateString | null;
  Data_Job_Crawler_n__c: DateString | null;
  Cittadino_Attivo_1L__c: string | null;
  Cittadino_Attivo_definitivaL__c: string | null;
  Cittadino_Attivo_nL__c: string | null;
  Cittadino_Informato_1L__c: string | null;
  Cittadino_Informato_definitivaL__c: string | null;
  Cittadino_Informato_nL__c: string | null;
  Criteri_Conformita_1L__c: string | null;
  Criteri_Conformita_definitivaL__c: string | null;
  Criteri_Conformita_nL__c: string | null;
  Da_escludere__c: boolean;
  Esperienza_Utente_1L__c: string | null;
  Esperienza_Utente_definitivaL__c: string | null;
  Esperienza_Utente_nL__c: string | null;
  Funzionalita_1L__c: string | null;
  Funzionalita_definitivaL__c: string | null;
  Funzionalita_nL__c: string | null;
  Normativa_1L__c: string | null;
  Normativa_definitivaL__c: string | null;
  Normativa_nL__c: string | null;
  Prestazioni_1L__c: string | null;
  Prestazioni_definitivaL__c: string | null;
  Prestazioni_nL__c: string | null;
  Raccomandazioni_1L__c: string | null;
  Raccomandazioni_definitivaL__c: string | null;
  Raccomandazioni_nL__c: string | null;
  Sicurezza_1L__c: string | null;
  Sicurezza_definitivaL__c: string | null;
  Sicurezza_nL__c: string | null;
  Status_Generale1_1L__c: string | null;
  Status_Generale_definitivaL__c: string | null;
  Status_Generale_nL__c: string | null;
  Codice_Gestionale__c: string | null;
  Codice_inserito_manualmente__c: boolean;
  Cognome_Responsabile_Conservazione__c: string | null;
  Comune_Responsabile_Conservazione__c: string | null;
  Conflitto_di_interesse__c: boolean;
  DNSH_modificato__c: boolean;
  Data_avanzamento_step_5__c: DateString | null;
  Data_completamento_attivit__c: DateString | null;
  Data_esito_controlli_automatici__c: DateString | null;
  Descrizione_controlli__c: string | null;
  DocJobId__c: string | null;
  Doppio_finanziamento__c: boolean;
  Due_date_controlli__c: DateString | null;
  Esito_Asseveratore__c: string | null;
  Esito_controlli__c: string | null;
  Indirizzo_Responsabile_Conservazione__c: string | null;
  Integrazione_PDND__c: boolean;
  Nome_Responsabile_Conservazione__c: string | null;
  Provincia_Responsabile_Conservazione__c: string | null;
  Tipologia_codice__c: string | null;
  Check_Data_Avanzamento_Step_5__c: boolean;
  Data_avanzamento_in_Liquidazione__c: DateString | null;
  Notifica_Liquidazione__c: boolean;
  Sezione_tesoreria__c: string | null;
  Conto_di_Tesoreria__c: string | null;
  IBAN_Report__c: string | null;
  Causale_Trasferimento__c: string | null;
  Data_Revoca_Decretata__c: DateString | null;
  Revoca__c: string | null;
  Ultimo_Esito_Conformit_Tecnica__c: string | null;
  Codice_misura_SAP__c: string | null;
  Conto_Contabilit_Speciale__c: string | null;
  Data_estrazione__c: DateString | null;
  Sezione_Contabilit_Speciale__c: string | null;
  Approvazione_offerta__c: DateString | null;
  Audit__c: boolean;
  Azioni_effettuate__c: string | null;
  Contratto_elaborato__c: DateString | null;
  Data_fine_Audit__c: DateString | null;
  Data_inizio_Audit__c: DateString | null;
  Delibera_Richiesta_offerta__c: DateString | null;
  Delibera_approvazione_offerta__c: DateString | null;
  Delibera_nomina_RUP_e_DEC__c: DateString | null;
  Dichiarazione_conformita_Migrazione__c: boolean;
  Esito_Audit__c: string | null;
  Motivazione_Audit__c: string | null;
  Predisposizione_progetto__c: DateString | null;
  Realizzero_intervento_senza_fornitori__c: DateString | null;
  Ricezione_offerta__c: DateString | null;
  Scelta_Fornitore__c: DateString | null;
  Stato_Audit__c: string | null;
  Pacchetto_Servizi__c: number | null;
  Criteri_Superati_Crawler_1__c: string | null;
  Criteri_Superati_Crawler_definitiva__c: string | null;
  Criteri_Superati_Crawler_n__c: string | null;
  Data_scansione_fallita__c: DateString | null;
  Riferimento_ReGIS__c: string | null;
  Versione_Crawler_1__c: string | null;
  Versione_Crawler_definitiva__c: string | null;
  Versione_Crawler_n__c: string | null;
  Check_Data_Scansione_Fallita__c: boolean;
  Scansione_fallita__c: string | null;
  Awarded_Amount_Padre_1__c: number | null;
  Awarded_Amount_Padre_2__c: number | null;
  Da_Scansionare_Data_Scansione__c: DateString | null;
  Da_Scansionare__c: boolean;
  Data_Rinuncia__c: DateString | null;
  hasServizi11__c: boolean;
  hasServizi12__c: boolean;
  havePDM__c: boolean;
  Nome_file_1__c: string | null;
  Nome_file_n__c: string | null;
  Report_Crawler_scansione_1_text__c: string | null;
  Report_Crawler_scansione_def_text__c: string | null;
  Report_Crawler_scansione_n_text__c: string | null;
  URL_scansione_fallita__c: string | null;
  Report_Crawler_scansione_1__c: string | null;
  Report_Crawler_scansione_definitiva__c: string | null;
  Report_Crawler_scansione_n__c: string | null;
  Email_progetto_scaduto__c: boolean;
  Last_Confirmed_Step_Modifica_Progetto__c: number | null;
  Stato_modifica__c: string | null;
  Codice_Gestionale_Report__c: string | null;
  Tipologia_documento__c: string | null;
  Ordine__c: number | null;
  TipologiaVerifica__c: string | null;
  Data_convalida_silenzio_assenso__c: DateString | null;
  Tipo_Misura__c: string | null;
  Esito_campagna_duplicato_143_appIO__c: string | null;
  Risposta_PEC_143_appIO__c: boolean;
  Numero_notifiche__c: number | null;
  Data_asseverazione_tecnica__c: DateString | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  OldTemplate12__c: boolean;
  Esito_parziale_su_checklist_CAF__c: boolean;
  Codice_fiscale_firmatario__c: string | null;
  Cognome_firmatario__c: string | null;
  Data_nascita_firmatario__c: DateString | null;
  Dichiarazione_di_conformit__c: boolean;
  Luogo_nascita_firmatario__c: string | null;
  Nome_firmatario__c: string | null;
  isUploading__c: boolean;
  Istanza_modifica_conclusa__c: boolean;
  Blocco_Asseverazione__c: string | null;
  Controlli_form_eseguiti__c: boolean;
  Controlli_preliminari_eseguiti__c: boolean;
  Controlli_sincroni_reportCSP_eseguiti__c: boolean;
  Criticita__c: string | null;
  Data_comunicazione_revoca__c: DateString | null;
  Data_decreto_rinuncia__c: DateString | null;
  Data_ultimo_esito_controlli_formali__c: DateString | null;
  Dich_servizi_modalita_migliorativa__c: boolean;
  Fornitore_individuato__c: boolean;
  Giorni_concessi_proroghe_automatiche__c: number | null;
  Giorni_concessi_proroghe_eccezionali__c: number | null;
  Giorni_concessi_richiesti_via_PEC__c: number | null;
  Giorni_concessi_richiesti_via_piattaform__c: number | null;
  Integrato_CIE_fondo_innovazione__c: boolean;
  Integrato_SPID_fondo_innovazione__c: boolean;
  Motivazione_Revoca__c: string | null;
  Note_blocco_asseverazione__c: string | null;
  Note_criticita__c: string | null;
  PEC__c: string | null;
  Proroghe_richieste_via_PEC__c: number | null;
  Proroghe_richieste_via_piattaforma__c: number | null;
  Protocollo_CIE__c: string | null;
  Protocollo_SPID__c: string | null;
  Ultimo_esito_controlli_formali__c: string | null;
  Totale_giorni_concessi_di_proroghe__c: number | null;
  Totale_proroghe_richieste_dall_ente__c: number | null;
  REGIS_Differenza_Conclusione_Liquidato_y__c: number | null;
  Data_ultimo_esito_asseverazione_tecnica__c: DateString | null;
  Conto_corrente_speciale_pnrr__c: string | null;
  Conto_corrente_tesoreria__c: string | null;
  Flag_checkbox_dich_1_pac__c: boolean;
  Flag_checkbox_dich_2_pac__c: boolean;
  Flag_checkbox_dich_pal__c: boolean;
  Last_choice_step5__c: string | null;
  Data_prevista_completamento_progetto__c: DateString | null;
  Slot_appartenenza__c: string | null;
  Candidatura_Bloccata_Step_3__c: boolean;
  Data_esito_positivo_ass_primo_servizio__c: DateString | null;
  Data_richiesta_ass_primo_servizio__c: DateString | null;
  Gestione_ente_campagna_proroghe__c: string | null;
  PacchettoProgram__c: string | null;
  Scadenza_completamento_attivit__c: DateString | null;
  Scadenza_contrattualizzazione__c: DateString | null;
  Stato_cronoprogramma__c: string | null;
  Tipologia_Ente__c: string | null;
  proroga_ufficio_post_Step_4__c: boolean;
  Servizio_non_erogabile__c: boolean;
  Codice_gestionale_2__c: string | null;
  CL_controllo_formale__c: string | null;
  Numerica_Cluster__c: number | null;
  Rimessione_in_termini__c: boolean;
  CHECK_Data_avanzamento_step_BloccPro__c: boolean;
  mostra_Blocca_Progetto__c: boolean;
  Blocco__c: boolean;
  Data_trasferimento__c: DateString | null;
  DichiarazioneMantenimentoCaricata__c: boolean;
  Vecchio_ente__c: string | null;
  Municipality__c: string | null;
  Numeri_Soggetti_Aggregati_DFP_V3__c: string | null;
  Numero_componenti_informatiche_DFP_V2__c: string | null;
  Sesso_firmatario__c: string | null;
  Belfiore_nascita_firmatario__c: string | null;
  Dichiarazione_Piattaforma_DFP_V3__c: boolean;
  Dichiarazione_Sogg_Aggregatore_DFP_V3__c: boolean;
  lockPosticipaScadenza__c: boolean;
  Rimessione_in_termini_fase_2__c: boolean;
  N_decreto_remissione_in_termini_fase_1__c: string | null;
  N_decreto_remissione_in_termini_fase_2__c: string | null;
};

type ParentReferences$outfunds__Funding_Request__ChangeEvent = {
  //
};

type ChildRelationships$outfunds__Funding_Request__ChangeEvent = {
  //
};

interface SObjectDefinition$outfunds__Funding_Request__ChangeEvent extends SObjectDefinition<'outfunds__Funding_Request__ChangeEvent'> {
    Name: 'outfunds__Funding_Request__ChangeEvent';
    Fields: Fields$outfunds__Funding_Request__ChangeEvent;
    ParentReferences: ParentReferences$outfunds__Funding_Request__ChangeEvent;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request__ChangeEvent;
  }

type Fields$outfunds__Funding_Request__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$outfunds__Funding_Request__Feed = {
  //
  Parent: SObjectDefinition$outfunds__Funding_Request__c;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$outfunds__Funding_Request__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$outfunds__Funding_Request__Feed extends SObjectDefinition<'outfunds__Funding_Request__Feed'> {
    Name: 'outfunds__Funding_Request__Feed';
    Fields: Fields$outfunds__Funding_Request__Feed;
    ParentReferences: ParentReferences$outfunds__Funding_Request__Feed;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request__Feed;
  }

type Fields$outfunds__Funding_Request__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$outfunds__Funding_Request__History = {
  //
  Parent: SObjectDefinition$outfunds__Funding_Request__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Funding_Request__History = {
  //
};

interface SObjectDefinition$outfunds__Funding_Request__History extends SObjectDefinition<'outfunds__Funding_Request__History'> {
    Name: 'outfunds__Funding_Request__History';
    Fields: Fields$outfunds__Funding_Request__History;
    ParentReferences: ParentReferences$outfunds__Funding_Request__History;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request__History;
  }

type Fields$outfunds__Funding_Request__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$outfunds__Funding_Request__Share = {
  //
  Parent: SObjectDefinition$outfunds__Funding_Request__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Funding_Request__Share = {
  //
};

interface SObjectDefinition$outfunds__Funding_Request__Share extends SObjectDefinition<'outfunds__Funding_Request__Share'> {
    Name: 'outfunds__Funding_Request__Share';
    Fields: Fields$outfunds__Funding_Request__Share;
    ParentReferences: ParentReferences$outfunds__Funding_Request__Share;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request__Share;
  }

type Fields$outfunds__Funding_Request__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  outfunds__Application_Date__c: DateString | null;
  outfunds__Applying_Contact__c: string | null;
  outfunds__Applying_Employee__c: string | null;
  outfunds__Applying_Organization__c: string | null;
  outfunds__Awarded_Amount__c: number | null;
  outfunds__Awarded_Date__c: DateString | null;
  outfunds__Close_Date__c: DateString | null;
  outfunds__Closed_reason__c: string | null;
  outfunds__FundingProgram__c: string | null;
  outfunds__Geographical_Area_Served__c: string | null;
  outfunds__Population_Served__c: string | null;
  outfunds__Recommended_Amount__c: number | null;
  outfunds__Requested_Amount__c: number | null;
  outfunds__Requested_For__c: string | null;
  outfunds__Status__c: string | null;
  outfunds__Term_End_Date__c: DateString | null;
  outfunds__Term_Start_Date__c: DateString | null;
  outfunds__Terms__c: string | null;
  outfunds__Total_Remaining__c: number | null;
  outfunds__Total_Cancelled__c: number | null;
  outfunds__Total_Disbursed__c: number | null;
  outfunds__Unpaid_Disbursements__c: number | null;
  sfdo_grants__Identifier__c: string;
  sfdo_grants__Invited_Date__c: DateString | null;
  Ammissibilit__c: boolean;
  Base64PDF__c: string | null;
  Cluster__c: string | null;
  Codice_CUP__c: string | null;
  Codice_protocollo_candidatura__c: string | null;
  Consenso_Dichiarazioni_Inoltre__c: boolean;
  Consenso_Dichiarazioni__c: boolean;
  DataInserted__c: string | null;
  Data_Finanziamento__c: DateString | null;
  Data_Ricezione_CUP__c: DateString | null;
  Data_invio_candidatura__c: DateString | null;
  ErrorPDF__c: string | null;
  Finestra_Temporale__c: string | null;
  Flag_Dichiarazione_Responsabilita__c: boolean;
  Last_Confirmed_Step__c: number | null;
  Misura__c: string | null;
  Regione__c: string | null;
  Settimana_creazione__c: number | null;
  Step_candidatura__c: string | null;
  Tipologia_Istat__c: string | null;
  id_richiesta_di_candidatura__c: string;
  Contrattualizzazione_Fornitori__c: string | null;
  Data_conclusione__c: DateString | null;
  Descrizione_Progetto__c: string | null;
  Nome_Progetto__c: string | null;
  Stato_Progetto__c: string | null;
  sfdo_grants__CollaboratorGroupId__c: string | null;
  CLP__c: string | null;
  Data_avanzamento_in_Liquidato__c: DateString | null;
  Data_Contrattualizzazione__c: DateString | null;
  IBAN__c: string | null;
  Last_Confirmed_Step_Progetto__c: number | null;
  Stato_contrattualizzazione__c: string | null;
  Data_Inizio_Formazione__c: DateString | null;
  Data_fine_formazione__c: DateString | null;
  Dichiarazione_Conformit_Servizi_Pubblic__c: boolean;
  Dichiarazione_Conformit_Sito_Internet__c: boolean;
  Modalita_Erogazione__c: string | null;
  Numero_Medio_Partecipanti__c: number | null;
  Numero_Ore_Formazione__c: number | null;
  Url_Servizi_Pubblici_Digitali__c: string | null;
  Url_Sito_Internet__c: string | null;
  Numero_task__c: number | null;
  Attivita_completata__c: boolean;
  Cittadino_Attivo_1_Descrizione__c: string | null;
  Cittadino_Attivo_1__c: boolean;
  Cittadino_Attivo_definitiva_Descrizione__c: string | null;
  Cittadino_Attivo_definitiva__c: boolean;
  Cittadino_Attivo_n_Descrizione__c: string | null;
  Cittadino_Attivo_n__c: boolean;
  Cittadino_Informato_1__c: boolean;
  Cittadino_Informato_definitiva__c: boolean;
  Cittadino_Informato_n__c: boolean;
  Codice_Amministrativo__c: string | null;
  Criteri_Conformita_1__c: boolean;
  Criteri_Conformita_definitiva__c: boolean;
  Criteri_Conformita_n__c: boolean;
  Esperienza_Utente_1_Descrizione__c: string | null;
  Esperienza_Utente_1__c: boolean;
  Esperienza_Utente_definitiva_Descrizione__c: string | null;
  Esperienza_Utente_definitiva__c: boolean;
  Esperienza_Utente_n_Descrizione__c: string | null;
  Esperienza_Utente_n__c: boolean;
  Funzionalita_1_Descrizione__c: string | null;
  Funzionalita_1__c: boolean;
  Funzionalita_definitiva_Descrizione__c: string | null;
  Funzionalita_definitiva__c: boolean;
  Funzionalita_n_Descrizione__c: string | null;
  Funzionalita_n__c: boolean;
  ID_Crawler_Job_1__c: string | null;
  ID_Crawler_Job_Nota_1__c: string | null;
  ID_Crawler_Job_Nota_definitiva__c: string | null;
  ID_Crawler_Job_Nota_n__c: string | null;
  ID_Crawler_Job_definitiva__c: string | null;
  ID_Crawler_Job_n__c: string | null;
  ID_Crawler__c: string | null;
  Motivazione_Altro_Revoca_Progetto__c: string | null;
  Motivazione_Revoca_Progetto__c: string | null;
  Normativa_1_Descrizione__c: string | null;
  Normativa_1__c: boolean;
  Normativa_definitiva_Descrizione__c: string | null;
  Normativa_definitiva__c: boolean;
  Normativa_n_Descrizione__c: string | null;
  Normativa_n__c: boolean;
  Pacchetto_1_4_1__c: string | null;
  Prestazioni_1__c: boolean;
  Prestazioni_definitiva__c: boolean;
  Prestazioni_n__c: boolean;
  Progetto_Terminato__c: boolean;
  Raccomandazioni_1_Descrizione__c: string | null;
  Raccomandazioni_1__c: boolean;
  Raccomandazioni_definitiva_Descrizione__c: string | null;
  Raccomandazioni_definitiva__c: boolean;
  Raccomandazioni_n_Descrizione__c: string | null;
  Raccomandazioni_n__c: boolean;
  Sicurezza_1_Descrizione__c: string | null;
  Sicurezza_1__c: boolean;
  Sicurezza_definitiva_Descrizione__c: string | null;
  Sicurezza_definitiva__c: boolean;
  Sicurezza_n_Descrizione__c: string | null;
  Sicurezza_n__c: boolean;
  Status_Generale_1__c: boolean;
  Status_Generale_definitiva__c: boolean;
  Status_Generale_n__c: boolean;
  URL_Scansione_1__c: string | null;
  URL_Scansione_definitiva__c: string | null;
  URL_Scansione_n__c: string | null;
  rinuncia__c: string | null;
  Controllo_URL__c: boolean;
  Data_Job_Crawler_1__c: DateString | null;
  Data_Job_Crawler_definitiva__c: DateString | null;
  Data_Job_Crawler_n__c: DateString | null;
  Cittadino_Attivo_1L__c: string | null;
  Cittadino_Attivo_definitivaL__c: string | null;
  Cittadino_Attivo_nL__c: string | null;
  Cittadino_Informato_1L__c: string | null;
  Cittadino_Informato_definitivaL__c: string | null;
  Cittadino_Informato_nL__c: string | null;
  Criteri_Conformita_1L__c: string | null;
  Criteri_Conformita_definitivaL__c: string | null;
  Criteri_Conformita_nL__c: string | null;
  Da_escludere__c: boolean;
  Esperienza_Utente_1L__c: string | null;
  Esperienza_Utente_definitivaL__c: string | null;
  Esperienza_Utente_nL__c: string | null;
  Funzionalita_1L__c: string | null;
  Funzionalita_definitivaL__c: string | null;
  Funzionalita_nL__c: string | null;
  Normativa_1L__c: string | null;
  Normativa_definitivaL__c: string | null;
  Normativa_nL__c: string | null;
  Prestazioni_1L__c: string | null;
  Prestazioni_definitivaL__c: string | null;
  Prestazioni_nL__c: string | null;
  Raccomandazioni_1L__c: string | null;
  Raccomandazioni_definitivaL__c: string | null;
  Raccomandazioni_nL__c: string | null;
  Sicurezza_1L__c: string | null;
  Sicurezza_definitivaL__c: string | null;
  Sicurezza_nL__c: string | null;
  Status_Generale1_1L__c: string | null;
  Status_Generale_definitivaL__c: string | null;
  Status_Generale_nL__c: string | null;
  Codice_Gestionale__c: string | null;
  Codice_inserito_manualmente__c: boolean;
  Cognome_Responsabile_Conservazione__c: string | null;
  Comune_Responsabile_Conservazione__c: string | null;
  Conflitto_di_interesse__c: boolean;
  DNSH_modificato__c: boolean;
  Data_avanzamento_step_5__c: DateString | null;
  Data_completamento_attivit__c: DateString | null;
  Data_esito_controlli_automatici__c: DateString | null;
  Descrizione_controlli__c: string | null;
  DocJobId__c: string | null;
  Doppio_finanziamento__c: boolean;
  Due_date_controlli__c: DateString | null;
  Esito_Asseveratore__c: string | null;
  Esito_controlli__c: string | null;
  Indirizzo_Responsabile_Conservazione__c: string | null;
  Integrazione_PDND__c: boolean;
  Nome_Responsabile_Conservazione__c: string | null;
  Provincia_Responsabile_Conservazione__c: string | null;
  Tipologia_codice__c: string | null;
  Check_Data_Avanzamento_Step_5__c: boolean;
  Data_avanzamento_in_Liquidazione__c: DateString | null;
  Notifica_Liquidazione__c: boolean;
  Sezione_tesoreria__c: string | null;
  Conto_di_Tesoreria__c: string | null;
  IBAN_Report__c: string | null;
  Causale_Trasferimento__c: string | null;
  Data_Revoca_Decretata__c: DateString | null;
  Revoca__c: string | null;
  Ultimo_Esito_Conformit_Tecnica__c: string | null;
  Codice_misura_SAP__c: string | null;
  Conto_Contabilit_Speciale__c: string | null;
  Data_estrazione__c: DateString | null;
  Sezione_Contabilit_Speciale__c: string | null;
  Approvazione_offerta__c: DateString | null;
  Audit__c: boolean;
  Azioni_effettuate__c: string | null;
  Contratto_elaborato__c: DateString | null;
  Data_fine_Audit__c: DateString | null;
  Data_inizio_Audit__c: DateString | null;
  Delibera_Richiesta_offerta__c: DateString | null;
  Delibera_approvazione_offerta__c: DateString | null;
  Delibera_nomina_RUP_e_DEC__c: DateString | null;
  Dichiarazione_conformita_Migrazione__c: boolean;
  Esito_Audit__c: string | null;
  Motivazione_Audit__c: string | null;
  Predisposizione_progetto__c: DateString | null;
  Realizzero_intervento_senza_fornitori__c: DateString | null;
  Ricezione_offerta__c: DateString | null;
  Scelta_Fornitore__c: DateString | null;
  Stato_Audit__c: string | null;
  Pacchetto_Servizi__c: number | null;
  Criteri_Superati_Crawler_1__c: string | null;
  Criteri_Superati_Crawler_definitiva__c: string | null;
  Criteri_Superati_Crawler_n__c: string | null;
  Data_scansione_fallita__c: DateString | null;
  Riferimento_ReGIS__c: string | null;
  Versione_Crawler_1__c: string | null;
  Versione_Crawler_definitiva__c: string | null;
  Versione_Crawler_n__c: string | null;
  Check_Data_Scansione_Fallita__c: boolean;
  Scansione_fallita__c: string | null;
  Awarded_Amount_Padre_1__c: number | null;
  Awarded_Amount_Padre_2__c: number | null;
  Da_Scansionare_Data_Scansione__c: DateString | null;
  Da_Scansionare__c: boolean;
  Data_Rinuncia__c: DateString | null;
  hasServizi11__c: boolean;
  hasServizi12__c: boolean;
  havePDM__c: boolean;
  Nome_file_1__c: string | null;
  Nome_file_n__c: string | null;
  Report_Crawler_scansione_1_text__c: string | null;
  Report_Crawler_scansione_def_text__c: string | null;
  Report_Crawler_scansione_n_text__c: string | null;
  URL_scansione_fallita__c: string | null;
  Report_Crawler_scansione_1__c: string | null;
  Report_Crawler_scansione_definitiva__c: string | null;
  Report_Crawler_scansione_n__c: string | null;
  Email_progetto_scaduto__c: boolean;
  Last_Confirmed_Step_Modifica_Progetto__c: number | null;
  Stato_modifica__c: string | null;
  Codice_Gestionale_Report__c: string | null;
  Tipologia_documento__c: string | null;
  Ordine__c: number | null;
  TipologiaVerifica__c: string | null;
  Data_convalida_silenzio_assenso__c: DateString | null;
  Tipo_Misura__c: string | null;
  Esito_campagna_duplicato_143_appIO__c: string | null;
  Risposta_PEC_143_appIO__c: boolean;
  Numero_notifiche__c: number | null;
  Data_asseverazione_tecnica__c: DateString | null;
  Numero_Richiesta_di_Pagamento__c: string | null;
  OldTemplate12__c: boolean;
  Esito_parziale_su_checklist_CAF__c: boolean;
  Codice_fiscale_firmatario__c: string | null;
  Cognome_firmatario__c: string | null;
  Data_nascita_firmatario__c: DateString | null;
  Dichiarazione_di_conformit__c: boolean;
  Luogo_nascita_firmatario__c: string | null;
  Nome_firmatario__c: string | null;
  isUploading__c: boolean;
  Istanza_modifica_conclusa__c: boolean;
  Blocco_Asseverazione__c: string | null;
  Controlli_form_eseguiti__c: boolean;
  Controlli_preliminari_eseguiti__c: boolean;
  Controlli_sincroni_reportCSP_eseguiti__c: boolean;
  Criticita__c: string | null;
  Data_comunicazione_revoca__c: DateString | null;
  Data_decreto_rinuncia__c: DateString | null;
  Data_ultimo_esito_controlli_formali__c: DateString | null;
  Dich_servizi_modalita_migliorativa__c: boolean;
  Fornitore_individuato__c: boolean;
  Giorni_concessi_proroghe_automatiche__c: number | null;
  Giorni_concessi_proroghe_eccezionali__c: number | null;
  Giorni_concessi_richiesti_via_PEC__c: number | null;
  Giorni_concessi_richiesti_via_piattaform__c: number | null;
  Integrato_CIE_fondo_innovazione__c: boolean;
  Integrato_SPID_fondo_innovazione__c: boolean;
  Motivazione_Revoca__c: string | null;
  Note_blocco_asseverazione__c: string | null;
  Note_criticita__c: string | null;
  PEC__c: string | null;
  Proroghe_richieste_via_PEC__c: number | null;
  Proroghe_richieste_via_piattaforma__c: number | null;
  Protocollo_CIE__c: string | null;
  Protocollo_SPID__c: string | null;
  Ultimo_esito_controlli_formali__c: string | null;
  Totale_giorni_concessi_di_proroghe__c: number | null;
  Totale_proroghe_richieste_dall_ente__c: number | null;
  REGIS_Differenza_Conclusione_Liquidato_y__c: number | null;
  Data_ultimo_esito_asseverazione_tecnica__c: DateString | null;
  Conto_corrente_speciale_pnrr__c: string | null;
  Conto_corrente_tesoreria__c: string | null;
  Flag_checkbox_dich_1_pac__c: boolean;
  Flag_checkbox_dich_2_pac__c: boolean;
  Flag_checkbox_dich_pal__c: boolean;
  Last_choice_step5__c: string | null;
  Data_prevista_completamento_progetto__c: DateString | null;
  Slot_appartenenza__c: string | null;
  Candidatura_Bloccata_Step_3__c: boolean;
  Data_esito_positivo_ass_primo_servizio__c: DateString | null;
  Data_richiesta_ass_primo_servizio__c: DateString | null;
  Gestione_ente_campagna_proroghe__c: string | null;
  PacchettoProgram__c: string | null;
  Scadenza_completamento_attivit__c: DateString | null;
  Scadenza_contrattualizzazione__c: DateString | null;
  Stato_cronoprogramma__c: string | null;
  Tipologia_Ente__c: string | null;
  proroga_ufficio_post_Step_4__c: boolean;
  Servizio_non_erogabile__c: boolean;
  Codice_gestionale_2__c: string | null;
  CL_controllo_formale__c: string | null;
  Numerica_Cluster__c: number | null;
  Rimessione_in_termini__c: boolean;
  CHECK_Data_avanzamento_step_BloccPro__c: boolean;
  mostra_Blocca_Progetto__c: boolean;
  Blocco__c: boolean;
  Data_trasferimento__c: DateString | null;
  DichiarazioneMantenimentoCaricata__c: boolean;
  Vecchio_ente__c: string | null;
  Municipality__c: string | null;
  Numeri_Soggetti_Aggregati_DFP_V3__c: string | null;
  Numero_componenti_informatiche_DFP_V2__c: string | null;
  Sesso_firmatario__c: string | null;
  Belfiore_nascita_firmatario__c: string | null;
  Dichiarazione_Piattaforma_DFP_V3__c: boolean;
  Dichiarazione_Sogg_Aggregatore_DFP_V3__c: boolean;
  lockPosticipaScadenza__c: boolean;
  Rimessione_in_termini_fase_2__c: boolean;
  N_decreto_remissione_in_termini_fase_1__c: string | null;
  N_decreto_remissione_in_termini_fase_2__c: string | null;
};

type ParentReferences$outfunds__Funding_Request__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  outfunds__Applying_Contact__r: SObjectDefinition$Contact | null;
  outfunds__Applying_Employee__r: SObjectDefinition$User | null;
  outfunds__Applying_Organization__r: SObjectDefinition$Account | null;
  outfunds__FundingProgram__r: SObjectDefinition$outfunds__Funding_Program__c | null;
  Cluster__r: SObjectDefinition$Cluster__c | null;
  Finestra_Temporale__r: SObjectDefinition$FinestraTemporale__c | null;
  Vecchio_ente__r: SObjectDefinition$Account | null;
  Municipality__r: SObjectDefinition$sis_Municipality__c | null;
};

type ChildRelationships$outfunds__Funding_Request__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Feeds: SObjectDefinition$outfunds__Funding_Request__Feed;
  Histories: SObjectDefinition$outfunds__Funding_Request__History;
  Shares: SObjectDefinition$outfunds__Funding_Request__Share;
};

interface SObjectDefinition$outfunds__Funding_Request__c extends SObjectDefinition<'outfunds__Funding_Request__c'> {
    Name: 'outfunds__Funding_Request__c';
    Fields: Fields$outfunds__Funding_Request__c;
    ParentReferences: ParentReferences$outfunds__Funding_Request__c;
    ChildRelationships: ChildRelationships$outfunds__Funding_Request__c;
  }

type Fields$outfunds__Requirement__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  outfunds__Assigned__c: string | null;
  outfunds__Completed_Date__c: DateString | null;
  outfunds__Disbursement__c: string | null;
  outfunds__Due_Date__c: DateString | null;
  outfunds__Funding_Request__c: string | null;
  outfunds__Primary_Contact__c: string | null;
  outfunds__Requirements__c: string | null;
  outfunds__Status__c: string | null;
  outfunds__Type__c: string | null;
  sfdo_grants__Identifier__c: string;
  sfdo_grants__Is_AddFiles_Visible__c: boolean;
  Ambito__c: string | null;
  Comunicazione_Padre__c: string | null;
  Comunicazione_chiusa__c: boolean;
  Data_Esito__c: DateString | null;
  Data_ricezione_risposta_PA__c: DateString | null;
  Esito__c: string | null;
  Id_Comunicazione__c: string;
  Is_Comunicazione__c: boolean;
  Is_Read__c: boolean;
  Motivazione__c: string | null;
  Pratica__c: string | null;
  Quesito__c: string | null;
  Risposta__c: string | null;
  Urgenza__c: boolean;
  Oggetto__c: string | null;
  Giorni_Rimanenti__c: number | null;
  Step_5_Completato__c: boolean;
  Tipologia_di_Revoca__c: string | null;
  Non_richiesta_risposta_PA__c: boolean;
  Regione__c: string | null;
  Visualizzazione_confermata_da__c: string | null;
  Visualizzazione_confermata_il__c: DateString | null;
  Visualizzazione_richiesta__c: boolean;
  Estensione_cronoprogramma_automatica__c: boolean;
  Piano_di_migrazione__c: string | null;
  canUseProfileRispondiPA__c: boolean;
  canUseRispondiPA__c: boolean;
  Created_Date__c: DateString | null;
  Data_apertura_fase__c: DateString | null;
  Giorni_rimanenti_counter__c: number | null;
  Last_Modified_Date__c: DateString | null;
  Giorni_to_add__c: number | null;
};

type ParentReferences$outfunds__Requirement__ChangeEvent = {
  //
};

type ChildRelationships$outfunds__Requirement__ChangeEvent = {
  //
};

interface SObjectDefinition$outfunds__Requirement__ChangeEvent extends SObjectDefinition<'outfunds__Requirement__ChangeEvent'> {
    Name: 'outfunds__Requirement__ChangeEvent';
    Fields: Fields$outfunds__Requirement__ChangeEvent;
    ParentReferences: ParentReferences$outfunds__Requirement__ChangeEvent;
    ChildRelationships: ChildRelationships$outfunds__Requirement__ChangeEvent;
  }

type Fields$outfunds__Requirement__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$outfunds__Requirement__Feed = {
  //
  Parent: SObjectDefinition$outfunds__Requirement__c;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$outfunds__Requirement__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$outfunds__Requirement__Feed extends SObjectDefinition<'outfunds__Requirement__Feed'> {
    Name: 'outfunds__Requirement__Feed';
    Fields: Fields$outfunds__Requirement__Feed;
    ParentReferences: ParentReferences$outfunds__Requirement__Feed;
    ChildRelationships: ChildRelationships$outfunds__Requirement__Feed;
  }

type Fields$outfunds__Requirement__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$outfunds__Requirement__History = {
  //
  Parent: SObjectDefinition$outfunds__Requirement__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Requirement__History = {
  //
};

interface SObjectDefinition$outfunds__Requirement__History extends SObjectDefinition<'outfunds__Requirement__History'> {
    Name: 'outfunds__Requirement__History';
    Fields: Fields$outfunds__Requirement__History;
    ParentReferences: ParentReferences$outfunds__Requirement__History;
    ChildRelationships: ChildRelationships$outfunds__Requirement__History;
  }

type Fields$outfunds__Requirement__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$outfunds__Requirement__Share = {
  //
  Parent: SObjectDefinition$outfunds__Requirement__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Requirement__Share = {
  //
};

interface SObjectDefinition$outfunds__Requirement__Share extends SObjectDefinition<'outfunds__Requirement__Share'> {
    Name: 'outfunds__Requirement__Share';
    Fields: Fields$outfunds__Requirement__Share;
    ParentReferences: ParentReferences$outfunds__Requirement__Share;
    ChildRelationships: ChildRelationships$outfunds__Requirement__Share;
  }

type Fields$outfunds__Requirement__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  outfunds__Assigned__c: string | null;
  outfunds__Completed_Date__c: DateString | null;
  outfunds__Disbursement__c: string | null;
  outfunds__Due_Date__c: DateString | null;
  outfunds__Funding_Request__c: string | null;
  outfunds__Primary_Contact__c: string | null;
  outfunds__Requirements__c: string | null;
  outfunds__Status__c: string | null;
  outfunds__Type__c: string | null;
  sfdo_grants__Identifier__c: string;
  sfdo_grants__Is_AddFiles_Visible__c: boolean;
  Ambito__c: string | null;
  Comunicazione_Padre__c: string | null;
  Comunicazione_chiusa__c: boolean;
  Data_Esito__c: DateString | null;
  Data_ricezione_risposta_PA__c: DateString | null;
  Esito__c: string | null;
  Id_Comunicazione__c: string;
  Is_Comunicazione__c: boolean;
  Is_Read__c: boolean;
  Motivazione__c: string | null;
  Pratica__c: string | null;
  Quesito__c: string | null;
  Risposta__c: string | null;
  Urgenza__c: boolean;
  Oggetto__c: string | null;
  Giorni_Rimanenti__c: number | null;
  Step_5_Completato__c: boolean;
  Tipologia_di_Revoca__c: string | null;
  Non_richiesta_risposta_PA__c: boolean;
  Regione__c: string | null;
  Visualizzazione_confermata_da__c: string | null;
  Visualizzazione_confermata_il__c: DateString | null;
  Visualizzazione_richiesta__c: boolean;
  Estensione_cronoprogramma_automatica__c: boolean;
  Piano_di_migrazione__c: string | null;
  canUseProfileRispondiPA__c: boolean;
  canUseRispondiPA__c: boolean;
  Created_Date__c: DateString | null;
  Data_apertura_fase__c: DateString | null;
  Giorni_rimanenti_counter__c: number | null;
  Last_Modified_Date__c: DateString | null;
  Giorni_to_add__c: number | null;
};

type ParentReferences$outfunds__Requirement__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  outfunds__Assigned__r: SObjectDefinition$User | null;
  outfunds__Disbursement__r: SObjectDefinition$outfunds__Disbursement__c | null;
  outfunds__Funding_Request__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  outfunds__Primary_Contact__r: SObjectDefinition$Contact | null;
  Comunicazione_Padre__r: SObjectDefinition$outfunds__Requirement__c | null;
  Pratica__r: SObjectDefinition$Case | null;
  Visualizzazione_confermata_da__r: SObjectDefinition$Contact | null;
  Piano_di_migrazione__r: SObjectDefinition$Case | null;
};

type ChildRelationships$outfunds__Requirement__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Feeds: SObjectDefinition$outfunds__Requirement__Feed;
  Histories: SObjectDefinition$outfunds__Requirement__History;
  Shares: SObjectDefinition$outfunds__Requirement__Share;
};

interface SObjectDefinition$outfunds__Requirement__c extends SObjectDefinition<'outfunds__Requirement__c'> {
    Name: 'outfunds__Requirement__c';
    Fields: Fields$outfunds__Requirement__c;
    ParentReferences: ParentReferences$outfunds__Requirement__c;
    ChildRelationships: ChildRelationships$outfunds__Requirement__c;
  }

type Fields$outfunds__Review__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  outfunds__AssignedTo__c: string | null;
  outfunds__Comments__c: string | null;
  outfunds__DueDate__c: DateString | null;
  outfunds__FundingRequest__c: string | null;
  outfunds__Status__c: string | null;
  outfunds__SubmittedDate__c: DateString | null;
  sfdo_grants__ConfigurationJson__c: string | null;
  sfdo_grants__DisplayEndDate__c: DateString | null;
  sfdo_grants__DisplayStartDate__c: DateString | null;
  sfdo_grants__IsDisplayed__c: boolean;
  sfdo_grants__IsMine__c: boolean;
  sfdo_grants__IsSubmitted__c: boolean;
  sfdo_grants__ReviewUrl__c: string | null;
  Contract__c: string | null;
  Contratto_SCP__c: string | null;
  Data_Contrattualizzazione_SCP__c: DateString | null;
  Data_Contrattualizzazione__c: DateString | null;
  Funding_Request_Collaborator__c: string | null;
  Servizio__c: string | null;
  Soggetto_Realizzatore_SCP__c: string | null;
  Tipologia__c: string | null;
  Avviso__c: string | null;
  Denominazione_Soggetto_Realizzatore_SCP__c: string | null;
  Denominazione_Soggetto_Realizzatore__c: string | null;
  Ente__c: string | null;
  numero_servizi_report__c: number | null;
  Data_normativa__c: DateString | null;
  Data_sottomissione_modifica_step3__c: DateString | null;
  Dettaglio__c: string | null;
  Dichiarazione_consenso__c: boolean;
  Id_Modifica_Progetto__c: string;
  Motivazione_Rifiuto__c: string | null;
  Motivazione_dell_istanza_di_modifica__c: string | null;
  Normativa_di_riferimento__c: string | null;
  Progetto_da_modificare__c: string | null;
  Nome_Progetto__c: string | null;
  isLavorato__c: boolean;
  Archiviato__c: boolean;
  NomeFornitore__c: string | null;
  Note__c: string | null;
  Storico_Tipologia_Soggetto_Realizzatore__c: string | null;
  URL_Fornitore__c: string | null;
  Data_completamento_attivita__c: DateString | null;
  Codice_Servizio__c: string | null;
  Data_attivazione__c: DateString | null;
  Check_fondo_innovazione__c: boolean;
  URL_scheda_servizio__c: string | null;
  Nome_infr_d_origine__c: string | null;
  Partita_IVA_CF_infr_d_origine__c: string | null;
  Ragione_sociale_infr_d_origine__c: string | null;
  Tipologia_scheda_val_multiMisura__c: string | null;
  tipoComponente__c: string | null;
  dataFineEsecuzioneTest__c: DateString | null;
  nomeComponente__c: string | null;
  pivaFornitore__c: string | null;
  uuidComponente__c: string | null;
  uuidEsecuzioneTest__c: string | null;
  Contratto_di_integrazione__c: string | null;
  Data_Rettifica__c: DateString | null;
  Numero_Rettifica__c: string | null;
};

type ParentReferences$outfunds__Review__ChangeEvent = {
  //
};

type ChildRelationships$outfunds__Review__ChangeEvent = {
  //
};

interface SObjectDefinition$outfunds__Review__ChangeEvent extends SObjectDefinition<'outfunds__Review__ChangeEvent'> {
    Name: 'outfunds__Review__ChangeEvent';
    Fields: Fields$outfunds__Review__ChangeEvent;
    ParentReferences: ParentReferences$outfunds__Review__ChangeEvent;
    ChildRelationships: ChildRelationships$outfunds__Review__ChangeEvent;
  }

type Fields$outfunds__Review__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$outfunds__Review__History = {
  //
  Parent: SObjectDefinition$outfunds__Review__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Review__History = {
  //
};

interface SObjectDefinition$outfunds__Review__History extends SObjectDefinition<'outfunds__Review__History'> {
    Name: 'outfunds__Review__History';
    Fields: Fields$outfunds__Review__History;
    ParentReferences: ParentReferences$outfunds__Review__History;
    ChildRelationships: ChildRelationships$outfunds__Review__History;
  }

type Fields$outfunds__Review__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$outfunds__Review__Share = {
  //
  Parent: SObjectDefinition$outfunds__Review__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$outfunds__Review__Share = {
  //
};

interface SObjectDefinition$outfunds__Review__Share extends SObjectDefinition<'outfunds__Review__Share'> {
    Name: 'outfunds__Review__Share';
    Fields: Fields$outfunds__Review__Share;
    ParentReferences: ParentReferences$outfunds__Review__Share;
    ChildRelationships: ChildRelationships$outfunds__Review__Share;
  }

type Fields$outfunds__Review__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  outfunds__AssignedTo__c: string | null;
  outfunds__Comments__c: string | null;
  outfunds__DueDate__c: DateString | null;
  outfunds__FundingRequest__c: string | null;
  outfunds__Status__c: string | null;
  outfunds__SubmittedDate__c: DateString | null;
  sfdo_grants__ConfigurationJson__c: string | null;
  sfdo_grants__DisplayEndDate__c: DateString | null;
  sfdo_grants__DisplayStartDate__c: DateString | null;
  sfdo_grants__IsDisplayed__c: boolean;
  sfdo_grants__IsMine__c: boolean;
  sfdo_grants__IsSubmitted__c: boolean;
  sfdo_grants__ReviewUrl__c: string | null;
  Contract__c: string | null;
  Contratto_SCP__c: string | null;
  Data_Contrattualizzazione_SCP__c: DateString | null;
  Data_Contrattualizzazione__c: DateString | null;
  Funding_Request_Collaborator__c: string | null;
  Servizio__c: string | null;
  Soggetto_Realizzatore_SCP__c: string | null;
  Tipologia__c: string | null;
  Avviso__c: string | null;
  Denominazione_Soggetto_Realizzatore_SCP__c: string | null;
  Denominazione_Soggetto_Realizzatore__c: string | null;
  Ente__c: string | null;
  numero_servizi_report__c: number | null;
  Data_normativa__c: DateString | null;
  Data_sottomissione_modifica_step3__c: DateString | null;
  Dettaglio__c: string | null;
  Dichiarazione_consenso__c: boolean;
  Id_Modifica_Progetto__c: string;
  Motivazione_Rifiuto__c: string | null;
  Motivazione_dell_istanza_di_modifica__c: string | null;
  Normativa_di_riferimento__c: string | null;
  Progetto_da_modificare__c: string | null;
  Nome_Progetto__c: string | null;
  isLavorato__c: boolean;
  Archiviato__c: boolean;
  NomeFornitore__c: string | null;
  Note__c: string | null;
  Storico_Tipologia_Soggetto_Realizzatore__c: string | null;
  URL_Fornitore__c: string | null;
  Data_completamento_attivita__c: DateString | null;
  Codice_Servizio__c: string | null;
  Data_attivazione__c: DateString | null;
  Check_fondo_innovazione__c: boolean;
  URL_scheda_servizio__c: string | null;
  Nome_infr_d_origine__c: string | null;
  Partita_IVA_CF_infr_d_origine__c: string | null;
  Ragione_sociale_infr_d_origine__c: string | null;
  Tipologia_scheda_val_multiMisura__c: string | null;
  tipoComponente__c: string | null;
  dataFineEsecuzioneTest__c: DateString | null;
  nomeComponente__c: string | null;
  pivaFornitore__c: string | null;
  uuidComponente__c: string | null;
  uuidEsecuzioneTest__c: string | null;
  Contratto_di_integrazione__c: string | null;
  Data_Rettifica__c: DateString | null;
  Numero_Rettifica__c: string | null;
};

type ParentReferences$outfunds__Review__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  outfunds__AssignedTo__r: SObjectDefinition$User | null;
  outfunds__FundingRequest__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Contract__r: SObjectDefinition$Contract | null;
  Contratto_SCP__r: SObjectDefinition$Contract | null;
  Funding_Request_Collaborator__r: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c | null;
  Servizio__r: SObjectDefinition$Servizio_Richiesta__c | null;
  Soggetto_Realizzatore_SCP__r: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c | null;
  Progetto_da_modificare__r: SObjectDefinition$outfunds__Funding_Request__c | null;
  Contratto_di_integrazione__r: SObjectDefinition$Contract | null;
};

type ChildRelationships$outfunds__Review__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Histories: SObjectDefinition$outfunds__Review__History;
  Shares: SObjectDefinition$outfunds__Review__Share;
};

interface SObjectDefinition$outfunds__Review__c extends SObjectDefinition<'outfunds__Review__c'> {
    Name: 'outfunds__Review__c';
    Fields: Fields$outfunds__Review__c;
    ParentReferences: ParentReferences$outfunds__Review__c;
    ChildRelationships: ChildRelationships$outfunds__Review__c;
  }

type Fields$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  sfdo_grants__FundingRequest__c: string | null;
  sfdo_grants__Email__c: string | null;
};

type ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent = {
  //
};

type ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent = {
  //
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent extends SObjectDefinition<'sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent'> {
    Name: 'sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent';
    Fields: Fields$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent;
  }

type Fields$sfdo_grants__FundRqstCollaboratorInvt__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__Feed = {
  //
  Parent: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__c;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__Feed extends SObjectDefinition<'sfdo_grants__FundRqstCollaboratorInvt__Feed'> {
    Name: 'sfdo_grants__FundRqstCollaboratorInvt__Feed';
    Fields: Fields$sfdo_grants__FundRqstCollaboratorInvt__Feed;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__Feed;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__Feed;
  }

type Fields$sfdo_grants__FundRqstCollaboratorInvt__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__History = {
  //
  Parent: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__History = {
  //
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__History extends SObjectDefinition<'sfdo_grants__FundRqstCollaboratorInvt__History'> {
    Name: 'sfdo_grants__FundRqstCollaboratorInvt__History';
    Fields: Fields$sfdo_grants__FundRqstCollaboratorInvt__History;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__History;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__History;
  }

type Fields$sfdo_grants__FundRqstCollaboratorInvt__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  sfdo_grants__FundingRequest__c: string;
  sfdo_grants__Email__c: string;
};

type ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  sfdo_grants__FundingRequest__r: SObjectDefinition$outfunds__Funding_Request__c;
};

type ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Feeds: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__Feed;
  Histories: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__History;
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__c extends SObjectDefinition<'sfdo_grants__FundRqstCollaboratorInvt__c'> {
    Name: 'sfdo_grants__FundRqstCollaboratorInvt__c';
    Fields: Fields$sfdo_grants__FundRqstCollaboratorInvt__c;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaboratorInvt__c;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaboratorInvt__c;
  }

type Fields$sfdo_grants__FundRqstCollaborator__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  sfdo_grants__FundingRequest__c: string | null;
  sfdo_grants__Contact__c: string | null;
  sfdo_grants__Email__c: string | null;
  sfdo_grants__FirstName__c: string | null;
  sfdo_grants__LastName__c: string | null;
  sfdo_grants__Role__c: string | null;
  sfdo_grants__Status__c: string | null;
  sfdo_grants__User__c: string | null;
  Codice_Fiscale_RL__c: string | null;
  Codice_Fiscale__c: string | null;
  Cognome_Rappresentante_Legale__c: string | null;
  Comune__c: string | null;
  Conf_spec_tec_scenario3__c: boolean;
  Conformit_dei_prodotti_scenario2__c: boolean;
  Denominazione_Soggetto_Realizzatore__c: string | null;
  EMAS_UNI_EN_ISO_14001__c: boolean;
  EMAS_UNI_EN_ISO_14001_sc8__c: boolean;
  EPA_ENERGY_STAR_scenario1__c: boolean;
  EPA_ENERGY_STAR_scenario2__c: boolean;
  Ente__c: string | null;
  Fornitore__c: string | null;
  GESTIONE_RIFIUTI_EN50625__c: boolean;
  GESTIONE_RIFIUTI_EN50625_sc8__c: boolean;
  GWP_UNI_EN_ISO_IEC_50001__c: boolean;
  GWP_UNI_EN_ISO_IEC_50001_sc8__c: boolean;
  IBAN__c: string | null;
  ISO_11469_ISO1043_scenario2__c: boolean;
  ISO_30134_2016__c: boolean;
  ISO_30134_2016_sc8__c: boolean;
  ISO_55000_ISO_14040_ISO_14044__c: boolean;
  ISO_55000_ISO_14040_ISO_14044_sc8__c: boolean;
  ISO_9001_UNI_EN_ISO_14001_scenario2__c: boolean;
  Indirizzo__c: string | null;
  Isc_al_Reg_naz_scenario1__c: boolean;
  Isc_al_Reg_naz_scenario2__c: boolean;
  Nome_Rappresentante_Legale__c: string | null;
  P_IVA__c: string | null;
  Provincia__c: string | null;
  Regione__c: string | null;
  SOSTANZE_PERICOLOSE__c: boolean;
  SOSTANZE_PERICOLOSE_sc8__c: boolean;
  Service_provider__c: boolean;
  Servizi_migrazione__c: boolean;
  Star_ISO_IEC_30134_4_2017__c: boolean;
  Star_ISO_IEC_30134_4_2017_sc8__c: boolean;
  UNI_EN_ISO_14024_scenario1__c: boolean;
  Adesione_europaen_code_of_conduct_for_DC__c: boolean;
  Applicabile_scheda_3__c: boolean;
  Applicabile_scheda_6__c: boolean;
  Applicabile_scheda_8__c: boolean;
  Criteri_UE_esecuzione_del_contratto__c: boolean;
  Scheda_3_completata__c: boolean;
  Scheda_6_completata__c: boolean;
  Scheda_8_completata__c: boolean;
  Stato_autodichiarazione_DNSH__c: string | null;
  Compilazione_old_DNSH__c: boolean;
  SC3_Apparecchiature_ricondizionate__c: boolean;
  SC3_Apparecchiature_stampa_multifunz__c: boolean;
  SC3_Dichiarazione_Etec__c: boolean;
  SC3_Sez1_Reg_REACH_RoHS_elettromag__c: boolean;
  SC3_Sez1_art57_REACH__c: boolean;
  SC3_Sez2_Reg_REACH_RoHS_elettromag__c: boolean;
  SC3_Sez2_art57_REACH__c: boolean;
  SC6_Crit_UE_appalti_pubblici__c: boolean;
  SC6_EN_50600_ISO_IEC_22237__c: boolean;
  SC8_Crit_UE_appalti_pubblici__c: boolean;
  SC8_EN_50600_ISO_IEC_22237__c: boolean;
  Soggetto_Realizzatore__c: string | null;
  Non_applicabile_scheda_3__c: boolean;
  Non_applicabile_scheda_6__c: boolean;
  Non_applicabile_scheda_8__c: boolean;
  Tipologia_componente__c: string | null;
  Componente__c: string | null;
  Dichiarazione_223__c: boolean;
  Data_Superamento_BlackBox__c: DateString | null;
  Denominazione_Componente__c: string | null;
  Gender__c: string | null;
  Belfiore__c: string | null;
  Data_di_Nascita__c: DateString | null;
  Sogg_terzo_ente_aggregatore__c: boolean;
  Stato__c: string | null;
  noPiva__c: boolean;
};

type ParentReferences$sfdo_grants__FundRqstCollaborator__ChangeEvent = {
  //
};

type ChildRelationships$sfdo_grants__FundRqstCollaborator__ChangeEvent = {
  //
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaborator__ChangeEvent extends SObjectDefinition<'sfdo_grants__FundRqstCollaborator__ChangeEvent'> {
    Name: 'sfdo_grants__FundRqstCollaborator__ChangeEvent';
    Fields: Fields$sfdo_grants__FundRqstCollaborator__ChangeEvent;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaborator__ChangeEvent;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaborator__ChangeEvent;
  }

type Fields$sfdo_grants__FundRqstCollaborator__Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  NetworkScope: string | null;
  Visibility: string | null;
  BestCommentId: string | null;
};

type ParentReferences$sfdo_grants__FundRqstCollaborator__Feed = {
  //
  Parent: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$sfdo_grants__FundRqstCollaborator__Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaborator__Feed extends SObjectDefinition<'sfdo_grants__FundRqstCollaborator__Feed'> {
    Name: 'sfdo_grants__FundRqstCollaborator__Feed';
    Fields: Fields$sfdo_grants__FundRqstCollaborator__Feed;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaborator__Feed;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaborator__Feed;
  }

type Fields$sfdo_grants__FundRqstCollaborator__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$sfdo_grants__FundRqstCollaborator__History = {
  //
  Parent: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$sfdo_grants__FundRqstCollaborator__History = {
  //
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaborator__History extends SObjectDefinition<'sfdo_grants__FundRqstCollaborator__History'> {
    Name: 'sfdo_grants__FundRqstCollaborator__History';
    Fields: Fields$sfdo_grants__FundRqstCollaborator__History;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaborator__History;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaborator__History;
  }

type Fields$sfdo_grants__FundRqstCollaborator__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  sfdo_grants__FundingRequest__c: string;
  sfdo_grants__Contact__c: string | null;
  sfdo_grants__Email__c: string | null;
  sfdo_grants__FirstName__c: string | null;
  sfdo_grants__LastName__c: string | null;
  sfdo_grants__Role__c: string | null;
  sfdo_grants__Status__c: string | null;
  sfdo_grants__User__c: string | null;
  Codice_Fiscale_RL__c: string | null;
  Codice_Fiscale__c: string | null;
  Cognome_Rappresentante_Legale__c: string | null;
  Comune__c: string | null;
  Conf_spec_tec_scenario3__c: boolean;
  Conformit_dei_prodotti_scenario2__c: boolean;
  Denominazione_Soggetto_Realizzatore__c: string | null;
  EMAS_UNI_EN_ISO_14001__c: boolean;
  EMAS_UNI_EN_ISO_14001_sc8__c: boolean;
  EPA_ENERGY_STAR_scenario1__c: boolean;
  EPA_ENERGY_STAR_scenario2__c: boolean;
  Ente__c: string | null;
  Fornitore__c: string | null;
  GESTIONE_RIFIUTI_EN50625__c: boolean;
  GESTIONE_RIFIUTI_EN50625_sc8__c: boolean;
  GWP_UNI_EN_ISO_IEC_50001__c: boolean;
  GWP_UNI_EN_ISO_IEC_50001_sc8__c: boolean;
  IBAN__c: string | null;
  ISO_11469_ISO1043_scenario2__c: boolean;
  ISO_30134_2016__c: boolean;
  ISO_30134_2016_sc8__c: boolean;
  ISO_55000_ISO_14040_ISO_14044__c: boolean;
  ISO_55000_ISO_14040_ISO_14044_sc8__c: boolean;
  ISO_9001_UNI_EN_ISO_14001_scenario2__c: boolean;
  Indirizzo__c: string | null;
  Isc_al_Reg_naz_scenario1__c: boolean;
  Isc_al_Reg_naz_scenario2__c: boolean;
  Nome_Rappresentante_Legale__c: string | null;
  P_IVA__c: string | null;
  Provincia__c: string | null;
  Regione__c: string | null;
  SOSTANZE_PERICOLOSE__c: boolean;
  SOSTANZE_PERICOLOSE_sc8__c: boolean;
  Service_provider__c: boolean;
  Servizi_migrazione__c: boolean;
  Star_ISO_IEC_30134_4_2017__c: boolean;
  Star_ISO_IEC_30134_4_2017_sc8__c: boolean;
  UNI_EN_ISO_14024_scenario1__c: boolean;
  Adesione_europaen_code_of_conduct_for_DC__c: boolean;
  Applicabile_scheda_3__c: boolean;
  Applicabile_scheda_6__c: boolean;
  Applicabile_scheda_8__c: boolean;
  Criteri_UE_esecuzione_del_contratto__c: boolean;
  Scheda_3_completata__c: boolean;
  Scheda_6_completata__c: boolean;
  Scheda_8_completata__c: boolean;
  Stato_autodichiarazione_DNSH__c: string | null;
  Compilazione_old_DNSH__c: boolean;
  SC3_Apparecchiature_ricondizionate__c: boolean;
  SC3_Apparecchiature_stampa_multifunz__c: boolean;
  SC3_Dichiarazione_Etec__c: boolean;
  SC3_Sez1_Reg_REACH_RoHS_elettromag__c: boolean;
  SC3_Sez1_art57_REACH__c: boolean;
  SC3_Sez2_Reg_REACH_RoHS_elettromag__c: boolean;
  SC3_Sez2_art57_REACH__c: boolean;
  SC6_Crit_UE_appalti_pubblici__c: boolean;
  SC6_EN_50600_ISO_IEC_22237__c: boolean;
  SC8_Crit_UE_appalti_pubblici__c: boolean;
  SC8_EN_50600_ISO_IEC_22237__c: boolean;
  Soggetto_Realizzatore__c: string | null;
  Non_applicabile_scheda_3__c: boolean;
  Non_applicabile_scheda_6__c: boolean;
  Non_applicabile_scheda_8__c: boolean;
  Tipologia_componente__c: string | null;
  Componente__c: string | null;
  Dichiarazione_223__c: boolean;
  Data_Superamento_BlackBox__c: DateString | null;
  Denominazione_Componente__c: string | null;
  Gender__c: string | null;
  Belfiore__c: string | null;
  Data_di_Nascita__c: DateString | null;
  Sogg_terzo_ente_aggregatore__c: boolean;
  Stato__c: string | null;
  noPiva__c: boolean;
};

type ParentReferences$sfdo_grants__FundRqstCollaborator__c = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  sfdo_grants__FundingRequest__r: SObjectDefinition$outfunds__Funding_Request__c;
  sfdo_grants__Contact__r: SObjectDefinition$Contact | null;
  sfdo_grants__User__r: SObjectDefinition$User | null;
  Ente__r: SObjectDefinition$Account | null;
  Fornitore__r: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c | null;
  Soggetto_Realizzatore__r: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c | null;
  Componente__r: SObjectDefinition$outfunds__Review__c | null;
};

type ChildRelationships$sfdo_grants__FundRqstCollaborator__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Feeds: SObjectDefinition$sfdo_grants__FundRqstCollaborator__Feed;
  Histories: SObjectDefinition$sfdo_grants__FundRqstCollaborator__History;
};

interface SObjectDefinition$sfdo_grants__FundRqstCollaborator__c extends SObjectDefinition<'sfdo_grants__FundRqstCollaborator__c'> {
    Name: 'sfdo_grants__FundRqstCollaborator__c';
    Fields: Fields$sfdo_grants__FundRqstCollaborator__c;
    ParentReferences: ParentReferences$sfdo_grants__FundRqstCollaborator__c;
    ChildRelationships: ChildRelationships$sfdo_grants__FundRqstCollaborator__c;
  }

type Fields$sis_LogSPID__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$sis_LogSPID__ChangeEvent = {
  //
};

type ChildRelationships$sis_LogSPID__ChangeEvent = {
  //
};

interface SObjectDefinition$sis_LogSPID__ChangeEvent extends SObjectDefinition<'sis_LogSPID__ChangeEvent'> {
    Name: 'sis_LogSPID__ChangeEvent';
    Fields: Fields$sis_LogSPID__ChangeEvent;
    ParentReferences: ParentReferences$sis_LogSPID__ChangeEvent;
    ChildRelationships: ChildRelationships$sis_LogSPID__ChangeEvent;
  }

type Fields$sis_LogSPID__Share = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$sis_LogSPID__Share = {
  //
  Parent: SObjectDefinition$sis_LogSPID__c;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$sis_LogSPID__Share = {
  //
};

interface SObjectDefinition$sis_LogSPID__Share extends SObjectDefinition<'sis_LogSPID__Share'> {
    Name: 'sis_LogSPID__Share';
    Fields: Fields$sis_LogSPID__Share;
    ParentReferences: ParentReferences$sis_LogSPID__Share;
    ChildRelationships: ChildRelationships$sis_LogSPID__Share;
  }

type Fields$sis_LogSPID__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$sis_LogSPID__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$sis_LogSPID__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
  Shares: SObjectDefinition$sis_LogSPID__Share;
};

interface SObjectDefinition$sis_LogSPID__c extends SObjectDefinition<'sis_LogSPID__c'> {
    Name: 'sis_LogSPID__c';
    Fields: Fields$sis_LogSPID__c;
    ParentReferences: ParentReferences$sis_LogSPID__c;
    ChildRelationships: ChildRelationships$sis_LogSPID__c;
  }

type Fields$sis_Municipality__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  sis_MunicipalityCadastralCode__c: string | null;
  sis_Province__c: string | null;
  sis_Region__c: string | null;
  municipalityProvince__c: string | null;
  InitialStato__c: string | null;
};

type ParentReferences$sis_Municipality__ChangeEvent = {
  //
};

type ChildRelationships$sis_Municipality__ChangeEvent = {
  //
};

interface SObjectDefinition$sis_Municipality__ChangeEvent extends SObjectDefinition<'sis_Municipality__ChangeEvent'> {
    Name: 'sis_Municipality__ChangeEvent';
    Fields: Fields$sis_Municipality__ChangeEvent;
    ParentReferences: ParentReferences$sis_Municipality__ChangeEvent;
    ChildRelationships: ChildRelationships$sis_Municipality__ChangeEvent;
  }

type Fields$sis_Municipality__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  sis_MunicipalityCadastralCode__c: string;
  sis_Province__c: string;
  sis_Region__c: string;
  municipalityProvince__c: string | null;
  InitialStato__c: string | null;
};

type ParentReferences$sis_Municipality__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$sis_Municipality__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  RelatedRecords: SObjectDefinition$VoiceCall;
};

interface SObjectDefinition$sis_Municipality__c extends SObjectDefinition<'sis_Municipality__c'> {
    Name: 'sis_Municipality__c';
    Fields: Fields$sis_Municipality__c;
    ParentReferences: ParentReferences$sis_Municipality__c;
    ChildRelationships: ChildRelationships$sis_Municipality__c;
  }


export interface PaDigitale2026 extends Schema {
  SObjects: {
    AcceptedEventRelation: SObjectDefinition$AcceptedEventRelation;
    Account: SObjectDefinition$Account;
    AccountBrand: SObjectDefinition$AccountBrand;
    AccountBrandShare: SObjectDefinition$AccountBrandShare;
    AccountChangeEvent: SObjectDefinition$AccountChangeEvent;
    AccountContactRole: SObjectDefinition$AccountContactRole;
    AccountContactRoleChangeEvent: SObjectDefinition$AccountContactRoleChangeEvent;
    AccountFeed: SObjectDefinition$AccountFeed;
    AccountHistory: SObjectDefinition$AccountHistory;
    AccountPartner: SObjectDefinition$AccountPartner;
    AccountShare: SObjectDefinition$AccountShare;
    Accreditation: SObjectDefinition$Accreditation;
    AccreditationFeed: SObjectDefinition$AccreditationFeed;
    AccreditationHistory: SObjectDefinition$AccreditationHistory;
    AccreditationShare: SObjectDefinition$AccreditationShare;
    ActionLinkGroupTemplate: SObjectDefinition$ActionLinkGroupTemplate;
    ActionLinkTemplate: SObjectDefinition$ActionLinkTemplate;
    ActivityHistory: SObjectDefinition$ActivityHistory;
    AdditionalNumber: SObjectDefinition$AdditionalNumber;
    Address: SObjectDefinition$Address;
    AddressHistory: SObjectDefinition$AddressHistory;
    AgentWork: SObjectDefinition$AgentWork;
    AgentWorkShare: SObjectDefinition$AgentWorkShare;
    AggregateResult: SObjectDefinition$AggregateResult;
    Anagrafica_Servizi__ChangeEvent: SObjectDefinition$Anagrafica_Servizi__ChangeEvent;
    Anagrafica_Servizi__Share: SObjectDefinition$Anagrafica_Servizi__Share;
    Anagrafica_Servizi__c: SObjectDefinition$Anagrafica_Servizi__c;
    Announcement: SObjectDefinition$Announcement;
    ApexPageInfo: SObjectDefinition$ApexPageInfo;
    AppAnalyticsQueryRequest: SObjectDefinition$AppAnalyticsQueryRequest;
    AppDefinition: SObjectDefinition$AppDefinition;
    AppMenuItem: SObjectDefinition$AppMenuItem;
    AppTabMember: SObjectDefinition$AppTabMember;
    ApplicationLog__ChangeEvent: SObjectDefinition$ApplicationLog__ChangeEvent;
    ApplicationLog__Share: SObjectDefinition$ApplicationLog__Share;
    ApplicationLog__c: SObjectDefinition$ApplicationLog__c;
    Approval: SObjectDefinition$Approval;
    Asset: SObjectDefinition$Asset;
    AssetChangeEvent: SObjectDefinition$AssetChangeEvent;
    AssetFeed: SObjectDefinition$AssetFeed;
    AssetHistory: SObjectDefinition$AssetHistory;
    AssetRelationship: SObjectDefinition$AssetRelationship;
    AssetRelationshipFeed: SObjectDefinition$AssetRelationshipFeed;
    AssetRelationshipHistory: SObjectDefinition$AssetRelationshipHistory;
    AssetShare: SObjectDefinition$AssetShare;
    AssetTokenEvent: SObjectDefinition$AssetTokenEvent;
    AssignmentRule: SObjectDefinition$AssignmentRule;
    AssociatedLocation: SObjectDefinition$AssociatedLocation;
    AssociatedLocationHistory: SObjectDefinition$AssociatedLocationHistory;
    AsyncOperationEvent: SObjectDefinition$AsyncOperationEvent;
    AsyncOperationStatus: SObjectDefinition$AsyncOperationStatus;
    AttachedContentDocument: SObjectDefinition$AttachedContentDocument;
    AttachedContentNote: SObjectDefinition$AttachedContentNote;
    Attachment: SObjectDefinition$Attachment;
    Audience: SObjectDefinition$Audience;
    AuthApplicationAsset: SObjectDefinition$AuthApplicationAsset;
    AuthApplicationAssetFeed: SObjectDefinition$AuthApplicationAssetFeed;
    AuthApplicationAssetHistory: SObjectDefinition$AuthApplicationAssetHistory;
    AuthApplicationAssetShare: SObjectDefinition$AuthApplicationAssetShare;
    AuthApplicationPlace: SObjectDefinition$AuthApplicationPlace;
    AuthApplicationPlaceFeed: SObjectDefinition$AuthApplicationPlaceFeed;
    AuthApplicationPlaceHistory: SObjectDefinition$AuthApplicationPlaceHistory;
    AuthApplicationPlaceShare: SObjectDefinition$AuthApplicationPlaceShare;
    AuthLocationAccessSchedule: SObjectDefinition$AuthLocationAccessSchedule;
    AuthLocationAccessScheduleFeed: SObjectDefinition$AuthLocationAccessScheduleFeed;
    AuthLocationAccessScheduleHistory: SObjectDefinition$AuthLocationAccessScheduleHistory;
    AuthLocationAccessScheduleShare: SObjectDefinition$AuthLocationAccessScheduleShare;
    AuthSession: SObjectDefinition$AuthSession;
    AuthorizationForm: SObjectDefinition$AuthorizationForm;
    AuthorizationFormConsent: SObjectDefinition$AuthorizationFormConsent;
    AuthorizationFormConsentChangeEvent: SObjectDefinition$AuthorizationFormConsentChangeEvent;
    AuthorizationFormConsentHistory: SObjectDefinition$AuthorizationFormConsentHistory;
    AuthorizationFormConsentShare: SObjectDefinition$AuthorizationFormConsentShare;
    AuthorizationFormDataUse: SObjectDefinition$AuthorizationFormDataUse;
    AuthorizationFormDataUseHistory: SObjectDefinition$AuthorizationFormDataUseHistory;
    AuthorizationFormDataUseShare: SObjectDefinition$AuthorizationFormDataUseShare;
    AuthorizationFormHistory: SObjectDefinition$AuthorizationFormHistory;
    AuthorizationFormShare: SObjectDefinition$AuthorizationFormShare;
    AuthorizationFormText: SObjectDefinition$AuthorizationFormText;
    AuthorizationFormTextHistory: SObjectDefinition$AuthorizationFormTextHistory;
    Award: SObjectDefinition$Award;
    AwardFeed: SObjectDefinition$AwardFeed;
    AwardHistory: SObjectDefinition$AwardHistory;
    AwardShare: SObjectDefinition$AwardShare;
    BackgroundOperation: SObjectDefinition$BackgroundOperation;
    BatchJobStatusChangedEvent: SObjectDefinition$BatchJobStatusChangedEvent;
    BoardCertification: SObjectDefinition$BoardCertification;
    BoardCertificationFeed: SObjectDefinition$BoardCertificationFeed;
    BoardCertificationHistory: SObjectDefinition$BoardCertificationHistory;
    BoardCertificationShare: SObjectDefinition$BoardCertificationShare;
    BrandTemplate: SObjectDefinition$BrandTemplate;
    BrandingSet: SObjectDefinition$BrandingSet;
    BrandingSetProperty: SObjectDefinition$BrandingSetProperty;
    BriefcaseAssignment: SObjectDefinition$BriefcaseAssignment;
    BriefcaseDefinition: SObjectDefinition$BriefcaseDefinition;
    BriefcaseRule: SObjectDefinition$BriefcaseRule;
    BriefcaseRuleFilter: SObjectDefinition$BriefcaseRuleFilter;
    BusRegAuthTypeDependency: SObjectDefinition$BusRegAuthTypeDependency;
    BusRegAuthTypeDependencyShare: SObjectDefinition$BusRegAuthTypeDependencyShare;
    BusRegAuthorizationType: SObjectDefinition$BusRegAuthorizationType;
    BusinessHours: SObjectDefinition$BusinessHours;
    BusinessLicense: SObjectDefinition$BusinessLicense;
    BusinessLicenseApplication: SObjectDefinition$BusinessLicenseApplication;
    BusinessLicenseApplicationFeed: SObjectDefinition$BusinessLicenseApplicationFeed;
    BusinessLicenseApplicationHistory: SObjectDefinition$BusinessLicenseApplicationHistory;
    BusinessLicenseApplicationShare: SObjectDefinition$BusinessLicenseApplicationShare;
    BusinessLicenseFeed: SObjectDefinition$BusinessLicenseFeed;
    BusinessLicenseHistory: SObjectDefinition$BusinessLicenseHistory;
    BusinessLicenseShare: SObjectDefinition$BusinessLicenseShare;
    BusinessProcess: SObjectDefinition$BusinessProcess;
    BusinessProfile: SObjectDefinition$BusinessProfile;
    BusinessProfileFeed: SObjectDefinition$BusinessProfileFeed;
    BusinessProfileHistory: SObjectDefinition$BusinessProfileHistory;
    BusinessType: SObjectDefinition$BusinessType;
    BusinessTypeShare: SObjectDefinition$BusinessTypeShare;
    Calendar: SObjectDefinition$Calendar;
    CalendarView: SObjectDefinition$CalendarView;
    CalendarViewShare: SObjectDefinition$CalendarViewShare;
    CallCenter: SObjectDefinition$CallCenter;
    CallCoachConfigModifyEvent: SObjectDefinition$CallCoachConfigModifyEvent;
    CallCoachingMediaProvider: SObjectDefinition$CallCoachingMediaProvider;
    Campaign: SObjectDefinition$Campaign;
    CampaignChangeEvent: SObjectDefinition$CampaignChangeEvent;
    CampaignFeed: SObjectDefinition$CampaignFeed;
    CampaignHistory: SObjectDefinition$CampaignHistory;
    CampaignMember: SObjectDefinition$CampaignMember;
    CampaignMemberChangeEvent: SObjectDefinition$CampaignMemberChangeEvent;
    CampaignMemberStatus: SObjectDefinition$CampaignMemberStatus;
    CampaignMemberStatusChangeEvent: SObjectDefinition$CampaignMemberStatusChangeEvent;
    CampaignShare: SObjectDefinition$CampaignShare;
    Case: SObjectDefinition$Case;
    CaseArticle: SObjectDefinition$CaseArticle;
    CaseChangeEvent: SObjectDefinition$CaseChangeEvent;
    CaseComment: SObjectDefinition$CaseComment;
    CaseContactRole: SObjectDefinition$CaseContactRole;
    CaseExternalDocument: SObjectDefinition$CaseExternalDocument;
    CaseFeed: SObjectDefinition$CaseFeed;
    CaseHistory: SObjectDefinition$CaseHistory;
    CaseMilestone: SObjectDefinition$CaseMilestone;
    CaseShare: SObjectDefinition$CaseShare;
    CaseSolution: SObjectDefinition$CaseSolution;
    CaseStatus: SObjectDefinition$CaseStatus;
    CaseSubjectParticle: SObjectDefinition$CaseSubjectParticle;
    CaseTeamMember: SObjectDefinition$CaseTeamMember;
    CaseTeamRole: SObjectDefinition$CaseTeamRole;
    CaseTeamTemplate: SObjectDefinition$CaseTeamTemplate;
    CaseTeamTemplateMember: SObjectDefinition$CaseTeamTemplateMember;
    CaseTeamTemplateRecord: SObjectDefinition$CaseTeamTemplateRecord;
    Catalogo_Servizi__ChangeEvent: SObjectDefinition$Catalogo_Servizi__ChangeEvent;
    Catalogo_Servizi__Share: SObjectDefinition$Catalogo_Servizi__Share;
    Catalogo_Servizi__c: SObjectDefinition$Catalogo_Servizi__c;
    CategoryNode: SObjectDefinition$CategoryNode;
    ChatterActivity: SObjectDefinition$ChatterActivity;
    ChatterExtension: SObjectDefinition$ChatterExtension;
    ChatterExtensionConfig: SObjectDefinition$ChatterExtensionConfig;
    ChatterExtensionLocalization: SObjectDefinition$ChatterExtensionLocalization;
    Checklist__ChangeEvent: SObjectDefinition$Checklist__ChangeEvent;
    Checklist__History: SObjectDefinition$Checklist__History;
    Checklist__Share: SObjectDefinition$Checklist__Share;
    Checklist__c: SObjectDefinition$Checklist__c;
    ClientBrowser: SObjectDefinition$ClientBrowser;
    Cluster__ChangeEvent: SObjectDefinition$Cluster__ChangeEvent;
    Cluster__Share: SObjectDefinition$Cluster__Share;
    Cluster__c: SObjectDefinition$Cluster__c;
    CollaborationGroup: SObjectDefinition$CollaborationGroup;
    CollaborationGroupFeed: SObjectDefinition$CollaborationGroupFeed;
    CollaborationGroupMember: SObjectDefinition$CollaborationGroupMember;
    CollaborationGroupMemberRequest: SObjectDefinition$CollaborationGroupMemberRequest;
    CollaborationGroupRecord: SObjectDefinition$CollaborationGroupRecord;
    CollaborationInvitation: SObjectDefinition$CollaborationInvitation;
    ColorDefinition: SObjectDefinition$ColorDefinition;
    CombinedAttachment: SObjectDefinition$CombinedAttachment;
    CommSubscription: SObjectDefinition$CommSubscription;
    CommSubscriptionChannelType: SObjectDefinition$CommSubscriptionChannelType;
    CommSubscriptionChannelTypeFeed: SObjectDefinition$CommSubscriptionChannelTypeFeed;
    CommSubscriptionChannelTypeHistory: SObjectDefinition$CommSubscriptionChannelTypeHistory;
    CommSubscriptionChannelTypeShare: SObjectDefinition$CommSubscriptionChannelTypeShare;
    CommSubscriptionConsent: SObjectDefinition$CommSubscriptionConsent;
    CommSubscriptionConsentChangeEvent: SObjectDefinition$CommSubscriptionConsentChangeEvent;
    CommSubscriptionConsentFeed: SObjectDefinition$CommSubscriptionConsentFeed;
    CommSubscriptionConsentHistory: SObjectDefinition$CommSubscriptionConsentHistory;
    CommSubscriptionConsentShare: SObjectDefinition$CommSubscriptionConsentShare;
    CommSubscriptionFeed: SObjectDefinition$CommSubscriptionFeed;
    CommSubscriptionHistory: SObjectDefinition$CommSubscriptionHistory;
    CommSubscriptionShare: SObjectDefinition$CommSubscriptionShare;
    CommSubscriptionTiming: SObjectDefinition$CommSubscriptionTiming;
    CommSubscriptionTimingFeed: SObjectDefinition$CommSubscriptionTimingFeed;
    CommSubscriptionTimingHistory: SObjectDefinition$CommSubscriptionTimingHistory;
    Community: SObjectDefinition$Community;
    ConferenceNumber: SObjectDefinition$ConferenceNumber;
    ConnectedApplication: SObjectDefinition$ConnectedApplication;
    Contact: SObjectDefinition$Contact;
    ContactChangeEvent: SObjectDefinition$ContactChangeEvent;
    ContactFeed: SObjectDefinition$ContactFeed;
    ContactHistory: SObjectDefinition$ContactHistory;
    ContactPointAddress: SObjectDefinition$ContactPointAddress;
    ContactPointAddressChangeEvent: SObjectDefinition$ContactPointAddressChangeEvent;
    ContactPointAddressHistory: SObjectDefinition$ContactPointAddressHistory;
    ContactPointAddressShare: SObjectDefinition$ContactPointAddressShare;
    ContactPointConsent: SObjectDefinition$ContactPointConsent;
    ContactPointConsentChangeEvent: SObjectDefinition$ContactPointConsentChangeEvent;
    ContactPointConsentHistory: SObjectDefinition$ContactPointConsentHistory;
    ContactPointConsentShare: SObjectDefinition$ContactPointConsentShare;
    ContactPointEmail: SObjectDefinition$ContactPointEmail;
    ContactPointEmailChangeEvent: SObjectDefinition$ContactPointEmailChangeEvent;
    ContactPointEmailHistory: SObjectDefinition$ContactPointEmailHistory;
    ContactPointEmailShare: SObjectDefinition$ContactPointEmailShare;
    ContactPointPhone: SObjectDefinition$ContactPointPhone;
    ContactPointPhoneChangeEvent: SObjectDefinition$ContactPointPhoneChangeEvent;
    ContactPointPhoneHistory: SObjectDefinition$ContactPointPhoneHistory;
    ContactPointPhoneShare: SObjectDefinition$ContactPointPhoneShare;
    ContactPointTypeConsent: SObjectDefinition$ContactPointTypeConsent;
    ContactPointTypeConsentChangeEvent: SObjectDefinition$ContactPointTypeConsentChangeEvent;
    ContactPointTypeConsentHistory: SObjectDefinition$ContactPointTypeConsentHistory;
    ContactPointTypeConsentShare: SObjectDefinition$ContactPointTypeConsentShare;
    ContactRequest: SObjectDefinition$ContactRequest;
    ContactRequestShare: SObjectDefinition$ContactRequestShare;
    ContactShare: SObjectDefinition$ContactShare;
    ContentAsset: SObjectDefinition$ContentAsset;
    ContentBody: SObjectDefinition$ContentBody;
    ContentDistribution: SObjectDefinition$ContentDistribution;
    ContentDistributionView: SObjectDefinition$ContentDistributionView;
    ContentDocument: SObjectDefinition$ContentDocument;
    ContentDocumentFeed: SObjectDefinition$ContentDocumentFeed;
    ContentDocumentHistory: SObjectDefinition$ContentDocumentHistory;
    ContentDocumentLink: SObjectDefinition$ContentDocumentLink;
    ContentFolder: SObjectDefinition$ContentFolder;
    ContentFolderItem: SObjectDefinition$ContentFolderItem;
    ContentFolderLink: SObjectDefinition$ContentFolderLink;
    ContentFolderMember: SObjectDefinition$ContentFolderMember;
    ContentNote: SObjectDefinition$ContentNote;
    ContentVersion: SObjectDefinition$ContentVersion;
    ContentVersionHistory: SObjectDefinition$ContentVersionHistory;
    ContentWorkspace: SObjectDefinition$ContentWorkspace;
    ContentWorkspaceDoc: SObjectDefinition$ContentWorkspaceDoc;
    ContentWorkspaceMember: SObjectDefinition$ContentWorkspaceMember;
    ContentWorkspacePermission: SObjectDefinition$ContentWorkspacePermission;
    Contract: SObjectDefinition$Contract;
    ContractChangeEvent: SObjectDefinition$ContractChangeEvent;
    ContractContactRole: SObjectDefinition$ContractContactRole;
    ContractFeed: SObjectDefinition$ContractFeed;
    ContractHistory: SObjectDefinition$ContractHistory;
    ContractLineItem: SObjectDefinition$ContractLineItem;
    ContractLineItemChangeEvent: SObjectDefinition$ContractLineItemChangeEvent;
    ContractLineItemHistory: SObjectDefinition$ContractLineItemHistory;
    ContractStatus: SObjectDefinition$ContractStatus;
    ConversationContextEntry: SObjectDefinition$ConversationContextEntry;
    ConversationEntry: SObjectDefinition$ConversationEntry;
    Counter__ChangeEvent: SObjectDefinition$Counter__ChangeEvent;
    Counter__c: SObjectDefinition$Counter__c;
    CourseOffering: SObjectDefinition$CourseOffering;
    CourseOfferingFeed: SObjectDefinition$CourseOfferingFeed;
    CourseOfferingHistory: SObjectDefinition$CourseOfferingHistory;
    CourseOfferingShare: SObjectDefinition$CourseOfferingShare;
    CustomBrand: SObjectDefinition$CustomBrand;
    CustomBrandAsset: SObjectDefinition$CustomBrandAsset;
    CustomHelpMenuItem: SObjectDefinition$CustomHelpMenuItem;
    CustomHelpMenuSection: SObjectDefinition$CustomHelpMenuSection;
    DGRequest__e: SObjectDefinition$DGRequest__e;
    Dashboard: SObjectDefinition$Dashboard;
    DashboardComponent: SObjectDefinition$DashboardComponent;
    DashboardComponentFeed: SObjectDefinition$DashboardComponentFeed;
    DashboardFeed: SObjectDefinition$DashboardFeed;
    DataIntegrationRecordPurchasePermission: SObjectDefinition$DataIntegrationRecordPurchasePermission;
    DataType: SObjectDefinition$DataType;
    DataUseLegalBasis: SObjectDefinition$DataUseLegalBasis;
    DataUseLegalBasisHistory: SObjectDefinition$DataUseLegalBasisHistory;
    DataUseLegalBasisShare: SObjectDefinition$DataUseLegalBasisShare;
    DataUsePurpose: SObjectDefinition$DataUsePurpose;
    DataUsePurposeHistory: SObjectDefinition$DataUsePurposeHistory;
    DataUsePurposeShare: SObjectDefinition$DataUsePurposeShare;
    DatacloudAddress: SObjectDefinition$DatacloudAddress;
    DecisionTable: SObjectDefinition$DecisionTable;
    DecisionTableDatasetLink: SObjectDefinition$DecisionTableDatasetLink;
    DecisionTableParameter: SObjectDefinition$DecisionTableParameter;
    DecisionTblDatasetParameter: SObjectDefinition$DecisionTblDatasetParameter;
    DeclinedEventRelation: SObjectDefinition$DeclinedEventRelation;
    DelegatedAccount: SObjectDefinition$DelegatedAccount;
    DelegatedAccountFeed: SObjectDefinition$DelegatedAccountFeed;
    DelegatedAccountHistory: SObjectDefinition$DelegatedAccountHistory;
    DelegatedAccountShare: SObjectDefinition$DelegatedAccountShare;
    DeleteEvent: SObjectDefinition$DeleteEvent;
    Dettaglio_Cronoprogramma__ChangeEvent: SObjectDefinition$Dettaglio_Cronoprogramma__ChangeEvent;
    Dettaglio_Cronoprogramma__Share: SObjectDefinition$Dettaglio_Cronoprogramma__Share;
    Dettaglio_Cronoprogramma__c: SObjectDefinition$Dettaglio_Cronoprogramma__c;
    Dettaglio_Errore__ChangeEvent: SObjectDefinition$Dettaglio_Errore__ChangeEvent;
    Dettaglio_Errore__History: SObjectDefinition$Dettaglio_Errore__History;
    Dettaglio_Errore__Share: SObjectDefinition$Dettaglio_Errore__Share;
    Dettaglio_Errore__c: SObjectDefinition$Dettaglio_Errore__c;
    DialerCallUsage: SObjectDefinition$DialerCallUsage;
    DialerCallUsageShare: SObjectDefinition$DialerCallUsageShare;
    DigitalSignature: SObjectDefinition$DigitalSignature;
    Document: SObjectDefinition$Document;
    DocumentAttachmentMap: SObjectDefinition$DocumentAttachmentMap;
    DuplicateRecordItem: SObjectDefinition$DuplicateRecordItem;
    DuplicateRecordSet: SObjectDefinition$DuplicateRecordSet;
    EmailMessage: SObjectDefinition$EmailMessage;
    EmailMessageChangeEvent: SObjectDefinition$EmailMessageChangeEvent;
    EmailMessageRelation: SObjectDefinition$EmailMessageRelation;
    EmailStatus: SObjectDefinition$EmailStatus;
    EmailTemplate: SObjectDefinition$EmailTemplate;
    EmailTemplateChangeEvent: SObjectDefinition$EmailTemplateChangeEvent;
    EmbeddedServiceDetail: SObjectDefinition$EmbeddedServiceDetail;
    EmbeddedServiceLabel: SObjectDefinition$EmbeddedServiceLabel;
    EngagementChannelType: SObjectDefinition$EngagementChannelType;
    EngagementChannelTypeFeed: SObjectDefinition$EngagementChannelTypeFeed;
    EngagementChannelTypeHistory: SObjectDefinition$EngagementChannelTypeHistory;
    EngagementChannelTypeShare: SObjectDefinition$EngagementChannelTypeShare;
    EnhancedLetterhead: SObjectDefinition$EnhancedLetterhead;
    EnhancedLetterheadFeed: SObjectDefinition$EnhancedLetterheadFeed;
    Entitlement: SObjectDefinition$Entitlement;
    EntitlementChangeEvent: SObjectDefinition$EntitlementChangeEvent;
    EntitlementContact: SObjectDefinition$EntitlementContact;
    EntitlementFeed: SObjectDefinition$EntitlementFeed;
    EntitlementHistory: SObjectDefinition$EntitlementHistory;
    EntitlementTemplate: SObjectDefinition$EntitlementTemplate;
    EntityDefinition: SObjectDefinition$EntityDefinition;
    EntityMilestone: SObjectDefinition$EntityMilestone;
    EntityMilestoneFeed: SObjectDefinition$EntityMilestoneFeed;
    EntityMilestoneHistory: SObjectDefinition$EntityMilestoneHistory;
    EntityParticle: SObjectDefinition$EntityParticle;
    EntitySubscription: SObjectDefinition$EntitySubscription;
    Event: SObjectDefinition$Event;
    EventBusSubscriber: SObjectDefinition$EventBusSubscriber;
    EventChangeEvent: SObjectDefinition$EventChangeEvent;
    EventFeed: SObjectDefinition$EventFeed;
    EventLogFile: SObjectDefinition$EventLogFile;
    EventRelation: SObjectDefinition$EventRelation;
    EventRelationChangeEvent: SObjectDefinition$EventRelationChangeEvent;
    EventWhoRelation: SObjectDefinition$EventWhoRelation;
    Examination: SObjectDefinition$Examination;
    ExaminationFeed: SObjectDefinition$ExaminationFeed;
    ExaminationHistory: SObjectDefinition$ExaminationHistory;
    ExaminationShare: SObjectDefinition$ExaminationShare;
    ExpressionFilter: SObjectDefinition$ExpressionFilter;
    ExpressionFilterCriteria: SObjectDefinition$ExpressionFilterCriteria;
    ExternalEvent: SObjectDefinition$ExternalEvent;
    ExternalEventMapping: SObjectDefinition$ExternalEventMapping;
    ExternalEventMappingShare: SObjectDefinition$ExternalEventMappingShare;
    ExternalSocialAccount: SObjectDefinition$ExternalSocialAccount;
    FeedAttachment: SObjectDefinition$FeedAttachment;
    FeedComment: SObjectDefinition$FeedComment;
    FeedItem: SObjectDefinition$FeedItem;
    FeedLike: SObjectDefinition$FeedLike;
    FeedRevision: SObjectDefinition$FeedRevision;
    FeedSignal: SObjectDefinition$FeedSignal;
    FeedTrackedChange: SObjectDefinition$FeedTrackedChange;
    FieldDefinition: SObjectDefinition$FieldDefinition;
    FinestraTemporale__ChangeEvent: SObjectDefinition$FinestraTemporale__ChangeEvent;
    FinestraTemporale__History: SObjectDefinition$FinestraTemporale__History;
    FinestraTemporale__c: SObjectDefinition$FinestraTemporale__c;
    FiscalYearSettings: SObjectDefinition$FiscalYearSettings;
    FlowDefinitionView: SObjectDefinition$FlowDefinitionView;
    FlowExecutionErrorEvent: SObjectDefinition$FlowExecutionErrorEvent;
    FlowInterview: SObjectDefinition$FlowInterview;
    FlowInterviewLog: SObjectDefinition$FlowInterviewLog;
    FlowInterviewLogEntry: SObjectDefinition$FlowInterviewLogEntry;
    FlowInterviewLogShare: SObjectDefinition$FlowInterviewLogShare;
    FlowInterviewShare: SObjectDefinition$FlowInterviewShare;
    FlowRecordRelation: SObjectDefinition$FlowRecordRelation;
    FlowStageRelation: SObjectDefinition$FlowStageRelation;
    FlowVariableView: SObjectDefinition$FlowVariableView;
    FlowVersionView: SObjectDefinition$FlowVersionView;
    Folder: SObjectDefinition$Folder;
    FolderedContentDocument: SObjectDefinition$FolderedContentDocument;
    ForecastingAdjustment: SObjectDefinition$ForecastingAdjustment;
    ForecastingCategoryMapping: SObjectDefinition$ForecastingCategoryMapping;
    ForecastingDisplayedFamily: SObjectDefinition$ForecastingDisplayedFamily;
    ForecastingFact: SObjectDefinition$ForecastingFact;
    ForecastingItem: SObjectDefinition$ForecastingItem;
    ForecastingOwnerAdjustment: SObjectDefinition$ForecastingOwnerAdjustment;
    ForecastingQuota: SObjectDefinition$ForecastingQuota;
    ForecastingShare: SObjectDefinition$ForecastingShare;
    ForecastingSourceDefinition: SObjectDefinition$ForecastingSourceDefinition;
    ForecastingType: SObjectDefinition$ForecastingType;
    ForecastingTypeSource: SObjectDefinition$ForecastingTypeSource;
    ForecastingTypeToCategory: SObjectDefinition$ForecastingTypeToCategory;
    ForecastingUserPreference: SObjectDefinition$ForecastingUserPreference;
    FormulaFunction: SObjectDefinition$FormulaFunction;
    FormulaFunctionAllowedType: SObjectDefinition$FormulaFunctionAllowedType;
    FormulaFunctionCategory: SObjectDefinition$FormulaFunctionCategory;
    Group: SObjectDefinition$Group;
    GroupMember: SObjectDefinition$GroupMember;
    Holiday: SObjectDefinition$Holiday;
    IPA_Elenco_Pec__ChangeEvent: SObjectDefinition$IPA_Elenco_Pec__ChangeEvent;
    IPA_Elenco_Pec__Share: SObjectDefinition$IPA_Elenco_Pec__Share;
    IPA_Elenco_Pec__c: SObjectDefinition$IPA_Elenco_Pec__c;
    IconDefinition: SObjectDefinition$IconDefinition;
    Idea: SObjectDefinition$Idea;
    IdeaComment: SObjectDefinition$IdeaComment;
    IframeWhiteListUrl: SObjectDefinition$IframeWhiteListUrl;
    Image: SObjectDefinition$Image;
    ImageShare: SObjectDefinition$ImageShare;
    Individual: SObjectDefinition$Individual;
    IndividualApplication: SObjectDefinition$IndividualApplication;
    IndividualApplicationFeed: SObjectDefinition$IndividualApplicationFeed;
    IndividualApplicationHistory: SObjectDefinition$IndividualApplicationHistory;
    IndividualApplicationShare: SObjectDefinition$IndividualApplicationShare;
    IndividualChangeEvent: SObjectDefinition$IndividualChangeEvent;
    IndividualHistory: SObjectDefinition$IndividualHistory;
    IndividualShare: SObjectDefinition$IndividualShare;
    InspectionType: SObjectDefinition$InspectionType;
    InspectionTypeFeed: SObjectDefinition$InspectionTypeFeed;
    InspectionTypeHistory: SObjectDefinition$InspectionTypeHistory;
    InspectionTypeShare: SObjectDefinition$InspectionTypeShare;
    InstalledMobileApp: SObjectDefinition$InstalledMobileApp;
    JournalType: SObjectDefinition$JournalType;
    JournalTypeHistory: SObjectDefinition$JournalTypeHistory;
    JournalTypeShare: SObjectDefinition$JournalTypeShare;
    Junction_Server_Case__ChangeEvent: SObjectDefinition$Junction_Server_Case__ChangeEvent;
    Junction_Server_Case__Share: SObjectDefinition$Junction_Server_Case__Share;
    Junction_Server_Case__c: SObjectDefinition$Junction_Server_Case__c;
    KnowledgeArticle: SObjectDefinition$KnowledgeArticle;
    KnowledgeArticleVersion: SObjectDefinition$KnowledgeArticleVersion;
    KnowledgeArticleVersionHistory: SObjectDefinition$KnowledgeArticleVersionHistory;
    KnowledgeArticleViewStat: SObjectDefinition$KnowledgeArticleViewStat;
    KnowledgeArticleVoteStat: SObjectDefinition$KnowledgeArticleVoteStat;
    Knowledge__DataCategorySelection: SObjectDefinition$Knowledge__DataCategorySelection;
    Knowledge__Feed: SObjectDefinition$Knowledge__Feed;
    Knowledge__ViewStat: SObjectDefinition$Knowledge__ViewStat;
    Knowledge__VoteStat: SObjectDefinition$Knowledge__VoteStat;
    Knowledge__ka: SObjectDefinition$Knowledge__ka;
    Knowledge__kav: SObjectDefinition$Knowledge__kav;
    KnowledgeableUser: SObjectDefinition$KnowledgeableUser;
    Lead: SObjectDefinition$Lead;
    LeadChangeEvent: SObjectDefinition$LeadChangeEvent;
    LeadFeed: SObjectDefinition$LeadFeed;
    LeadHistory: SObjectDefinition$LeadHistory;
    LeadShare: SObjectDefinition$LeadShare;
    LeadStatus: SObjectDefinition$LeadStatus;
    LightningExitByPageMetrics: SObjectDefinition$LightningExitByPageMetrics;
    LightningExperienceTheme: SObjectDefinition$LightningExperienceTheme;
    LightningOnboardingConfig: SObjectDefinition$LightningOnboardingConfig;
    LightningToggleMetrics: SObjectDefinition$LightningToggleMetrics;
    LightningUsageByAppTypeMetrics: SObjectDefinition$LightningUsageByAppTypeMetrics;
    LightningUsageByBrowserMetrics: SObjectDefinition$LightningUsageByBrowserMetrics;
    LightningUsageByFlexiPageMetrics: SObjectDefinition$LightningUsageByFlexiPageMetrics;
    LightningUsageByPageMetrics: SObjectDefinition$LightningUsageByPageMetrics;
    LinkedArticle: SObjectDefinition$LinkedArticle;
    LinkedArticleFeed: SObjectDefinition$LinkedArticleFeed;
    LinkedArticleHistory: SObjectDefinition$LinkedArticleHistory;
    ListEmail: SObjectDefinition$ListEmail;
    ListEmailChangeEvent: SObjectDefinition$ListEmailChangeEvent;
    ListEmailIndividualRecipient: SObjectDefinition$ListEmailIndividualRecipient;
    ListEmailRecipientSource: SObjectDefinition$ListEmailRecipientSource;
    ListEmailShare: SObjectDefinition$ListEmailShare;
    ListView: SObjectDefinition$ListView;
    ListViewChart: SObjectDefinition$ListViewChart;
    ListViewChartInstance: SObjectDefinition$ListViewChartInstance;
    LiveAgentSession: SObjectDefinition$LiveAgentSession;
    LiveAgentSessionHistory: SObjectDefinition$LiveAgentSessionHistory;
    LiveAgentSessionShare: SObjectDefinition$LiveAgentSessionShare;
    LiveChatButton: SObjectDefinition$LiveChatButton;
    LiveChatSensitiveDataRule: SObjectDefinition$LiveChatSensitiveDataRule;
    LiveChatTranscript: SObjectDefinition$LiveChatTranscript;
    LiveChatTranscriptChangeEvent: SObjectDefinition$LiveChatTranscriptChangeEvent;
    LiveChatTranscriptEvent: SObjectDefinition$LiveChatTranscriptEvent;
    LiveChatTranscriptFeed: SObjectDefinition$LiveChatTranscriptFeed;
    LiveChatTranscriptHistory: SObjectDefinition$LiveChatTranscriptHistory;
    LiveChatTranscriptShare: SObjectDefinition$LiveChatTranscriptShare;
    LiveChatTranscriptSkill: SObjectDefinition$LiveChatTranscriptSkill;
    LiveChatUserConfig: SObjectDefinition$LiveChatUserConfig;
    LiveChatUserConfigProfile: SObjectDefinition$LiveChatUserConfigProfile;
    LiveChatUserConfigUser: SObjectDefinition$LiveChatUserConfigUser;
    LiveChatVisitor: SObjectDefinition$LiveChatVisitor;
    Location: SObjectDefinition$Location;
    LocationChangeEvent: SObjectDefinition$LocationChangeEvent;
    LocationFeed: SObjectDefinition$LocationFeed;
    LocationHistory: SObjectDefinition$LocationHistory;
    LocationShare: SObjectDefinition$LocationShare;
    LocationTrustMeasure: SObjectDefinition$LocationTrustMeasure;
    LocationTrustMeasureShare: SObjectDefinition$LocationTrustMeasureShare;
    LoginHistory: SObjectDefinition$LoginHistory;
    LoginIp: SObjectDefinition$LoginIp;
    LookedUpFromActivity: SObjectDefinition$LookedUpFromActivity;
    Macro: SObjectDefinition$Macro;
    MacroChangeEvent: SObjectDefinition$MacroChangeEvent;
    MacroHistory: SObjectDefinition$MacroHistory;
    MacroInstruction: SObjectDefinition$MacroInstruction;
    MacroInstructionChangeEvent: SObjectDefinition$MacroInstructionChangeEvent;
    MacroShare: SObjectDefinition$MacroShare;
    MacroUsage: SObjectDefinition$MacroUsage;
    MacroUsageShare: SObjectDefinition$MacroUsageShare;
    MatchingInformation: SObjectDefinition$MatchingInformation;
    MilestoneType: SObjectDefinition$MilestoneType;
    Milestone_PNRR__ChangeEvent: SObjectDefinition$Milestone_PNRR__ChangeEvent;
    Milestone_PNRR__Share: SObjectDefinition$Milestone_PNRR__Share;
    Milestone_PNRR__c: SObjectDefinition$Milestone_PNRR__c;
    MobileApplicationDetail: SObjectDefinition$MobileApplicationDetail;
    Name: SObjectDefinition$Name;
    NavigationLinkSet: SObjectDefinition$NavigationLinkSet;
    NavigationMenuItem: SObjectDefinition$NavigationMenuItem;
    NavigationMenuItemLocalization: SObjectDefinition$NavigationMenuItemLocalization;
    Network: SObjectDefinition$Network;
    NetworkDiscoverableLogin: SObjectDefinition$NetworkDiscoverableLogin;
    NetworkMember: SObjectDefinition$NetworkMember;
    NetworkMemberGroup: SObjectDefinition$NetworkMemberGroup;
    NetworkPageOverride: SObjectDefinition$NetworkPageOverride;
    NetworkSelfRegistration: SObjectDefinition$NetworkSelfRegistration;
    Note: SObjectDefinition$Note;
    NoteAndAttachment: SObjectDefinition$NoteAndAttachment;
    Notifica__ChangeEvent: SObjectDefinition$Notifica__ChangeEvent;
    Notifica__History: SObjectDefinition$Notifica__History;
    Notifica__c: SObjectDefinition$Notifica__c;
    OauthToken: SObjectDefinition$OauthToken;
    OmniRoutingEventStore: SObjectDefinition$OmniRoutingEventStore;
    OmniSupervisorConfig: SObjectDefinition$OmniSupervisorConfig;
    OmniSupervisorConfigGroup: SObjectDefinition$OmniSupervisorConfigGroup;
    OmniSupervisorConfigProfile: SObjectDefinition$OmniSupervisorConfigProfile;
    OmniSupervisorConfigUser: SObjectDefinition$OmniSupervisorConfigUser;
    OnboardingMetrics: SObjectDefinition$OnboardingMetrics;
    OpenActivity: SObjectDefinition$OpenActivity;
    Opportunity: SObjectDefinition$Opportunity;
    OpportunityChangeEvent: SObjectDefinition$OpportunityChangeEvent;
    OpportunityCompetitor: SObjectDefinition$OpportunityCompetitor;
    OpportunityContactRole: SObjectDefinition$OpportunityContactRole;
    OpportunityContactRoleChangeEvent: SObjectDefinition$OpportunityContactRoleChangeEvent;
    OpportunityFeed: SObjectDefinition$OpportunityFeed;
    OpportunityFieldHistory: SObjectDefinition$OpportunityFieldHistory;
    OpportunityHistory: SObjectDefinition$OpportunityHistory;
    OpportunityLineItem: SObjectDefinition$OpportunityLineItem;
    OpportunityPartner: SObjectDefinition$OpportunityPartner;
    OpportunityShare: SObjectDefinition$OpportunityShare;
    OpportunityStage: SObjectDefinition$OpportunityStage;
    Order: SObjectDefinition$Order;
    OrderChangeEvent: SObjectDefinition$OrderChangeEvent;
    OrderFeed: SObjectDefinition$OrderFeed;
    OrderHistory: SObjectDefinition$OrderHistory;
    OrderItem: SObjectDefinition$OrderItem;
    OrderItemChangeEvent: SObjectDefinition$OrderItemChangeEvent;
    OrderItemFeed: SObjectDefinition$OrderItemFeed;
    OrderItemHistory: SObjectDefinition$OrderItemHistory;
    OrderShare: SObjectDefinition$OrderShare;
    OrderStatus: SObjectDefinition$OrderStatus;
    OrgLifecycleNotification: SObjectDefinition$OrgLifecycleNotification;
    OutgoingEmail: SObjectDefinition$OutgoingEmail;
    OutgoingEmailRelation: SObjectDefinition$OutgoingEmailRelation;
    OwnedContentDocument: SObjectDefinition$OwnedContentDocument;
    OwnerChangeOptionInfo: SObjectDefinition$OwnerChangeOptionInfo;
    Partner: SObjectDefinition$Partner;
    PartnerRole: SObjectDefinition$PartnerRole;
    PartyConsent: SObjectDefinition$PartyConsent;
    PartyConsentChangeEvent: SObjectDefinition$PartyConsentChangeEvent;
    PartyConsentFeed: SObjectDefinition$PartyConsentFeed;
    PartyConsentHistory: SObjectDefinition$PartyConsentHistory;
    PartyConsentShare: SObjectDefinition$PartyConsentShare;
    PendingServiceRouting: SObjectDefinition$PendingServiceRouting;
    PendingServiceRoutingShare: SObjectDefinition$PendingServiceRoutingShare;
    Period: SObjectDefinition$Period;
    PersonEducation: SObjectDefinition$PersonEducation;
    PersonEducationFeed: SObjectDefinition$PersonEducationFeed;
    PersonEducationHistory: SObjectDefinition$PersonEducationHistory;
    PersonEducationShare: SObjectDefinition$PersonEducationShare;
    PersonEmployment: SObjectDefinition$PersonEmployment;
    PersonEmploymentHistory: SObjectDefinition$PersonEmploymentHistory;
    PersonEmploymentShare: SObjectDefinition$PersonEmploymentShare;
    PersonExamination: SObjectDefinition$PersonExamination;
    PersonExaminationFeed: SObjectDefinition$PersonExaminationFeed;
    PersonExaminationHistory: SObjectDefinition$PersonExaminationHistory;
    PersonExaminationShare: SObjectDefinition$PersonExaminationShare;
    PersonalizationTargetInfo: SObjectDefinition$PersonalizationTargetInfo;
    PicklistValueInfo: SObjectDefinition$PicklistValueInfo;
    PlatformAction: SObjectDefinition$PlatformAction;
    PlatformEventUsageMetric: SObjectDefinition$PlatformEventUsageMetric;
    Polygon: SObjectDefinition$Polygon;
    PolygonFeed: SObjectDefinition$PolygonFeed;
    PolygonHistory: SObjectDefinition$PolygonHistory;
    PolygonShare: SObjectDefinition$PolygonShare;
    PreliminaryApplicationRef: SObjectDefinition$PreliminaryApplicationRef;
    PreliminaryApplicationRefFeed: SObjectDefinition$PreliminaryApplicationRefFeed;
    PreliminaryApplicationRefHistory: SObjectDefinition$PreliminaryApplicationRefHistory;
    PreliminaryApplicationRefShare: SObjectDefinition$PreliminaryApplicationRefShare;
    PresenceConfigDeclineReason: SObjectDefinition$PresenceConfigDeclineReason;
    PresenceDeclineReason: SObjectDefinition$PresenceDeclineReason;
    PresenceUserConfig: SObjectDefinition$PresenceUserConfig;
    PresenceUserConfigProfile: SObjectDefinition$PresenceUserConfigProfile;
    PresenceUserConfigUser: SObjectDefinition$PresenceUserConfigUser;
    Pricebook2: SObjectDefinition$Pricebook2;
    Pricebook2ChangeEvent: SObjectDefinition$Pricebook2ChangeEvent;
    Pricebook2History: SObjectDefinition$Pricebook2History;
    PricebookEntry: SObjectDefinition$PricebookEntry;
    PricebookEntryHistory: SObjectDefinition$PricebookEntryHistory;
    ProcessDefinition: SObjectDefinition$ProcessDefinition;
    ProcessException: SObjectDefinition$ProcessException;
    ProcessExceptionEvent: SObjectDefinition$ProcessExceptionEvent;
    ProcessExceptionShare: SObjectDefinition$ProcessExceptionShare;
    ProcessInstance: SObjectDefinition$ProcessInstance;
    ProcessInstanceHistory: SObjectDefinition$ProcessInstanceHistory;
    ProcessInstanceNode: SObjectDefinition$ProcessInstanceNode;
    ProcessInstanceStep: SObjectDefinition$ProcessInstanceStep;
    ProcessInstanceWorkitem: SObjectDefinition$ProcessInstanceWorkitem;
    ProcessNode: SObjectDefinition$ProcessNode;
    Product2: SObjectDefinition$Product2;
    Product2ChangeEvent: SObjectDefinition$Product2ChangeEvent;
    Product2Feed: SObjectDefinition$Product2Feed;
    Product2History: SObjectDefinition$Product2History;
    ProductEntitlementTemplate: SObjectDefinition$ProductEntitlementTemplate;
    ProfileSkill: SObjectDefinition$ProfileSkill;
    ProfileSkillEndorsement: SObjectDefinition$ProfileSkillEndorsement;
    ProfileSkillEndorsementFeed: SObjectDefinition$ProfileSkillEndorsementFeed;
    ProfileSkillEndorsementHistory: SObjectDefinition$ProfileSkillEndorsementHistory;
    ProfileSkillFeed: SObjectDefinition$ProfileSkillFeed;
    ProfileSkillHistory: SObjectDefinition$ProfileSkillHistory;
    ProfileSkillShare: SObjectDefinition$ProfileSkillShare;
    ProfileSkillUser: SObjectDefinition$ProfileSkillUser;
    ProfileSkillUserFeed: SObjectDefinition$ProfileSkillUserFeed;
    ProfileSkillUserHistory: SObjectDefinition$ProfileSkillUserHistory;
    Prompt: SObjectDefinition$Prompt;
    PromptLocalization: SObjectDefinition$PromptLocalization;
    PromptVersion: SObjectDefinition$PromptVersion;
    PromptVersionLocalization: SObjectDefinition$PromptVersionLocalization;
    PublicComplaint: SObjectDefinition$PublicComplaint;
    PublicComplaintFeed: SObjectDefinition$PublicComplaintFeed;
    PublicComplaintHistory: SObjectDefinition$PublicComplaintHistory;
    PublicComplaintShare: SObjectDefinition$PublicComplaintShare;
    Publisher: SObjectDefinition$Publisher;
    PushTopic: SObjectDefinition$PushTopic;
    QueueRoutingConfig: SObjectDefinition$QueueRoutingConfig;
    QueueSobject: SObjectDefinition$QueueSobject;
    QuickText: SObjectDefinition$QuickText;
    QuickTextChangeEvent: SObjectDefinition$QuickTextChangeEvent;
    QuickTextHistory: SObjectDefinition$QuickTextHistory;
    QuickTextShare: SObjectDefinition$QuickTextShare;
    QuickTextUsage: SObjectDefinition$QuickTextUsage;
    QuickTextUsageShare: SObjectDefinition$QuickTextUsageShare;
    Quote: SObjectDefinition$Quote;
    QuoteChangeEvent: SObjectDefinition$QuoteChangeEvent;
    QuoteDocument: SObjectDefinition$QuoteDocument;
    QuoteFeed: SObjectDefinition$QuoteFeed;
    QuoteLineItem: SObjectDefinition$QuoteLineItem;
    QuoteLineItemChangeEvent: SObjectDefinition$QuoteLineItemChangeEvent;
    QuoteShare: SObjectDefinition$QuoteShare;
    QuoteTemplateRichTextData: SObjectDefinition$QuoteTemplateRichTextData;
    ReceivedDocument: SObjectDefinition$ReceivedDocument;
    ReceivedDocumentFeed: SObjectDefinition$ReceivedDocumentFeed;
    ReceivedDocumentHistory: SObjectDefinition$ReceivedDocumentHistory;
    ReceivedDocumentShare: SObjectDefinition$ReceivedDocumentShare;
    RecentlyViewed: SObjectDefinition$RecentlyViewed;
    Recommendation: SObjectDefinition$Recommendation;
    RecommendationChangeEvent: SObjectDefinition$RecommendationChangeEvent;
    RecordAction: SObjectDefinition$RecordAction;
    RecordActionHistory: SObjectDefinition$RecordActionHistory;
    RecordType: SObjectDefinition$RecordType;
    RecordTypeLocalization: SObjectDefinition$RecordTypeLocalization;
    RegAuthorizationTypeProduct: SObjectDefinition$RegAuthorizationTypeProduct;
    RegAuthorizationTypeProductFeed: SObjectDefinition$RegAuthorizationTypeProductFeed;
    RegAuthorizationTypeProductHistory: SObjectDefinition$RegAuthorizationTypeProductHistory;
    RegAuthorizationTypeProductShare: SObjectDefinition$RegAuthorizationTypeProductShare;
    Registro_eventi_ente__ChangeEvent: SObjectDefinition$Registro_eventi_ente__ChangeEvent;
    Registro_eventi_ente__History: SObjectDefinition$Registro_eventi_ente__History;
    Registro_eventi_ente__Share: SObjectDefinition$Registro_eventi_ente__Share;
    Registro_eventi_ente__c: SObjectDefinition$Registro_eventi_ente__c;
    RegulatoryAuthApplication: SObjectDefinition$RegulatoryAuthApplication;
    RegulatoryAuthority: SObjectDefinition$RegulatoryAuthority;
    RegulatoryAuthorityFeed: SObjectDefinition$RegulatoryAuthorityFeed;
    RegulatoryAuthorityHistory: SObjectDefinition$RegulatoryAuthorityHistory;
    RegulatoryAuthorityShare: SObjectDefinition$RegulatoryAuthorityShare;
    RegulatoryAuthorizationType: SObjectDefinition$RegulatoryAuthorizationType;
    RegulatoryAuthorizationTypeShare: SObjectDefinition$RegulatoryAuthorizationTypeShare;
    RegulatoryCode: SObjectDefinition$RegulatoryCode;
    RegulatoryCodeFeed: SObjectDefinition$RegulatoryCodeFeed;
    RegulatoryCodeHistory: SObjectDefinition$RegulatoryCodeHistory;
    RegulatoryCodeViolation: SObjectDefinition$RegulatoryCodeViolation;
    RegulatoryCodeViolationFeed: SObjectDefinition$RegulatoryCodeViolationFeed;
    RegulatoryCodeViolationHistory: SObjectDefinition$RegulatoryCodeViolationHistory;
    RegulatoryCodeViolationShare: SObjectDefinition$RegulatoryCodeViolationShare;
    Report: SObjectDefinition$Report;
    ReportFeed: SObjectDefinition$ReportFeed;
    Rubrica__ChangeEvent: SObjectDefinition$Rubrica__ChangeEvent;
    Rubrica__History: SObjectDefinition$Rubrica__History;
    Rubrica__c: SObjectDefinition$Rubrica__c;
    Scontrol: SObjectDefinition$Scontrol;
    SearchActivity: SObjectDefinition$SearchActivity;
    ServiceChannel: SObjectDefinition$ServiceChannel;
    ServiceChannelStatus: SObjectDefinition$ServiceChannelStatus;
    ServiceContract: SObjectDefinition$ServiceContract;
    ServiceContractChangeEvent: SObjectDefinition$ServiceContractChangeEvent;
    ServiceContractFeed: SObjectDefinition$ServiceContractFeed;
    ServiceContractHistory: SObjectDefinition$ServiceContractHistory;
    ServiceContractShare: SObjectDefinition$ServiceContractShare;
    ServicePresenceStatus: SObjectDefinition$ServicePresenceStatus;
    ServiceResource: SObjectDefinition$ServiceResource;
    ServiceResourceChangeEvent: SObjectDefinition$ServiceResourceChangeEvent;
    ServiceResourceFeed: SObjectDefinition$ServiceResourceFeed;
    ServiceResourceHistory: SObjectDefinition$ServiceResourceHistory;
    ServiceResourceShare: SObjectDefinition$ServiceResourceShare;
    Servizio_Attivo__ChangeEvent: SObjectDefinition$Servizio_Attivo__ChangeEvent;
    Servizio_Attivo__History: SObjectDefinition$Servizio_Attivo__History;
    Servizio_Attivo__Share: SObjectDefinition$Servizio_Attivo__Share;
    Servizio_Attivo__c: SObjectDefinition$Servizio_Attivo__c;
    Servizio_Richiesta__ChangeEvent: SObjectDefinition$Servizio_Richiesta__ChangeEvent;
    Servizio_Richiesta__History: SObjectDefinition$Servizio_Richiesta__History;
    Servizio_Richiesta__c: SObjectDefinition$Servizio_Richiesta__c;
    SharingRecordCollection: SObjectDefinition$SharingRecordCollection;
    SharingRecordCollectionItem: SObjectDefinition$SharingRecordCollectionItem;
    SharingRecordCollectionMember: SObjectDefinition$SharingRecordCollectionMember;
    SharingRecordCollectionShare: SObjectDefinition$SharingRecordCollectionShare;
    Skill: SObjectDefinition$Skill;
    SlaProcess: SObjectDefinition$SlaProcess;
    Slot_proroghe__ChangeEvent: SObjectDefinition$Slot_proroghe__ChangeEvent;
    Slot_proroghe__Share: SObjectDefinition$Slot_proroghe__Share;
    Slot_proroghe__c: SObjectDefinition$Slot_proroghe__c;
    SocialPersona: SObjectDefinition$SocialPersona;
    SocialPersonaHistory: SObjectDefinition$SocialPersonaHistory;
    SocialPost: SObjectDefinition$SocialPost;
    SocialPostChangeEvent: SObjectDefinition$SocialPostChangeEvent;
    SocialPostFeed: SObjectDefinition$SocialPostFeed;
    SocialPostHistory: SObjectDefinition$SocialPostHistory;
    SocialPostShare: SObjectDefinition$SocialPostShare;
    Solution: SObjectDefinition$Solution;
    SolutionFeed: SObjectDefinition$SolutionFeed;
    SolutionHistory: SObjectDefinition$SolutionHistory;
    SolutionStatus: SObjectDefinition$SolutionStatus;
    Stamp: SObjectDefinition$Stamp;
    StampAssignment: SObjectDefinition$StampAssignment;
    StampLocalization: SObjectDefinition$StampLocalization;
    StaticResource: SObjectDefinition$StaticResource;
    StreamingChannel: SObjectDefinition$StreamingChannel;
    StreamingChannelShare: SObjectDefinition$StreamingChannelShare;
    TabDefinition: SObjectDefinition$TabDefinition;
    Task: SObjectDefinition$Task;
    TaskChangeEvent: SObjectDefinition$TaskChangeEvent;
    TaskFeed: SObjectDefinition$TaskFeed;
    TaskPriority: SObjectDefinition$TaskPriority;
    TaskRelation: SObjectDefinition$TaskRelation;
    TaskRelationChangeEvent: SObjectDefinition$TaskRelationChangeEvent;
    TaskStatus: SObjectDefinition$TaskStatus;
    TaskWhoRelation: SObjectDefinition$TaskWhoRelation;
    Testata_Errore__ChangeEvent: SObjectDefinition$Testata_Errore__ChangeEvent;
    Testata_Errore__History: SObjectDefinition$Testata_Errore__History;
    Testata_Errore__Share: SObjectDefinition$Testata_Errore__Share;
    Testata_Errore__c: SObjectDefinition$Testata_Errore__c;
    ThirdPartyAccountLink: SObjectDefinition$ThirdPartyAccountLink;
    TodayGoal: SObjectDefinition$TodayGoal;
    TodayGoalShare: SObjectDefinition$TodayGoalShare;
    Topic: SObjectDefinition$Topic;
    TopicAssignment: SObjectDefinition$TopicAssignment;
    TopicFeed: SObjectDefinition$TopicFeed;
    TopicLocalization: SObjectDefinition$TopicLocalization;
    TrainingCourseParticipant: SObjectDefinition$TrainingCourseParticipant;
    TrainingCourseParticipantFeed: SObjectDefinition$TrainingCourseParticipantFeed;
    TrainingCourseParticipantHistory: SObjectDefinition$TrainingCourseParticipantHistory;
    TrainingCourseParticipantShare: SObjectDefinition$TrainingCourseParticipantShare;
    TransactionJournal: SObjectDefinition$TransactionJournal;
    TransactionJournalChangeEvent: SObjectDefinition$TransactionJournalChangeEvent;
    Translation: SObjectDefinition$Translation;
    TrnCourse: SObjectDefinition$TrnCourse;
    TrnCourseFeed: SObjectDefinition$TrnCourseFeed;
    TrnCourseHistory: SObjectDefinition$TrnCourseHistory;
    TrnCourseShare: SObjectDefinition$TrnCourseShare;
    UiFormulaCriterion: SObjectDefinition$UiFormulaCriterion;
    UiFormulaRule: SObjectDefinition$UiFormulaRule;
    UndecidedEventRelation: SObjectDefinition$UndecidedEventRelation;
    UnitOfMeasure: SObjectDefinition$UnitOfMeasure;
    UnitOfMeasureShare: SObjectDefinition$UnitOfMeasureShare;
    User: SObjectDefinition$User;
    UserAppInfo: SObjectDefinition$UserAppInfo;
    UserAppMenuCustomization: SObjectDefinition$UserAppMenuCustomization;
    UserAppMenuCustomizationShare: SObjectDefinition$UserAppMenuCustomizationShare;
    UserAppMenuItem: SObjectDefinition$UserAppMenuItem;
    UserChangeEvent: SObjectDefinition$UserChangeEvent;
    UserConfigTransferButton: SObjectDefinition$UserConfigTransferButton;
    UserCustomBadge: SObjectDefinition$UserCustomBadge;
    UserCustomBadgeLocalization: SObjectDefinition$UserCustomBadgeLocalization;
    UserEmailPreferredPerson: SObjectDefinition$UserEmailPreferredPerson;
    UserEmailPreferredPersonShare: SObjectDefinition$UserEmailPreferredPersonShare;
    UserFeed: SObjectDefinition$UserFeed;
    UserListView: SObjectDefinition$UserListView;
    UserListViewCriterion: SObjectDefinition$UserListViewCriterion;
    UserLogin: SObjectDefinition$UserLogin;
    UserPermissionAccess: SObjectDefinition$UserPermissionAccess;
    UserPreference: SObjectDefinition$UserPreference;
    UserRecordAccess: SObjectDefinition$UserRecordAccess;
    UserRole: SObjectDefinition$UserRole;
    UserServicePresence: SObjectDefinition$UserServicePresence;
    UserServicePresenceShare: SObjectDefinition$UserServicePresenceShare;
    UserSetupEntityAccess: SObjectDefinition$UserSetupEntityAccess;
    UserShare: SObjectDefinition$UserShare;
    ViolationEnforcementAction: SObjectDefinition$ViolationEnforcementAction;
    ViolationEnforcementActionFeed: SObjectDefinition$ViolationEnforcementActionFeed;
    ViolationEnforcementActionHistory: SObjectDefinition$ViolationEnforcementActionHistory;
    ViolationType: SObjectDefinition$ViolationType;
    ViolationTypeFeed: SObjectDefinition$ViolationTypeFeed;
    ViolationTypeHistory: SObjectDefinition$ViolationTypeHistory;
    ViolationTypeShare: SObjectDefinition$ViolationTypeShare;
    VoiceCall: SObjectDefinition$VoiceCall;
    VoiceCallChangeEvent: SObjectDefinition$VoiceCallChangeEvent;
    VoiceCallFeed: SObjectDefinition$VoiceCallFeed;
    VoiceCallShare: SObjectDefinition$VoiceCallShare;
    VoiceVendorInfo: SObjectDefinition$VoiceVendorInfo;
    VolunteerProject: SObjectDefinition$VolunteerProject;
    VolunteerProjectFeed: SObjectDefinition$VolunteerProjectFeed;
    VolunteerProjectHistory: SObjectDefinition$VolunteerProjectHistory;
    VolunteerProjectShare: SObjectDefinition$VolunteerProjectShare;
    Vote: SObjectDefinition$Vote;
    WorkAccess: SObjectDefinition$WorkAccess;
    WorkAccessShare: SObjectDefinition$WorkAccessShare;
    WorkBadge: SObjectDefinition$WorkBadge;
    WorkBadgeDefinition: SObjectDefinition$WorkBadgeDefinition;
    WorkBadgeDefinitionFeed: SObjectDefinition$WorkBadgeDefinitionFeed;
    WorkBadgeDefinitionHistory: SObjectDefinition$WorkBadgeDefinitionHistory;
    WorkBadgeDefinitionShare: SObjectDefinition$WorkBadgeDefinitionShare;
    WorkOrder: SObjectDefinition$WorkOrder;
    WorkOrderChangeEvent: SObjectDefinition$WorkOrderChangeEvent;
    WorkOrderFeed: SObjectDefinition$WorkOrderFeed;
    WorkOrderHistory: SObjectDefinition$WorkOrderHistory;
    WorkOrderLineItem: SObjectDefinition$WorkOrderLineItem;
    WorkOrderLineItemChangeEvent: SObjectDefinition$WorkOrderLineItemChangeEvent;
    WorkOrderLineItemFeed: SObjectDefinition$WorkOrderLineItemFeed;
    WorkOrderLineItemHistory: SObjectDefinition$WorkOrderLineItemHistory;
    WorkOrderLineItemStatus: SObjectDefinition$WorkOrderLineItemStatus;
    WorkOrderShare: SObjectDefinition$WorkOrderShare;
    WorkOrderStatus: SObjectDefinition$WorkOrderStatus;
    WorkPlan: SObjectDefinition$WorkPlan;
    WorkPlanFeed: SObjectDefinition$WorkPlanFeed;
    WorkPlanHistory: SObjectDefinition$WorkPlanHistory;
    WorkPlanShare: SObjectDefinition$WorkPlanShare;
    WorkPlanTemplate: SObjectDefinition$WorkPlanTemplate;
    WorkPlanTemplateEntry: SObjectDefinition$WorkPlanTemplateEntry;
    WorkPlanTemplateShare: SObjectDefinition$WorkPlanTemplateShare;
    WorkStep: SObjectDefinition$WorkStep;
    WorkStepStatus: SObjectDefinition$WorkStepStatus;
    WorkStepTemplate: SObjectDefinition$WorkStepTemplate;
    WorkStepTemplateShare: SObjectDefinition$WorkStepTemplateShare;
    WorkThanks: SObjectDefinition$WorkThanks;
    WorkThanksShare: SObjectDefinition$WorkThanksShare;
    et4ae5__AggregateLink__ChangeEvent: SObjectDefinition$et4ae5__AggregateLink__ChangeEvent;
    et4ae5__AggregateLink__Share: SObjectDefinition$et4ae5__AggregateLink__Share;
    et4ae5__AggregateLink__c: SObjectDefinition$et4ae5__AggregateLink__c;
    et4ae5__Automated_Send__ChangeEvent: SObjectDefinition$et4ae5__Automated_Send__ChangeEvent;
    et4ae5__Automated_Send__History: SObjectDefinition$et4ae5__Automated_Send__History;
    et4ae5__Automated_Send__Share: SObjectDefinition$et4ae5__Automated_Send__Share;
    et4ae5__Automated_Send__c: SObjectDefinition$et4ae5__Automated_Send__c;
    et4ae5__Business_Unit__ChangeEvent: SObjectDefinition$et4ae5__Business_Unit__ChangeEvent;
    et4ae5__Business_Unit__Share: SObjectDefinition$et4ae5__Business_Unit__Share;
    et4ae5__Business_Unit__c: SObjectDefinition$et4ae5__Business_Unit__c;
    et4ae5__Campaign_Member_Configuration__ChangeEvent: SObjectDefinition$et4ae5__Campaign_Member_Configuration__ChangeEvent;
    et4ae5__Campaign_Member_Configuration__Share: SObjectDefinition$et4ae5__Campaign_Member_Configuration__Share;
    et4ae5__Campaign_Member_Configuration__c: SObjectDefinition$et4ae5__Campaign_Member_Configuration__c;
    et4ae5__Configuration__ChangeEvent: SObjectDefinition$et4ae5__Configuration__ChangeEvent;
    et4ae5__Configuration__Share: SObjectDefinition$et4ae5__Configuration__Share;
    et4ae5__Configuration__c: SObjectDefinition$et4ae5__Configuration__c;
    et4ae5__Email_Linkage__ChangeEvent: SObjectDefinition$et4ae5__Email_Linkage__ChangeEvent;
    et4ae5__Email_Linkage__Share: SObjectDefinition$et4ae5__Email_Linkage__Share;
    et4ae5__Email_Linkage__c: SObjectDefinition$et4ae5__Email_Linkage__c;
    et4ae5__IndividualEmailResult__ChangeEvent: SObjectDefinition$et4ae5__IndividualEmailResult__ChangeEvent;
    et4ae5__IndividualEmailResult__Share: SObjectDefinition$et4ae5__IndividualEmailResult__Share;
    et4ae5__IndividualEmailResult__c: SObjectDefinition$et4ae5__IndividualEmailResult__c;
    et4ae5__IndividualLink__ChangeEvent: SObjectDefinition$et4ae5__IndividualLink__ChangeEvent;
    et4ae5__IndividualLink__Share: SObjectDefinition$et4ae5__IndividualLink__Share;
    et4ae5__IndividualLink__c: SObjectDefinition$et4ae5__IndividualLink__c;
    et4ae5__JB_CDC_Event__e: SObjectDefinition$et4ae5__JB_CDC_Event__e;
    et4ae5__JB_Event__e: SObjectDefinition$et4ae5__JB_Event__e;
    et4ae5__JB_Flow_Event__e: SObjectDefinition$et4ae5__JB_Flow_Event__e;
    et4ae5__MC_CDC_Journey__ChangeEvent: SObjectDefinition$et4ae5__MC_CDC_Journey__ChangeEvent;
    et4ae5__MC_CDC_Journey__Share: SObjectDefinition$et4ae5__MC_CDC_Journey__Share;
    et4ae5__MC_CDC_Journey__c: SObjectDefinition$et4ae5__MC_CDC_Journey__c;
    et4ae5__SMSDefinition__ChangeEvent: SObjectDefinition$et4ae5__SMSDefinition__ChangeEvent;
    et4ae5__SMSDefinition__History: SObjectDefinition$et4ae5__SMSDefinition__History;
    et4ae5__SMSDefinition__Share: SObjectDefinition$et4ae5__SMSDefinition__Share;
    et4ae5__SMSDefinition__c: SObjectDefinition$et4ae5__SMSDefinition__c;
    et4ae5__SMSJunction__ChangeEvent: SObjectDefinition$et4ae5__SMSJunction__ChangeEvent;
    et4ae5__SMSJunction__c: SObjectDefinition$et4ae5__SMSJunction__c;
    et4ae5__SendDefinition__ChangeEvent: SObjectDefinition$et4ae5__SendDefinition__ChangeEvent;
    et4ae5__SendDefinition__History: SObjectDefinition$et4ae5__SendDefinition__History;
    et4ae5__SendDefinition__Share: SObjectDefinition$et4ae5__SendDefinition__Share;
    et4ae5__SendDefinition__c: SObjectDefinition$et4ae5__SendDefinition__c;
    et4ae5__SendJunction__ChangeEvent: SObjectDefinition$et4ae5__SendJunction__ChangeEvent;
    et4ae5__SendJunction__c: SObjectDefinition$et4ae5__SendJunction__c;
    et4ae5__SupportRequest__ChangeEvent: SObjectDefinition$et4ae5__SupportRequest__ChangeEvent;
    et4ae5__SupportRequest__c: SObjectDefinition$et4ae5__SupportRequest__c;
    et4ae5__Triggered_Send_Execution__ChangeEvent: SObjectDefinition$et4ae5__Triggered_Send_Execution__ChangeEvent;
    et4ae5__Triggered_Send_Execution__Share: SObjectDefinition$et4ae5__Triggered_Send_Execution__Share;
    et4ae5__Triggered_Send_Execution__c: SObjectDefinition$et4ae5__Triggered_Send_Execution__c;
    et4ae5__UEBU__ChangeEvent: SObjectDefinition$et4ae5__UEBU__ChangeEvent;
    et4ae5__UEBU__c: SObjectDefinition$et4ae5__UEBU__c;
    et4ae5__abTest__ChangeEvent: SObjectDefinition$et4ae5__abTest__ChangeEvent;
    et4ae5__abTest__Share: SObjectDefinition$et4ae5__abTest__Share;
    et4ae5__abTest__c: SObjectDefinition$et4ae5__abTest__c;
    omnistudio__CardFrameworkConfiguration__ChangeEvent: SObjectDefinition$omnistudio__CardFrameworkConfiguration__ChangeEvent;
    omnistudio__CardFrameworkConfiguration__c: SObjectDefinition$omnistudio__CardFrameworkConfiguration__c;
    omnistudio__DRBatchQueue__ChangeEvent: SObjectDefinition$omnistudio__DRBatchQueue__ChangeEvent;
    omnistudio__DRBatchQueue__Share: SObjectDefinition$omnistudio__DRBatchQueue__Share;
    omnistudio__DRBatchQueue__c: SObjectDefinition$omnistudio__DRBatchQueue__c;
    omnistudio__DRBulkData__ChangeEvent: SObjectDefinition$omnistudio__DRBulkData__ChangeEvent;
    omnistudio__DRBulkData__Share: SObjectDefinition$omnistudio__DRBulkData__Share;
    omnistudio__DRBulkData__c: SObjectDefinition$omnistudio__DRBulkData__c;
    omnistudio__DREncryption__ChangeEvent: SObjectDefinition$omnistudio__DREncryption__ChangeEvent;
    omnistudio__DREncryption__c: SObjectDefinition$omnistudio__DREncryption__c;
    omnistudio__DRWorker__ChangeEvent: SObjectDefinition$omnistudio__DRWorker__ChangeEvent;
    omnistudio__DRWorker__c: SObjectDefinition$omnistudio__DRWorker__c;
    omnistudio__Interface_DRGeneric__ChangeEvent: SObjectDefinition$omnistudio__Interface_DRGeneric__ChangeEvent;
    omnistudio__Interface_DRGeneric__Share: SObjectDefinition$omnistudio__Interface_DRGeneric__Share;
    omnistudio__Interface_DRGeneric__c: SObjectDefinition$omnistudio__Interface_DRGeneric__c;
    omnistudio__TestResult__ChangeEvent: SObjectDefinition$omnistudio__TestResult__ChangeEvent;
    omnistudio__TestResult__Share: SObjectDefinition$omnistudio__TestResult__Share;
    omnistudio__TestResult__c: SObjectDefinition$omnistudio__TestResult__c;
    omnistudio__TriggerSetup__ChangeEvent: SObjectDefinition$omnistudio__TriggerSetup__ChangeEvent;
    omnistudio__TriggerSetup__c: SObjectDefinition$omnistudio__TriggerSetup__c;
    omnistudio__UISettings__ChangeEvent: SObjectDefinition$omnistudio__UISettings__ChangeEvent;
    omnistudio__UISettings__c: SObjectDefinition$omnistudio__UISettings__c;
    omnistudio__VlocityDataPack__ChangeEvent: SObjectDefinition$omnistudio__VlocityDataPack__ChangeEvent;
    omnistudio__VlocityDataPack__Share: SObjectDefinition$omnistudio__VlocityDataPack__Share;
    omnistudio__VlocityDataPack__c: SObjectDefinition$omnistudio__VlocityDataPack__c;
    omnistudio__VlocityDocuSignTemplate__ChangeEvent: SObjectDefinition$omnistudio__VlocityDocuSignTemplate__ChangeEvent;
    omnistudio__VlocityDocuSignTemplate__Share: SObjectDefinition$omnistudio__VlocityDocuSignTemplate__Share;
    omnistudio__VlocityDocuSignTemplate__c: SObjectDefinition$omnistudio__VlocityDocuSignTemplate__c;
    omnistudio__VlocityErrorLogEntry__ChangeEvent: SObjectDefinition$omnistudio__VlocityErrorLogEntry__ChangeEvent;
    omnistudio__VlocityErrorLogEntry__Share: SObjectDefinition$omnistudio__VlocityErrorLogEntry__Share;
    omnistudio__VlocityErrorLogEntry__c: SObjectDefinition$omnistudio__VlocityErrorLogEntry__c;
    omnistudio__VlocityScheduledJob__ChangeEvent: SObjectDefinition$omnistudio__VlocityScheduledJob__ChangeEvent;
    omnistudio__VlocityScheduledJob__History: SObjectDefinition$omnistudio__VlocityScheduledJob__History;
    omnistudio__VlocityScheduledJob__Share: SObjectDefinition$omnistudio__VlocityScheduledJob__Share;
    omnistudio__VlocityScheduledJob__c: SObjectDefinition$omnistudio__VlocityScheduledJob__c;
    omnistudio__VlocityTrackingEntry__ChangeEvent: SObjectDefinition$omnistudio__VlocityTrackingEntry__ChangeEvent;
    omnistudio__VlocityTrackingEntry__Share: SObjectDefinition$omnistudio__VlocityTrackingEntry__Share;
    omnistudio__VlocityTrackingEntry__c: SObjectDefinition$omnistudio__VlocityTrackingEntry__c;
    outfunds__Disbursement__ChangeEvent: SObjectDefinition$outfunds__Disbursement__ChangeEvent;
    outfunds__Disbursement__Feed: SObjectDefinition$outfunds__Disbursement__Feed;
    outfunds__Disbursement__c: SObjectDefinition$outfunds__Disbursement__c;
    outfunds__Funding_Program__ChangeEvent: SObjectDefinition$outfunds__Funding_Program__ChangeEvent;
    outfunds__Funding_Program__Feed: SObjectDefinition$outfunds__Funding_Program__Feed;
    outfunds__Funding_Program__History: SObjectDefinition$outfunds__Funding_Program__History;
    outfunds__Funding_Program__Share: SObjectDefinition$outfunds__Funding_Program__Share;
    outfunds__Funding_Program__c: SObjectDefinition$outfunds__Funding_Program__c;
    outfunds__Funding_Request_Role__ChangeEvent: SObjectDefinition$outfunds__Funding_Request_Role__ChangeEvent;
    outfunds__Funding_Request_Role__c: SObjectDefinition$outfunds__Funding_Request_Role__c;
    outfunds__Funding_Request__ChangeEvent: SObjectDefinition$outfunds__Funding_Request__ChangeEvent;
    outfunds__Funding_Request__Feed: SObjectDefinition$outfunds__Funding_Request__Feed;
    outfunds__Funding_Request__History: SObjectDefinition$outfunds__Funding_Request__History;
    outfunds__Funding_Request__Share: SObjectDefinition$outfunds__Funding_Request__Share;
    outfunds__Funding_Request__c: SObjectDefinition$outfunds__Funding_Request__c;
    outfunds__Requirement__ChangeEvent: SObjectDefinition$outfunds__Requirement__ChangeEvent;
    outfunds__Requirement__Feed: SObjectDefinition$outfunds__Requirement__Feed;
    outfunds__Requirement__History: SObjectDefinition$outfunds__Requirement__History;
    outfunds__Requirement__Share: SObjectDefinition$outfunds__Requirement__Share;
    outfunds__Requirement__c: SObjectDefinition$outfunds__Requirement__c;
    outfunds__Review__ChangeEvent: SObjectDefinition$outfunds__Review__ChangeEvent;
    outfunds__Review__History: SObjectDefinition$outfunds__Review__History;
    outfunds__Review__Share: SObjectDefinition$outfunds__Review__Share;
    outfunds__Review__c: SObjectDefinition$outfunds__Review__c;
    sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__ChangeEvent;
    sfdo_grants__FundRqstCollaboratorInvt__Feed: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__Feed;
    sfdo_grants__FundRqstCollaboratorInvt__History: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__History;
    sfdo_grants__FundRqstCollaboratorInvt__c: SObjectDefinition$sfdo_grants__FundRqstCollaboratorInvt__c;
    sfdo_grants__FundRqstCollaborator__ChangeEvent: SObjectDefinition$sfdo_grants__FundRqstCollaborator__ChangeEvent;
    sfdo_grants__FundRqstCollaborator__Feed: SObjectDefinition$sfdo_grants__FundRqstCollaborator__Feed;
    sfdo_grants__FundRqstCollaborator__History: SObjectDefinition$sfdo_grants__FundRqstCollaborator__History;
    sfdo_grants__FundRqstCollaborator__c: SObjectDefinition$sfdo_grants__FundRqstCollaborator__c;
    sis_LogSPID__ChangeEvent: SObjectDefinition$sis_LogSPID__ChangeEvent;
    sis_LogSPID__Share: SObjectDefinition$sis_LogSPID__Share;
    sis_LogSPID__c: SObjectDefinition$sis_LogSPID__c;
    sis_Municipality__ChangeEvent: SObjectDefinition$sis_Municipality__ChangeEvent;
    sis_Municipality__c: SObjectDefinition$sis_Municipality__c;
  };
}
